'use strict';

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var fs = _interopDefault(require('fs'));
var path = _interopDefault(require('path'));
var Stream = _interopDefault(require('stream'));
var http = _interopDefault(require('http'));
var Url = _interopDefault(require('url'));
var https = _interopDefault(require('https'));
var zlib = _interopDefault(require('zlib'));

function noop() { }
function run(fn) {
    return fn();
}
function blank_object() {
    return Object.create(null);
}
function run_all(fns) {
    fns.forEach(run);
}
function safe_not_equal(a, b) {
    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
}
function subscribe(store, ...callbacks) {
    if (store == null) {
        return noop;
    }
    const unsub = store.subscribe(...callbacks);
    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
}
function get_store_value(store) {
    let value;
    subscribe(store, _ => value = _)();
    return value;
}

let current_component;
function set_current_component(component) {
    current_component = component;
}
function get_current_component() {
    if (!current_component)
        throw new Error(`Function called outside component initialization`);
    return current_component;
}
function onMount(fn) {
    get_current_component().$$.on_mount.push(fn);
}
function onDestroy(fn) {
    get_current_component().$$.on_destroy.push(fn);
}
function setContext(key, context) {
    get_current_component().$$.context.set(key, context);
}
function getContext(key) {
    return get_current_component().$$.context.get(key);
}
const escaped = {
    '"': '&quot;',
    "'": '&#39;',
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;'
};
function escape(html) {
    return String(html).replace(/["'&<>]/g, match => escaped[match]);
}
function each(items, fn) {
    let str = '';
    for (let i = 0; i < items.length; i += 1) {
        str += fn(items[i], i);
    }
    return str;
}
const missing_component = {
    $$render: () => ''
};
function validate_component(component, name) {
    if (!component || !component.$$render) {
        if (name === 'svelte:component')
            name += ' this={...}';
        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);
    }
    return component;
}
let on_destroy;
function create_ssr_component(fn) {
    function $$render(result, props, bindings, slots) {
        const parent_component = current_component;
        const $$ = {
            on_destroy,
            context: new Map(parent_component ? parent_component.$$.context : []),
            // these will be immediately discarded
            on_mount: [],
            before_update: [],
            after_update: [],
            callbacks: blank_object()
        };
        set_current_component({ $$ });
        const html = fn(result, props, bindings, slots);
        set_current_component(parent_component);
        return html;
    }
    return {
        render: (props = {}, options = {}) => {
            on_destroy = [];
            const result = { title: '', head: '', css: new Set() };
            const html = $$render(result, props, {}, options);
            run_all(on_destroy);
            return {
                html,
                css: {
                    code: Array.from(result.css).map(css => css.code).join('\n'),
                    map: null // TODO
                },
                head: result.title + result.head
            };
        },
        $$render
    };
}
function add_attribute(name, value, boolean) {
    if (value == null || (boolean && !value))
        return '';
    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `"${value}"`}`}`;
}

/* src/Components/Page.svelte generated by Svelte v3.18.2 */

const css = {
	code: ".page.svelte-1704sr5{padding-bottom:8rem}.page.svelte-1704sr5>h1{font-size:2em;margin:1.5em 1em 1em 1em;text-align:center}",
	map: "{\"version\":3,\"file\":\"Page.svelte\",\"sources\":[\"Page.svelte\"],\"sourcesContent\":[\"<style>\\n  .page{\\n    padding-bottom: 8rem;\\n  }\\n\\n  .page > :global(h1) {\\n    font-size: 2em;\\n    margin: 1.5em 1em 1em 1em;\\n    text-align: center;\\n\\n  }\\n</style>\\n\\n<script>\\n  import {fly} from \\\"svelte/transition\\\";\\n  export let radiolist = false;\\n  export let meta;\\n</script>\\n\\n<svelte:head>\\n  <title>{meta.title}</title>\\n\\t<meta name=\\\"description\\\" content={meta.desc}>\\n\\t<meta property=\\\"og:title\\\" content={meta.title}>\\n\\t<meta property=\\\"og:description\\\" content={meta.desc}>\\n\\t<link href={meta.canonical} rel=\\\"canonical\\\" />\\n</svelte:head>\\n\\n<div class=\\\"page\\\" class:radiolist in:fly|intro={{x: -25, duration: 300}}>\\n  <slot/>\\n</div>\"],\"names\":[],\"mappings\":\"AACE,oBAAK,CAAC,AACJ,cAAc,CAAE,IAAI,AACtB,CAAC,AAED,oBAAK,CAAW,EAAE,AAAE,CAAC,AACnB,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACzB,UAAU,CAAE,MAAM,AAEpB,CAAC\"}"
};

const Page = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { radiolist = false } = $$props;
	let { meta } = $$props;
	if ($$props.radiolist === void 0 && $$bindings.radiolist && radiolist !== void 0) $$bindings.radiolist(radiolist);
	if ($$props.meta === void 0 && $$bindings.meta && meta !== void 0) $$bindings.meta(meta);
	$$result.css.add(css);

	return `${($$result.head += `${($$result.title = `<title>${escape(meta.title)}</title>`, "")}<meta name="${"description"}"${add_attribute("content", meta.desc, 0)}><meta property="${"og:title"}"${add_attribute("content", meta.title, 0)}><meta property="${"og:description"}"${add_attribute("content", meta.desc, 0)}><link${add_attribute("href", meta.canonical, 0)} rel="${"canonical"}">`, "")}

<div class="${["page svelte-1704sr5", radiolist ? "radiolist" : ""].join(" ").trim()}">
  ${$$slots.default ? $$slots.default({}) : ``}
</div>`;
});

/* src/Components/CountryFlag.svelte generated by Svelte v3.18.2 */

const css$1 = {
	code: "img.svelte-1neb7v0{width:24px;height:24px;margin-right:12px}",
	map: "{\"version\":3,\"file\":\"CountryFlag.svelte\",\"sources\":[\"CountryFlag.svelte\"],\"sourcesContent\":[\"<style>\\n  img{\\n    width: 24px;\\n    height: 24px;\\n    margin-right: 12px;\\n  }\\n</style>\\n\\n<script>\\n  export let size;\\n  export let style = \\\"shiny\\\"; // or flat\\n  export let countryCode;\\n\\n  const legacy = `/static/img/countryflags/legacy/${style}.${countryCode}.${size}.png`;\\n  //const webp = `/static/img/countryflags/webp/${style}.${countryCode}.${size}.png.webp`;\\n</script>\\n\\n<img src={legacy} alt={countryCode}>\\n\\n<!--\\n<picture>\\n  <source srcset={webp} type=\\\"image/webp\\\">\\n  <source srcset={legacy} type=\\\"image/png\\\">\\n  <img src={legacy} alt={countryCode}>\\n</picture>\\n-->\"],\"names\":[],\"mappings\":\"AACE,kBAAG,CAAC,AACF,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,IAAI,AACpB,CAAC\"}"
};

const CountryFlag = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size } = $$props;
	let { style = "shiny" } = $$props; // or flat
	let { countryCode } = $$props;
	const legacy = `/static/img/countryflags/legacy/${style}.${countryCode}.${size}.png`;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.style === void 0 && $$bindings.style && style !== void 0) $$bindings.style(style);
	if ($$props.countryCode === void 0 && $$bindings.countryCode && countryCode !== void 0) $$bindings.countryCode(countryCode);
	$$result.css.add(css$1);

	return `<img${add_attribute("src", legacy, 0)}${add_attribute("alt", countryCode, 0)} class="${"svelte-1neb7v0"}">

`;
});

const canonical = url => `https://openradio.app${url}`; 

const indexUrl = ({lang}) => `/${lang}`;

const countryUrl = ({lang, countryCode}) => `/${lang}-${countryCode}`;

const searchActionUrl = ({lang, countryCode}) => {
  return (
    countryCode ? 
      countryUrl({lang, countryCode}) :
      indexUrl({lang})
    ) + "/search";
};

const searchUrl = ({lang, countryCode, q}) => searchActionUrl({lang, countryCode}) + "?q=" + encodeURIComponent(q);

const stationUrl = ({lang, station}) => countryUrl({lang, countryCode: station.countryCode}) + "/radio/" + station.slug;

const stationImgUrl = (size, station) => station.origin != "mt" ? [
  `/static/img/stations/rw/webp/${size}/${station.countryCode}.${station.slug}.png.webp`,
  `/static/img/stations/rw/png/${size}/${station.countryCode}.${station.slug}.png`
] : [
  `/static/img/stations/mt/webp/${size}/${station.mt.img.lt}.webp`,
  `/static/img/stations/mt/jpg/${size}/${station.mt.img.lt}.jpg`,
];

const langsUrl = ({lang}) => indexUrl({lang}) + "/languages";

const recentsUrl = ({lang}) => indexUrl({lang}) + "/recents";

const signalListUrl = ({lang, countryCode, type}) => {
  return (countryCode ? countryUrl({lang, countryCode}) : indexUrl({lang}))
         + "/radio-" + type;
};

const signalUrl = ({lang, countryCode, type, frec}) => {
  return signalListUrl({lang, countryCode, type}) + "/" + frec;
};

const subscriber_queue = [];
/**
 * Creates a `Readable` store that allows reading by subscription.
 * @param value initial value
 * @param {StartStopNotifier}start start and stop notifications for subscriptions
 */
function readable(value, start) {
    return {
        subscribe: writable(value, start).subscribe,
    };
}
/**
 * Create a `Writable` store that allows both updating and reading by subscription.
 * @param {*=}value initial value
 * @param {StartStopNotifier=}start start and stop notifications for subscriptions
 */
function writable(value, start = noop) {
    let stop;
    const subscribers = [];
    function set(new_value) {
        if (safe_not_equal(value, new_value)) {
            value = new_value;
            if (stop) { // store is ready
                const run_queue = !subscriber_queue.length;
                for (let i = 0; i < subscribers.length; i += 1) {
                    const s = subscribers[i];
                    s[1]();
                    subscriber_queue.push(s, value);
                }
                if (run_queue) {
                    for (let i = 0; i < subscriber_queue.length; i += 2) {
                        subscriber_queue[i][0](subscriber_queue[i + 1]);
                    }
                    subscriber_queue.length = 0;
                }
            }
        }
    }
    function update(fn) {
        set(fn(value));
    }
    function subscribe(run, invalidate = noop) {
        const subscriber = [run, invalidate];
        subscribers.push(subscriber);
        if (subscribers.length === 1) {
            stop = start(set) || noop;
        }
        run(value);
        return () => {
            const index = subscribers.indexOf(subscriber);
            if (index !== -1) {
                subscribers.splice(index, 1);
            }
            if (subscribers.length === 0) {
                stop();
                stop = null;
            }
        };
    }
    return { set, update, subscribe };
}

const CONTEXT_KEY = {};

const preload = () => ({});

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var stringFormat = createCommonjsModule(function (module) {
void function(global) {

  //  ValueError :: String -> Error
  function ValueError(message) {
    var err = new Error(message);
    err.name = 'ValueError';
    return err;
  }

  //  create :: Object -> String,*... -> String
  function create(transformers) {
    return function(template) {
      var args = Array.prototype.slice.call(arguments, 1);
      var idx = 0;
      var state = 'UNDEFINED';

      return template.replace(
        /([{}])\1|[{](.*?)(?:!(.+?))?[}]/g,
        function(match, literal, _key, xf) {
          if (literal != null) {
            return literal;
          }
          var key = _key;
          if (key.length > 0) {
            if (state === 'IMPLICIT') {
              throw ValueError('cannot switch from ' +
                               'implicit to explicit numbering');
            }
            state = 'EXPLICIT';
          } else {
            if (state === 'EXPLICIT') {
              throw ValueError('cannot switch from ' +
                               'explicit to implicit numbering');
            }
            state = 'IMPLICIT';
            key = String(idx);
            idx += 1;
          }

          //  1.  Split the key into a lookup path.
          //  2.  If the first path component is not an index, prepend '0'.
          //  3.  Reduce the lookup path to a single result. If the lookup
          //      succeeds the result is a singleton array containing the
          //      value at the lookup path; otherwise the result is [].
          //  4.  Unwrap the result by reducing with '' as the default value.
          var path = key.split('.');
          var value = (/^\d+$/.test(path[0]) ? path : ['0'].concat(path))
            .reduce(function(maybe, key) {
              return maybe.reduce(function(_, x) {
                return x != null && key in Object(x) ?
                  [typeof x[key] === 'function' ? x[key]() : x[key]] :
                  [];
              }, []);
            }, [args])
            .reduce(function(_, x) { return x; }, '');

          if (xf == null) {
            return value;
          } else if (Object.prototype.hasOwnProperty.call(transformers, xf)) {
            return transformers[xf](value);
          } else {
            throw ValueError('no transformer named "' + xf + '"');
          }
        }
      );
    };
  }

  //  format :: String,*... -> String
  var format = create({});

  //  format.create :: Object -> String,*... -> String
  format.create = create;

  //  format.extend :: Object,Object -> ()
  format.extend = function(prototype, transformers) {
    var $format = create(transformers);
    prototype.format = function() {
      var args = Array.prototype.slice.call(arguments);
      args.unshift(this);
      return $format.apply(global, args);
    };
  };

  /* istanbul ignore else */
  {
    module.exports = format;
  }

}.call(commonjsGlobal, commonjsGlobal);
});

/*!
 * isobject <https://github.com/jonschlinkert/isobject>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

var isobject = function isObject(val) {
  return val != null && typeof val === 'object' && Array.isArray(val) === false;
};

/*!
 * get-value <https://github.com/jonschlinkert/get-value>
 *
 * Copyright (c) 2014-2018, Jon Schlinkert.
 * Released under the MIT License.
 */



var getValue = function(target, path, options) {
  if (!isobject(options)) {
    options = { default: options };
  }

  if (!isValidObject(target)) {
    return typeof options.default !== 'undefined' ? options.default : target;
  }

  if (typeof path === 'number') {
    path = String(path);
  }

  const isArray = Array.isArray(path);
  const isString = typeof path === 'string';
  const splitChar = options.separator || '.';
  const joinChar = options.joinChar || (typeof splitChar === 'string' ? splitChar : '.');

  if (!isString && !isArray) {
    return target;
  }

  if (isString && path in target) {
    return isValid(path, target, options) ? target[path] : options.default;
  }

  let segs = isArray ? path : split(path, splitChar, options);
  let len = segs.length;
  let idx = 0;

  do {
    let prop = segs[idx];
    if (typeof prop === 'number') {
      prop = String(prop);
    }

    while (prop && prop.slice(-1) === '\\') {
      prop = join([prop.slice(0, -1), segs[++idx] || ''], joinChar, options);
    }

    if (prop in target) {
      if (!isValid(prop, target, options)) {
        return options.default;
      }

      target = target[prop];
    } else {
      let hasProp = false;
      let n = idx + 1;

      while (n < len) {
        prop = join([prop, segs[n++]], joinChar, options);

        if ((hasProp = prop in target)) {
          if (!isValid(prop, target, options)) {
            return options.default;
          }

          target = target[prop];
          idx = n - 1;
          break;
        }
      }

      if (!hasProp) {
        return options.default;
      }
    }
  } while (++idx < len && isValidObject(target));

  if (idx === len) {
    return target;
  }

  return options.default;
};

function join(segs, joinChar, options) {
  if (typeof options.join === 'function') {
    return options.join(segs);
  }
  return segs[0] + joinChar + segs[1];
}

function split(path, splitChar, options) {
  if (typeof options.split === 'function') {
    return options.split(path);
  }
  return path.split(splitChar);
}

function isValid(key, target, options) {
  if (typeof options.isValid === 'function') {
    return options.isValid(key, target);
  }
  return true;
}

function isValidObject(val) {
  return isobject(val) || Array.isArray(val) || typeof val === 'function';
}

var ar = {
	code: "ar",
	native: "اللغة العربية",
	en: "Arabic"
};
var az = {
	code: "az",
	native: "azərbaycan dili",
	en: "Azerbaijani"
};
var be = {
	code: "be",
	native: "беларуская мова",
	en: "Belarusian"
};
var bg = {
	code: "bg",
	native: "български език",
	en: "Bulgarian"
};
var bs = {
	code: "bs",
	native: "bosanski jezik",
	en: "Bosnian"
};
var ca = {
	code: "ca",
	native: "català",
	en: "Catalan"
};
var cs = {
	code: "cs",
	native: "čeština",
	en: "Czech"
};
var da = {
	code: "da",
	native: "dansk",
	en: "Danish"
};
var de = {
	code: "de",
	native: "Deutsch",
	en: "German"
};
var el = {
	code: "el",
	native: "Ελληνικά",
	en: "Greek"
};
var en = {
	code: "en",
	native: "English",
	en: "English"
};
var es = {
	code: "es",
	native: "Español",
	en: "Spanish"
};
var et = {
	code: "et",
	native: "eesti",
	en: "Estonian"
};
var fa = {
	code: "fa",
	native: "فارسی",
	en: "Persian"
};
var fi = {
	code: "fi",
	native: "suomi",
	en: "Finnish"
};
var fr = {
	code: "fr",
	native: "Français",
	en: "French"
};
var he = {
	code: "he",
	native: "עברית",
	en: "Hebrew"
};
var hr = {
	code: "hr",
	native: "hrvatski jezik",
	en: "Croatian"
};
var hu = {
	code: "hu",
	native: "magyar",
	en: "Hungarian"
};
var hy = {
	code: "hy",
	native: "Հայերեն",
	en: "Armenian"
};
var id = {
	code: "id",
	native: "Indonesian",
	en: "Indonesian"
};
var it = {
	code: "it",
	native: "Italiano",
	en: "Italian"
};
var ja = {
	code: "ja",
	native: "日本語",
	en: "Japanese"
};
var ka = {
	code: "ka",
	native: "ქართული",
	en: "Georgian"
};
var kk = {
	code: "kk",
	native: "қазақ тілі",
	en: "Kazakh"
};
var ko = {
	code: "ko",
	native: "한국어",
	en: "Korean"
};
var ky = {
	code: "ky",
	native: "Кыргызча",
	en: "Kyrgyz"
};
var lt = {
	code: "lt",
	native: "lietuvių kalba",
	en: "Lithuanian"
};
var lv = {
	code: "lv",
	native: "latviešu valoda",
	en: "Latvian"
};
var mk = {
	code: "mk",
	native: "македонски јазик",
	en: "Macedonian"
};
var mn = {
	code: "mn",
	native: "Монгол хэл",
	en: "Mongolian"
};
var nb = {
	code: "nb",
	native: "Norsk bokmål",
	en: "Norwegian Bokmål"
};
var nl = {
	code: "nl",
	native: "Nederlands",
	en: "Dutch"
};
var nn = {
	code: "nn",
	native: "Norsk nynorsk",
	en: "Norwegian Nynorsk"
};
var pl = {
	code: "pl",
	native: "język polski",
	en: "Polish"
};
var pt = {
	code: "pt",
	native: "Português",
	en: "Portuguese"
};
var ro = {
	code: "ro",
	native: "Română",
	en: "Romanian"
};
var ru = {
	code: "ru",
	native: "Русский",
	en: "Russian"
};
var sk = {
	code: "sk",
	native: "slovenčina",
	en: "Slovak"
};
var sl = {
	code: "sl",
	native: "slovenski jezik",
	en: "Slovene"
};
var sr = {
	code: "sr",
	native: "српски језик",
	en: "Serbian"
};
var sv = {
	code: "sv",
	native: "svenska",
	en: "Swedish"
};
var th = {
	code: "th",
	native: "ไทย",
	en: "Thai"
};
var tr = {
	code: "tr",
	native: "Türkçe",
	en: "Turkish"
};
var uk = {
	code: "uk",
	native: "Українська",
	en: "Ukrainian"
};
var ur = {
	code: "ur",
	native: "اردو",
	en: "Urdu"
};
var uz = {
	code: "uz",
	native: "Ўзбек",
	en: "Uzbek"
};
var vi = {
	code: "vi",
	native: "Tiếng Việt",
	en: "Vietnamese"
};
var zh = {
	code: "zh",
	native: "中文",
	en: "Chinese"
};
var map = {
	ar: ar,
	az: az,
	be: be,
	bg: bg,
	bs: bs,
	ca: ca,
	cs: cs,
	da: da,
	de: de,
	el: el,
	en: en,
	es: es,
	et: et,
	fa: fa,
	fi: fi,
	fr: fr,
	he: he,
	hr: hr,
	hu: hu,
	hy: hy,
	id: id,
	it: it,
	ja: ja,
	ka: ka,
	kk: kk,
	ko: ko,
	ky: ky,
	lt: lt,
	lv: lv,
	mk: mk,
	mn: mn,
	nb: nb,
	nl: nl,
	nn: nn,
	pl: pl,
	pt: pt,
	ro: ro,
	ru: ru,
	sk: sk,
	sl: sl,
	sr: sr,
	sv: sv,
	th: th,
	tr: tr,
	uk: uk,
	ur: ur,
	uz: uz,
	vi: vi,
	zh: zh
};

const notFoundKeys = new Set();

const formatter = locale => (key, params = {}) => {
  //console.log(locale.lang, key);
  const o = getValue(locale, key);
  
  if(typeof o !== "string"){
    if(!notFoundKeys.has()){
      notFoundKeys.add(key);
      console.log("[$trans] key not found:" + JSON.stringify(key));
    }
    return key;
  }

  return stringFormat(o, params);
};

// return always the same stores for the same session
// instead of creating new stores every time
const memo = new WeakMap();

const stores = () => {
  const { page, session } = stores$1$1();
  
  if(memo.has(session))
    return memo.get(session);
  
  const $session = get_store_value(session);
  const $page = get_store_value(page);
  
  const $lang = $session.lang;
  const $trans = formatter($session.locale);

  const $countryCode = $page.params.langCountry && $page.params.langCountry.split("-")[1];
  const countryCode = writable($countryCode);

  const $country = $session.country;

  const cache = {
    trans: {[$lang]: $trans},
    countries: $countryCode && $country ? {[$countryCode]: $country} : {},
  };

  const lang = writable($lang);

  const trans = readable($trans, set => {
    lang.subscribe(async $lang => {
      if(cache.trans.hasOwnProperty($lang))
        set(cache.trans[$lang]);
    });
  });
  
  page.subscribe($page => {
    if($page.params.lang){
      if(map.hasOwnProperty($page.params.lang)){
        lang.set($page.params.lang);
        countryCode.set(null);
      }
    } else if($page.params.langCountry) {
      const [$lang, $countryCode] = $page.params.langCountry.split("-");
      if(map.hasOwnProperty($lang)){
        lang.set($lang);
      }
      countryCode.set($countryCode);
    }
  });


  const country = writable($country);
  countryCode.subscribe(async $countryCode => {
    if(!$countryCode){
      country.set(null);
    } else if(cache.countries.hasOwnProperty($countryCode)){
      country.set(cache.countries[$countryCode]);
    }
  });


  const helper = {lang, trans, countryCode, country};

  memo.set(session, helper);

  return helper;
};

/* src/Components/TopbarTitle.svelte generated by Svelte v3.18.2 */

const css$2 = {
	code: ".topbar-title.svelte-1o1khzl{flex:1;font-size:1.25em;display:flex;flex-direction:row;direction:ltr}a.svelte-1o1khzl{display:flex;flex-direction:row}a.svelte-1o1khzl picture{width:24px;height:24px;margin-right:0.5em}.lite.svelte-1o1khzl{color:rgba(255, 255, 255, 0.5)}",
	map: "{\"version\":3,\"file\":\"TopbarTitle.svelte\",\"sources\":[\"TopbarTitle.svelte\"],\"sourcesContent\":[\"<style>\\n  .topbar-title {\\n    flex: 1;\\n    font-size: 1.25em;\\n    display: flex;\\n    flex-direction: row;\\n    direction: ltr;\\n  }\\n\\n  a{\\n    display: flex;\\n    flex-direction: row;\\n  }\\n\\n  a :global(picture){\\n    width: 24px;\\n    height: 24px;\\n    margin-right: 0.5em;\\n  }\\n\\n  /*\\n  .flag{\\n    width: 24px;\\n    height: 24px;\\n    margin-right: 0.5em;\\n    //transform: translateY(-0.1em);\\n  }\\n  */\\n\\n  .lite {\\n    color: rgba(255, 255, 255, 0.5);\\n  }\\n\\n  /*\\n  .arrow{\\n    margin: 0 0.25em; \\n  }\\n  */\\n</style>\\n\\n<script>\\n  import CountryFlag from \\\"/Components/CountryFlag.svelte\\\";\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {trans, lang, countryCode} = i18n.stores();\\n  \\n  import {flyRight} from \\\"svelte-layout-aware-transitions\\\";\\n\\n  import {indexUrl, countryUrl} from \\\"/Common/urls\\\";\\n</script>\\n\\n<div class=\\\"topbar-title\\\">\\n  {#if $countryCode}\\n    <a transition:flyRight|local={{}} class=\\\"no-a\\\" href={countryUrl({lang: $lang, countryCode: $countryCode})} title={$trans(`countries.${$countryCode}`)}>\\n      <CountryFlag size={24} countryCode={$countryCode} />\\n    </a>\\n  {/if}\\n  <a class=\\\"no-a\\\" href={indexUrl({lang: $lang})}>openradio<span class=\\\"lite\\\">.app</span></a>\\n</div>\\n\\n\\n\\n\"],\"names\":[],\"mappings\":\"AACE,aAAa,eAAC,CAAC,AACb,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,gBAAC,CAAC,AACA,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AAED,gBAAC,CAAC,AAAQ,OAAO,AAAC,CAAC,AACjB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,YAAY,CAAE,KAAK,AACrB,CAAC,AAWD,KAAK,eAAC,CAAC,AACL,KAAK,CAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACjC,CAAC\"}"
};

const TopbarTitle = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $countryCode;
	let $lang;
	let $trans;
	const { trans, lang, countryCode } = stores();
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	$$result.css.add(css$2);
	$countryCode = get_store_value(countryCode);
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);

	return `<div class="${"topbar-title svelte-1o1khzl"}">
  ${$countryCode
	? `<a class="${"no-a svelte-1o1khzl"}"${add_attribute("href", countryUrl({ lang: $lang, countryCode: $countryCode }), 0)}${add_attribute("title", $trans(`countries.${$countryCode}`), 0)}>
      ${validate_component(CountryFlag, "CountryFlag").$$render($$result, { size: 24, countryCode: $countryCode }, {}, {})}
    </a>`
	: ``}
  <a class="${"no-a svelte-1o1khzl"}"${add_attribute("href", indexUrl({ lang: $lang }), 0)}>openradio<span class="${"lite svelte-1o1khzl"}">.app</span></a>
</div>`;
});

const playerState = writable({});

let recentList;

{
  recentList = writable([]);
}

/* src/Components/Slider.svelte generated by Svelte v3.18.2 */

const css$3 = {
	code: ".slider.svelte-gvsne5{width:100%;height:0.25em;border-radius:2px;background:currentColor;cursor:pointer;position:relative}.thumb.svelte-gvsne5{position:absolute;top:50%;transform:translate(-50%, -50%);height:0.5em;width:0.5em;border-radius:0.5em;background:#fff;box-shadow:rgba(0,0,0,0.25) 0 0 2px 2px}",
	map: "{\"version\":3,\"file\":\"Slider.svelte\",\"sources\":[\"Slider.svelte\"],\"sourcesContent\":[\"<style>\\n.slider{\\n    width: 100%;\\n    height: 0.25em;\\n    border-radius: 2px;\\n    background: currentColor;\\n    cursor: pointer;\\n    position: relative;\\n  }\\n\\n  .thumb{\\n    position: absolute;\\n    top: 50%;\\n    transform: translate(-50%, -50%);\\n    height: 0.5em;\\n    width: 0.5em;\\n    border-radius: 0.5em;\\n    background: #fff;\\n    box-shadow: rgba(0,0,0,0.25) 0 0 2px 2px;\\n  }\\n</style>\\n\\n<script>\\n  export let value = 0;\\n  let slider;\\n\\n  const handleDown = (event) => {\\n    \\n    const handleEnd = (event) => {\\n      document.removeEventListener(\\\"pointercancel\\\", handleEnd);\\n      document.removeEventListener(\\\"pointerup\\\", handleEnd);\\n      document.removeEventListener(\\\"pointermove\\\", handleMove);\\n    }\\n\\n    const handleMove = (event) => {\\n      const rect = slider.getBoundingClientRect();\\n      value = Math.max(0, Math.min(1, (event.x - rect.x) / rect.width ));\\n    }\\n\\n    document.addEventListener(\\\"pointermove\\\", handleMove)\\n    document.addEventListener(\\\"pointercancel\\\", handleEnd);\\n    document.addEventListener(\\\"pointerup\\\", handleEnd);\\n\\n    handleMove(event);\\n  }\\n\\n</script>\\n\\n<div bind:this={slider} class=\\\"slider\\\" on:pointerdown|preventDefault={handleDown}>\\n  <div class=\\\"thumb\\\" style=\\\"left: {value * 100}%\\\"></div>\\n</div>\"],\"names\":[],\"mappings\":\"AACA,qBAAO,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,MAAM,CACd,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,YAAY,CACxB,MAAM,CAAE,OAAO,CACf,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,oBAAM,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,GAAG,CACR,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAChC,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,aAAa,CAAE,KAAK,CACpB,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,AAC1C,CAAC\"}"
};

const Slider = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { value = 0 } = $$props;
	let slider;

	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	$$result.css.add(css$3);

	return `<div class="${"slider svelte-gvsne5"}"${add_attribute("this", slider, 1)}>
  <div class="${"thumb svelte-gvsne5"}" style="${"left: " + escape(value * 100) + "%"}"></div>
</div>`;
});

/* node_modules/svelte-material-icons/VolumeOff.svelte generated by Svelte v3.18.2 */

const VolumeOff = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons-0/dist/VolumeUp.svelte generated by Svelte v3.18.2 */

const VolumeUp = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z"}"></path></svg>`;
});

/* src/Components/Volume.svelte generated by Svelte v3.18.2 */

const css$4 = {
	code: ".volume.svelte-s1ipwy.svelte-s1ipwy{display:flex;flex-direction:row;align-items:center;overflow:hidden;padding:0.5em}.icon.svelte-s1ipwy.svelte-s1ipwy{flex:none;cursor:pointer;display:flex}.slider.svelte-s1ipwy.svelte-s1ipwy{width:2.5em;height:0.25em;margin-left:0.5em;margin-right:-3em;opacity:0;transition:opacity 200ms ease, margin-right 200ms ease}.volume.svelte-s1ipwy:hover .slider.svelte-s1ipwy,.volume.svelte-s1ipwy:active .slider.svelte-s1ipwy{margin-right:0.5em;opacity:1}",
	map: "{\"version\":3,\"file\":\"Volume.svelte\",\"sources\":[\"Volume.svelte\"],\"sourcesContent\":[\"<style>\\n  .volume{\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    overflow: hidden;\\n    padding: 0.5em;\\n    /*\\n    background: var(--primary-color);\\n    border-radius: 100px;\\n    box-shadow: rgba(0,0,0,0.4) 0 0 4px 2px;\\n    */\\n  }\\n\\n  .icon{\\n    flex: none;\\n    cursor: pointer;\\n    display: flex;\\n  }\\n\\n  .slider{\\n    width: 2.5em;\\n    height: 0.25em;\\n    margin-left: 0.5em;\\n    margin-right: -3em;\\n    opacity: 0;\\n    transition: opacity 200ms ease, margin-right 200ms ease;\\n  }\\n\\n  .volume:hover .slider, .volume:active .slider{\\n    margin-right: 0.5em;\\n    opacity: 1;\\n  }\\n</style>\\n\\n<script>\\n  import Slider from \\\"/Components/Slider.svelte\\\";\\n\\n  import VolumeOff from \\\"svelte-material-icons/VolumeOff.svelte\\\";\\n  import VolumeMute from \\\"svelte-material-icons/VolumeMute.svelte\\\";\\n  import VolumeDown from \\\"svelte-material-icons-0/dist/VolumeDown.svelte\\\";\\n  import VolumeUp from \\\"svelte-material-icons-0/dist/VolumeUp.svelte\\\";\\n\\n  export let volume = 1;\\n  export let size = \\\"1em\\\";\\n  let toggleVolume = 0;\\n\\n  export function toggle(){\\n    if(volume === 0){\\n      if(toggleVolume === 0) volume = 1;\\n      else volume = toggleVolume;\\n    } else {\\n      toggleVolume = volume;\\n      volume = 0;\\n    }\\n  }\\n</script>\\n\\n<div class=\\\"volume\\\">\\n\\n  <div class=\\\"slider\\\">\\n    <Slider bind:value={volume} />\\n  </div>\\n\\n  <div class=\\\"spacer\\\"></div>\\n\\n  <div class=\\\"icon\\\" on:click={toggle}>\\n    {#if volume === 0}\\n      <VolumeOff {size}/>\\n    {:else}\\n      <VolumeUp {size}/>\\n    {/if}\\n  </div>\\n\\n</div>\"],\"names\":[],\"mappings\":\"AACE,mCAAO,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,KAAK,AAMhB,CAAC,AAED,iCAAK,CAAC,AACJ,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,AACf,CAAC,AAED,mCAAO,CAAC,AACN,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,MAAM,CACd,WAAW,CAAE,KAAK,CAClB,YAAY,CAAE,IAAI,CAClB,OAAO,CAAE,CAAC,CACV,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,AACzD,CAAC,AAED,qBAAO,MAAM,CAAC,qBAAO,CAAE,qBAAO,OAAO,CAAC,qBAAO,CAAC,AAC5C,YAAY,CAAE,KAAK,CACnB,OAAO,CAAE,CAAC,AACZ,CAAC\"}"
};

const Volume = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { volume = 1 } = $$props;
	let { size = "1em" } = $$props;
	let toggleVolume = 0;

	function toggle() {
		if (volume === 0) {
			if (toggleVolume === 0) volume = 1; else volume = toggleVolume;
		} else {
			toggleVolume = volume;
			volume = 0;
		}
	}

	if ($$props.volume === void 0 && $$bindings.volume && volume !== void 0) $$bindings.volume(volume);
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.toggle === void 0 && $$bindings.toggle && toggle !== void 0) $$bindings.toggle(toggle);
	$$result.css.add(css$4);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		$$rendered = `<div class="${"volume svelte-s1ipwy"}">

  <div class="${"slider svelte-s1ipwy"}">
    ${validate_component(Slider, "Slider").$$render(
			$$result,
			{ value: volume },
			{
				value: $$value => {
					volume = $$value;
					$$settled = false;
				}
			},
			{}
		)}
  </div>

  <div class="${"spacer"}"></div>

  <div class="${"icon svelte-s1ipwy"}">
    ${volume === 0
		? `${validate_component(VolumeOff, "VolumeOff").$$render($$result, { size }, {}, {})}`
		: `${validate_component(VolumeUp, "VolumeUp").$$render($$result, { size }, {}, {})}`}
  </div>

</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* src/Components/StationImage.svelte generated by Svelte v3.18.2 */

const css$5 = {
	code: "img.svelte-1ffgqxu{width:var(--width);height:calc(var(--width) * 0.6875);object-fit:cover;object-position:center;border-radius:3px}",
	map: "{\"version\":3,\"file\":\"StationImage.svelte\",\"sources\":[\"StationImage.svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n  //const keymap = {lt: \\\"lt\\\", gt: \\\"gt\\\", w96: \\\"lt\\\"}\\n</script>\\n\\n<style>\\n  img{\\n    width: var(--width);\\n    height: calc(var(--width) * 0.6875);\\n    object-fit: cover;\\n    object-position: center;\\n    border-radius: 3px;\\n  }\\n</style>\\n\\n<script>\\n  import {stationImgUrl} from \\\"/Common/urls\\\";\\n\\n  export let station;\\n  export let size; // \\\"lt\\\" | \\\"gt\\\" | \\\"w96\\\"\\n  \\n  //const [webp, legacy] = stationImgUrl(size, station.img[keymap[size]]);\\n  $: [webp, legacy] = stationImgUrl(size, station);\\n  $: legacyType = station.origin != \\\"mt\\\" ? \\\"image/png\\\" : \\\"image/jpg\\\";\\n</script>\\n\\n<picture>\\n  <source srcset={webp} type=\\\"image/webp\\\">\\n  <img src={legacy} alt={station.name} >\\n</picture>\"],\"names\":[],\"mappings\":\"AAKE,kBAAG,CAAC,AACF,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,MAAM,CAAE,KAAK,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACnC,UAAU,CAAE,KAAK,CACjB,eAAe,CAAE,MAAM,CACvB,aAAa,CAAE,GAAG,AACpB,CAAC\"}"
};

const StationImage = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { station } = $$props;
	let { size } = $$props; // "lt" | "gt" | "w96"
	if ($$props.station === void 0 && $$bindings.station && station !== void 0) $$bindings.station(station);
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	$$result.css.add(css$5);
	let [webp, legacy] = stationImgUrl(size, station);
	let legacyType = station.origin != "mt" ? "image/png" : "image/jpg";

	return `<picture>
  <source${add_attribute("srcset", webp, 0)} type="${"image/webp"}">
  <img${add_attribute("src", legacy, 0)}${add_attribute("alt", station.name, 0)} class="${"svelte-1ffgqxu"}">
</picture>`;
});

/* node_modules/svelte-material-icons/Play.svelte generated by Svelte v3.18.2 */

const Play = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M8,5.14V19.14L19,12.14L8,5.14Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/Pause.svelte generated by Svelte v3.18.2 */

const Pause = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M14,19H18V5H14M6,19H10V5H6V19Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/Close.svelte generated by Svelte v3.18.2 */

const Close = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* src/Components/Loading.svelte generated by Svelte v3.18.2 */

const css$6 = {
	code: "@keyframes svelte-hq0ga7-CircularProgressCircleIndeterminate{0%{stroke-dasharray:1px, 200px;stroke-dashoffset:0px}50%{stroke-dasharray:100px, 200px;stroke-dashoffset:-15px}100%{stroke-dasharray:100px, 200px;stroke-dashoffset:-125px}}@keyframes svelte-hq0ga7-CircularProgressRotate{100%{transform:rotate(360deg)}}.circular-progress.svelte-hq0ga7{display:flex;align-items:center;justify-content:center;animation:svelte-hq0ga7-CircularProgressRotate 1.4s linear infinite}.circle.indeterminate.svelte-hq0ga7{animation:svelte-hq0ga7-CircularProgressCircleIndeterminate 1.4s ease-in-out infinite;stroke-dasharray:80px, 200px;stroke-dashoffset:0px}",
	map: "{\"version\":3,\"file\":\"Loading.svelte\",\"sources\":[\"Loading.svelte\"],\"sourcesContent\":[\"<style>\\n@keyframes CircularProgressCircleIndeterminate{\\n  0% {\\n    stroke-dasharray: 1px, 200px;\\n    stroke-dashoffset: 0px;\\n  }\\n\\n  50% {\\n      stroke-dasharray: 100px, 200px;\\n      stroke-dashoffset: -15px;\\n  }\\n\\n  100% {\\n      stroke-dasharray: 100px, 200px;\\n      stroke-dashoffset: -125px;\\n  }\\n}\\n\\n@keyframes CircularProgressRotate{\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n.circular-progress{\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  animation: CircularProgressRotate 1.4s linear infinite;\\n}\\n\\n.circle.indeterminate{\\n  animation: CircularProgressCircleIndeterminate 1.4s ease-in-out infinite;\\n  stroke-dasharray: 80px, 200px;\\n  stroke-dashoffset: 0px;\\n}\\n</style>\\n\\n<script>\\n\\nlet className = \\\"\\\";\\nexport {className as class};\\n\\nexport let style = \\\"\\\";\\nexport let value = null;\\nexport let variant = \\\"indeterminate\\\"; // \\\"static\\\", \\\"determinate\\\"\\nexport let color = \\\"currentColor\\\";\\n\\nexport let size = \\\"1em\\\";\\nexport let height = size;\\nexport let width = size;\\n\\n$: if(value != null && variant === \\\"indeterminate\\\") variant = \\\"static\\\";\\n</script>\\n\\n<div class=\\\"circular-progress {variant} {className}\\\" {style}>\\n  <svg viewBox=\\\"22 22 44 44\\\" {height} {width}>\\n    <circle class=\\\"circle indeterminate\\\" cx=\\\"44\\\" cy=\\\"44\\\" r=\\\"18\\\" fill=\\\"none\\\" stroke={color} stroke-width=\\\"5\\\"></circle>\\n  </svg>\\n</div>\"],\"names\":[],\"mappings\":\"AACA,WAAW,iDAAmC,CAAC,AAC7C,EAAE,AAAC,CAAC,AACF,gBAAgB,CAAE,GAAG,CAAC,CAAC,KAAK,CAC5B,iBAAiB,CAAE,GAAG,AACxB,CAAC,AAED,GAAG,AAAC,CAAC,AACD,gBAAgB,CAAE,KAAK,CAAC,CAAC,KAAK,CAC9B,iBAAiB,CAAE,KAAK,AAC5B,CAAC,AAED,IAAI,AAAC,CAAC,AACF,gBAAgB,CAAE,KAAK,CAAC,CAAC,KAAK,CAC9B,iBAAiB,CAAE,MAAM,AAC7B,CAAC,AACH,CAAC,AAED,WAAW,oCAAsB,CAAC,AAChC,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,OAAO,MAAM,CAAC,AAC3B,CAAC,AACH,CAAC,AAED,gCAAkB,CAAC,AACjB,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,oCAAsB,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,AACxD,CAAC,AAED,OAAO,4BAAc,CAAC,AACpB,SAAS,CAAE,iDAAmC,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CACxE,gBAAgB,CAAE,IAAI,CAAC,CAAC,KAAK,CAC7B,iBAAiB,CAAE,GAAG,AACxB,CAAC\"}"
};

const Loading = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { class: className = "" } = $$props;
	let { style = "" } = $$props;
	let { value = null } = $$props;
	let { variant = "indeterminate" } = $$props; // "static", "determinate"
	let { color = "currentColor" } = $$props;
	let { size = "1em" } = $$props;
	let { height = size } = $$props;
	let { width = size } = $$props;
	if ($$props.class === void 0 && $$bindings.class && className !== void 0) $$bindings.class(className);
	if ($$props.style === void 0 && $$bindings.style && style !== void 0) $$bindings.style(style);
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.variant === void 0 && $$bindings.variant && variant !== void 0) $$bindings.variant(variant);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	$$result.css.add(css$6);

	 {
		if (value != null && variant === "indeterminate") variant = "static";
	}

	return `<div class="${"circular-progress " + escape(variant) + " " + escape(className) + " svelte-hq0ga7"}"${add_attribute("style", style, 0)}>
  <svg viewBox="${"22 22 44 44"}"${add_attribute("height", height, 0)}${add_attribute("width", width, 0)}>
    <circle class="${"circle indeterminate svelte-hq0ga7"}" cx="${"44"}" cy="${"44"}" r="${"18"}" fill="${"none"}"${add_attribute("stroke", color, 0)} stroke-width="${"5"}"></circle>
  </svg>
</div>`;
});

/* src/Components/Player.svelte generated by Svelte v3.18.2 */

const css$7 = {
	code: ".floatingplayer.svelte-kyhb7p.svelte-kyhb7p{direction:ltr;display:flex;flex-direction:row;position:fixed;right:0;bottom:0;width:100%;height:86px;box-shadow:0 2px 8px rgba(0,0,0,0.25), 0 1px 5px rgba(0,0,0,0.22);color:#292929;background:#fff;border-top:rgba(0,0,0,0.15) 1px solid;align-items:center;--spacing:0.5em;--button-size:2.5em}.player.svelte-kyhb7p.svelte-kyhb7p{display:flex;flex-direction:row}.image.svelte-kyhb7p.svelte-kyhb7p{position:relative;cursor:pointer;margin-left:0.5em;--width:85px;width:var(--width);border-radius:2px 0 0 2px;overflow:hidden}.text.svelte-kyhb7p.svelte-kyhb7p{font-size:14px;display:flex;flex-direction:column;align-self:center;flex:1}.text.svelte-kyhb7p>a.svelte-kyhb7p{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;padding:1.25em}.volume.svelte-kyhb7p.svelte-kyhb7p{font-size:1.5rem;display:none;color:#666;margin-right:var(--spacing)}.toggle.svelte-kyhb7p.svelte-kyhb7p,.close.svelte-kyhb7p.svelte-kyhb7p{display:flex;align-items:center;justify-content:center;font-size:1.25em;color:#666;box-sizing:content-box;height:100%;flex:none;cursor:pointer;align-self:center;height:var(--button-size);width:var(--button-size);margin-right:var(--spacing)}.cover.svelte-kyhb7p.svelte-kyhb7p{position:absolute;top:0;left:0;bottom:0;right:0;display:flex;background-color:rgba(0,0,0,0.5)}.icon.svelte-kyhb7p.svelte-kyhb7p{display:flex;margin:auto;color:#fff;filter:drop-shadow(#000 0 0 2px)}.media-element.svelte-kyhb7p.svelte-kyhb7p{display:none}@media screen and (min-width: 600px){.floatingplayer.svelte-kyhb7p.svelte-kyhb7p{--spacing:1em}.volume.svelte-kyhb7p.svelte-kyhb7p{display:flex}}",
	map: "{\"version\":3,\"file\":\"Player.svelte\",\"sources\":[\"Player.svelte\"],\"sourcesContent\":[\"<svelte:options accessors={true}/>\\n\\n<style>\\n  .floatingplayer{\\n    direction: ltr;\\n    display: flex;\\n    flex-direction: row;\\n    position: fixed;\\n    right: 0;\\n    bottom: 0;\\n    width: 100%;\\n    height: 86px;\\n    \\n    box-shadow: 0 2px 8px rgba(0,0,0,0.25), 0 1px 5px rgba(0,0,0,0.22);\\n    color: #292929;\\n    background: #fff;\\n    \\n    border-top: rgba(0,0,0,0.15) 1px solid;\\n    align-items: center;\\n\\n    --spacing: 0.5em;\\n    --button-size: 2.5em;\\n  }\\n\\n  .player{\\n    display: flex;\\n    flex-direction: row;\\n  }\\n\\n  .image{\\n    position: relative;\\n    cursor: pointer;\\n    margin-left: 0.5em;\\n    --width: 85px;\\n    width: var(--width);\\n    border-radius: 2px 0 0 2px;\\n    overflow: hidden; \\n  }\\n\\n  .text{\\n    font-size: 14px;\\n    display: flex;\\n    flex-direction: column;\\n    align-self: center;\\n    flex: 1;\\n  }\\n\\n  .text > a{\\n    white-space: nowrap;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    padding: 1.25em;\\n  }\\n\\n  .volume{\\n    font-size: 1.5rem;\\n    display: none;\\n    color: #666;\\n    margin-right: var(--spacing);\\n  }\\n\\n  .toggle, .close{\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    font-size: 1.25em;\\n    color: #666;\\n    box-sizing: content-box;\\n    height: 100%;\\n    flex: none;\\n    cursor: pointer;\\n    align-self: center;\\n    height: var(--button-size);\\n    width: var(--button-size);\\n    margin-right: var(--spacing);\\n  }\\n\\n  .cover{\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    display: flex;\\n    background-color: rgba(0,0,0,0.5);\\n  }\\n\\n  .icon{\\n    display: flex;\\n    margin: auto;\\n    color: #fff;\\n    filter: drop-shadow(#000 0 0 2px);\\n  }\\n\\n  .media-element{\\n    display: none;\\n  }\\n\\n  @media screen and (min-width: 600px){\\n    .floatingplayer{\\n      --spacing: 1em;\\n    }\\n\\n    .volume{\\n      display: flex;\\n    }\\n  }\\n</style>\\n\\n<script>\\n  import {fly, fade} from \\\"svelte/transition\\\";\\n\\n  import {playerState} from \\\"/Stores/playerState\\\";\\n  import {recentList} from \\\"/Stores/recentList\\\";\\n\\n  //import StateIcon from \\\"/Components/StateIcon.svelte\\\"\\n  import Volume from \\\"/Components/Volume.svelte\\\"\\n  import StationImage from \\\"/Components/StationImage.svelte\\\"\\n  \\n\\n  import Play from \\\"svelte-material-icons/Play.svelte\\\";\\n  import Pause from \\\"svelte-material-icons/Pause.svelte\\\";\\n  import Close from \\\"svelte-material-icons/Close.svelte\\\";\\n  import Loading from \\\"/Components/Loading.svelte\\\";\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {lang} = i18n.stores();\\n\\n  import {stationUrl, stationImgUrl} from \\\"/Common/urls\\\";\\n\\n  export let mediaElement = null;\\n  export let station = null;\\n  export let state = \\\"paused\\\"; // playing, loading, unstarted\\n  //export let reallyPlaying = false;\\n  export let volume = 1;\\n  //export let showVolume = true;\\n  $: hidden = station == null;\\n\\n  $: playerState.set({station, state, hidden});\\n\\n  let hlsPromise;\\n  const getHls = async () => {\\n    if(typeof Hls !== \\\"undefined\\\")\\n      return Hls;\\n    \\n    if(hlsPromise != null)\\n      return hlsPromise;\\n\\n    return hlsPromise = new Promise((resolve, reject) => {\\n      const script = document.createElement(\\\"script\\\");\\n      script.src = \\\"/static/js/hls.js\\\";\\n      script.onload = () => resolve(Hls);\\n      script.onerror = reject;\\n      document.head.appendChild(script);\\n    })\\n  }\\n\\n  let hls = null;\\n\\n  const handleStalled = event => state = \\\"loading\\\";\\n  const handlePlay = event => state = \\\"loading\\\";\\n  const handlePlaying = event => state = \\\"playing\\\";\\n  const handlePause = event => state = \\\"paused\\\";\\n  const handleError = console.log;\\n\\n  export function close(){\\n    mediaElement.pause();\\n    mediaElement.removeAttribute(\\\"src\\\");\\n    mediaElement.load();\\n    if(hls != null){\\n      hls.destroy();\\n      hls = null;\\n    }\\n    station = null;\\n  }\\n\\n  const playHls = async url => {\\n    const Hls = await getHls();\\n    \\n    if(!Hls.isSupported()){\\n      return false;\\n    }\\n\\n    try{\\n      //always proxy\\n      //url = url.startsWith(\\\"http://\\\") ? \\\"/proxy/\\\" + url : url;\\n      url = `/proxy/${url}`;\\n      hls = new Hls();\\n      \\n      hls.on(Hls.Events.ERROR, (event, data) => {\\n        const {type, details, fatal} = data;\\n        for(const [key, value] of Object.entries(Hls.ErrorTypes)){\\n          if(type === value)\\n            console.log(key);\\n        }\\n\\n        console.log(event, data);\\n      })\\n      \\n      state = \\\"loading\\\";\\n      await hls.loadSource(url);\\n      await hls.attachMedia(mediaElement);\\n      await new Promise(resolve => hls.on(Hls.Events.MANIFEST_PARSED, resolve))\\n      await mediaElement.play();\\n      return true;\\n    } catch(e){\\n      return false;\\n    }\\n  }\\n\\n  const playFile = async url => {\\n    try {\\n      mediaElement.src = url;\\n      await mediaElement.load();\\n      await mediaElement.play();\\n      return true;\\n    } catch(e){\\n      return false;\\n    }\\n  }\\n\\n  const playStream = stream => {\\n    console.log(Array.from(Object.values(stream)));\\n    if(stream.type === \\\"hls\\\"){\\n      return playHls(stream.url);\\n    } else {\\n      return playFile(stream.url);\\n    }\\n  }\\n\\n  export async function play(st = null){\\n    if(st == null || (station && station._id === st._id)){\\n      try {\\n        await mediaElement.play();\\n        return true;\\n      } catch(e){\\n        return false;\\n      }\\n    }\\n    \\n    station = st;\\n\\n    recentList.update(list => {\\n      let helper = list.filter(item => item._id !== station._id);\\n      const {_id, countryCode, name, slug, mt, origin} = station;\\n      const item = {_id, countryCode, name, slug, mt, origin};\\n      helper = [item, ...helper].slice(0, 60);\\n      return helper;\\n    })\\n\\n    const streams = sortStreams(station);\\n    \\n    if(streams.length === 0){\\n      return false;\\n    }\\n\\n    for(let i = 0; i < streams.length; i++){\\n      const stream = streams[i];\\n      if(await playStream(stream)){\\n        return true\\n      } else {\\n        continue;\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  export function pause(){\\n    mediaElement.pause();\\n  }\\n\\n  export function toggle(){\\n    switch(state){\\n      case \\\"playing\\\":\\n      case \\\"loading\\\":\\n        pause(); break;\\n      case \\\"paused\\\": \\n        play(); break;\\n    }\\n  }\\n\\n  export function sortStreams(station){\\n    const always = [];\\n    const probably = [];\\n    const maybe = [];\\n    const hlsDirect = [];\\n    const hlsProxy = [];\\n    \\n    station.streams.forEach(stream => {\\n      if(stream.type === \\\"rtmp\\\") return;\\n      if(stream.type === \\\"hls\\\"){\\n        if(stream.url.startsWith(\\\"http://\\\")){\\n          hlsProxy.push(stream);\\n        } else {\\n          hlsDirect.push(stream);\\n        }\\n      } else {\\n        const can = mediaElement.canPlayType(stream.mime);\\n        if(can === \\\"always\\\") always.push(stream);\\n        else if(can === \\\"maybe\\\") maybe.push(stream);\\n        else if(can === \\\"probably\\\") probably.push(stream);\\n      }\\n    })\\n    \\n    return [...always, ...probably, ...maybe, ...hlsDirect, ...hlsProxy];\\n  }\\n</script>\\n\\n{#if station != null}\\n  <div class=\\\"floatingplayer {state}\\\" transition:fly={{x: 0, y: 50, duration: 350}}>\\n    \\n    <!---\\n    <div class=\\\"image\\\" style={imageStyle}>\\n      <div class=\\\"cover\\\" on:click={toggle}>\\n        <div class=\\\"icon\\\">\\n          <StateIcon {state}/>\\n        </div>\\n      </div>\\n    </div>\\n    -->\\n\\n    <a class=\\\"no-a image\\\" href={stationUrl({lang: $lang, station})}>\\n      <StationImage {station} size=\\\"w96\\\"/>\\n      {#if state === \\\"loading\\\"}\\n        <div class=\\\"cover\\\" transition:fade={{duration: 100}}>\\n          <div class=\\\"icon\\\">\\n            <Loading size=\\\"30px\\\" />\\n          </div>\\n        </div>\\n      {/if}\\n    </a>\\n\\n    <div class=\\\"text\\\">\\n      <a class=\\\"no-a\\\" href={stationUrl({lang: $lang, station})}>{station.name}</a>\\n    </div>\\n\\n    \\n    <div class=\\\"volume\\\">\\n      <Volume bind:volume />\\n    </div>\\n    \\n    <div class=\\\"toggle\\\" on:click={toggle}>\\n      {#if state === \\\"paused\\\"}\\n        <Play size=\\\"1.5em\\\"/>\\n      {:else}\\n        <Pause size=\\\"1.5em\\\" />\\n      {/if}\\n    </div>\\n\\n    <div class=\\\"close\\\" on:click={close}>\\n      <Close size=\\\"1.5em\\\"/>\\n    </div>\\n  </div>\\n{/if}\\n\\n<audio\\n  bind:this={mediaElement}\\n  class=\\\"media-element\\\"\\n  bind:volume\\n  on:stalled={handleStalled}\\n  on:play={handlePlay}\\n  on:playing={handlePlaying}\\n  on:pause={handlePause}\\n  on:error={handleError}\\n/>\"],\"names\":[],\"mappings\":\"AAGE,2CAAe,CAAC,AACd,SAAS,CAAE,GAAG,CACd,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,QAAQ,CAAE,KAAK,CACf,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CAEZ,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAClE,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,IAAI,CAEhB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CACtC,WAAW,CAAE,MAAM,CAEnB,SAAS,CAAE,KAAK,CAChB,aAAa,CAAE,KAAK,AACtB,CAAC,AAED,mCAAO,CAAC,AACN,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,AACrB,CAAC,AAED,kCAAM,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,OAAO,CACf,WAAW,CAAE,KAAK,CAClB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,aAAa,CAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAC1B,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,iCAAK,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,MAAM,CAClB,IAAI,CAAE,CAAC,AACT,CAAC,AAED,mBAAK,CAAG,eAAC,CAAC,AACR,WAAW,CAAE,MAAM,CACnB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,OAAO,CAAE,MAAM,AACjB,CAAC,AAED,mCAAO,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,YAAY,CAAE,IAAI,SAAS,CAAC,AAC9B,CAAC,AAED,mCAAO,CAAE,kCAAM,CAAC,AACd,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,eAAe,CAAE,MAAM,CACvB,SAAS,CAAE,MAAM,CACjB,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,WAAW,CACvB,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,aAAa,CAAC,CAC1B,KAAK,CAAE,IAAI,aAAa,CAAC,CACzB,YAAY,CAAE,IAAI,SAAS,CAAC,AAC9B,CAAC,AAED,kCAAM,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,CAAC,CACR,OAAO,CAAE,IAAI,CACb,gBAAgB,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AAED,iCAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AAED,0CAAc,CAAC,AACb,OAAO,CAAE,IAAI,AACf,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,CAAC,AACnC,2CAAe,CAAC,AACd,SAAS,CAAE,GAAG,AAChB,CAAC,AAED,mCAAO,CAAC,AACN,OAAO,CAAE,IAAI,AACf,CAAC,AACH,CAAC\"}"
};

const Player = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $lang;
	const { lang } = stores();
	$lang = get_store_value(lang);
	let { mediaElement = null } = $$props;
	let { station = null } = $$props;
	let { state = "paused" } = $$props; // playing, loading, unstarted
	let { volume = 1 } = $$props;
	let hlsPromise;

	const getHls = async () => {
		if (typeof Hls !== "undefined") return Hls;
		if (hlsPromise != null) return hlsPromise;

		return hlsPromise = new Promise((resolve, reject) => {
				const script = document.createElement("script");
				script.src = "/static/js/hls.js";
				script.onload = () => resolve(Hls);
				script.onerror = reject;
				document.head.appendChild(script);
			});
	};

	let hls = null;

	function close() {
		mediaElement.pause();
		mediaElement.removeAttribute("src");
		mediaElement.load();

		if (hls != null) {
			hls.destroy();
			hls = null;
		}

		station = null;
	}

	const playHls = async url => {
		const Hls = await getHls();

		if (!Hls.isSupported()) {
			return false;
		}

		try {
			//always proxy
			//url = url.startsWith("http://") ? "/proxy/" + url : url;
			url = `/proxy/${url}`;

			hls = new Hls();

			hls.on(Hls.Events.ERROR, (event, data) => {
				const { type, details, fatal } = data;

				for (const [key, value] of Object.entries(Hls.ErrorTypes)) {
					if (type === value) console.log(key);
				}

				console.log(event, data);
			});

			state = "loading";
			await hls.loadSource(url);
			await hls.attachMedia(mediaElement);
			await new Promise(resolve => hls.on(Hls.Events.MANIFEST_PARSED, resolve));
			await mediaElement.play();
			return true;
		} catch(e) {
			return false;
		}
	};

	const playFile = async url => {
		try {
			mediaElement.src = url;
			await mediaElement.load();
			await mediaElement.play();
			return true;
		} catch(e) {
			return false;
		}
	};

	const playStream = stream => {
		console.log(Array.from(Object.values(stream)));

		if (stream.type === "hls") {
			return playHls(stream.url);
		} else {
			return playFile(stream.url);
		}
	};

	async function play(st = null) {
		if (st == null || station && station._id === st._id) {
			try {
				await mediaElement.play();
				return true;
			} catch(e) {
				return false;
			}
		}

		station = st;

		recentList.update(list => {
			let helper = list.filter(item => item._id !== station._id);
			const { _id, countryCode, name, slug, mt, origin } = station;
			const item = { _id, countryCode, name, slug, mt, origin };
			helper = [item, ...helper].slice(0, 60);
			return helper;
		});

		const streams = sortStreams(station);

		if (streams.length === 0) {
			return false;
		}

		for (let i = 0; i < streams.length; i++) {
			const stream = streams[i];

			if (await playStream(stream)) {
				return true;
			} else {
				continue;
			}
		}

		return false;
	}

	function pause() {
		mediaElement.pause();
	}

	function toggle() {
		switch (state) {
			case "playing":
			case "loading":
				pause();
				break;
			case "paused":
				play();
				break;
		}
	}

	function sortStreams(station) {
		const always = [];
		const probably = [];
		const maybe = [];
		const hlsDirect = [];
		const hlsProxy = [];

		station.streams.forEach(stream => {
			if (stream.type === "rtmp") return;

			if (stream.type === "hls") {
				if (stream.url.startsWith("http://")) {
					hlsProxy.push(stream);
				} else {
					hlsDirect.push(stream);
				}
			} else {
				const can = mediaElement.canPlayType(stream.mime);
				if (can === "always") always.push(stream); else if (can === "maybe") maybe.push(stream); else if (can === "probably") probably.push(stream);
			}
		});

		return [...always, ...probably, ...maybe, ...hlsDirect, ...hlsProxy];
	}

	if ($$props.mediaElement === void 0 && $$bindings.mediaElement && mediaElement !== void 0) $$bindings.mediaElement(mediaElement);
	if ($$props.station === void 0 && $$bindings.station && station !== void 0) $$bindings.station(station);
	if ($$props.state === void 0 && $$bindings.state && state !== void 0) $$bindings.state(state);
	if ($$props.volume === void 0 && $$bindings.volume && volume !== void 0) $$bindings.volume(volume);
	if ($$props.close === void 0 && $$bindings.close && close !== void 0) $$bindings.close(close);
	if ($$props.play === void 0 && $$bindings.play && play !== void 0) $$bindings.play(play);
	if ($$props.pause === void 0 && $$bindings.pause && pause !== void 0) $$bindings.pause(pause);
	if ($$props.toggle === void 0 && $$bindings.toggle && toggle !== void 0) $$bindings.toggle(toggle);
	if ($$props.sortStreams === void 0 && $$bindings.sortStreams && sortStreams !== void 0) $$bindings.sortStreams(sortStreams);
	$$result.css.add(css$7);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		$lang = get_store_value(lang);
		let hidden = station == null;

		 {
			playerState.set({ station, state, hidden });
		}

		$$rendered = `





${station != null
		? `<div class="${"floatingplayer " + escape(state) + " svelte-kyhb7p"}">
    
    

    <a class="${"no-a image svelte-kyhb7p"}"${add_attribute("href", stationUrl({ lang: $lang, station }), 0)}>
      ${validate_component(StationImage, "StationImage").$$render($$result, { station, size: "w96" }, {}, {})}
      ${state === "loading"
			? `<div class="${"cover svelte-kyhb7p"}">
          <div class="${"icon svelte-kyhb7p"}">
            ${validate_component(Loading, "Loading").$$render($$result, { size: "30px" }, {}, {})}
          </div>
        </div>`
			: ``}
    </a>

    <div class="${"text svelte-kyhb7p"}">
      <a class="${"no-a svelte-kyhb7p"}"${add_attribute("href", stationUrl({ lang: $lang, station }), 0)}>${escape(station.name)}</a>
    </div>

    
    <div class="${"volume svelte-kyhb7p"}">
      ${validate_component(Volume, "Volume").$$render(
				$$result,
				{ volume },
				{
					volume: $$value => {
						volume = $$value;
						$$settled = false;
					}
				},
				{}
			)}
    </div>
    
    <div class="${"toggle svelte-kyhb7p"}">
      ${state === "paused"
			? `${validate_component(Play, "Play").$$render($$result, { size: "1.5em" }, {}, {})}`
			: `${validate_component(Pause, "Pause").$$render($$result, { size: "1.5em" }, {}, {})}`}
    </div>

    <div class="${"close svelte-kyhb7p"}">
      ${validate_component(Close, "Close").$$render($$result, { size: "1.5em" }, {}, {})}
    </div>
  </div>`
		: ``}

<audio class="${"media-element svelte-kyhb7p"}"${add_attribute("this", mediaElement, 1)}${add_attribute("volume", volume, 1)}></audio>`;
	} while (!$$settled);

	return $$rendered;
});

/* node_modules/svelte-material-icons-0/dist/Search.svelte generated by Svelte v3.18.2 */

const Search = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"}"></path></svg>`;
});

/* src/Components/Search.svelte generated by Svelte v3.18.2 */

const css$8 = {
	code: ".search.svelte-ylgfos{display:flex;align-items:center;margin:0;padding:0 0 0 0.75em;background:rgba(255,255,255,0.25);border-radius:100px}.field.svelte-ylgfos{font:inherit;font-size:1.1rem;border:none;padding:0.5em;outline:none;width:100%;border-radius:2px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;background:transparent;color:#fff}.field.svelte-ylgfos::placeholder{color:rgba(255,255,255,0.8)}.icon.svelte-ylgfos{display:flex}input[type=search].svelte-ylgfos::-ms-clear,input[type=search].svelte-ylgfos::-ms-reveal{display:none;width:0;height:0}input[type=\"search\"].svelte-ylgfos::-webkit-search-decoration,input[type=\"search\"].svelte-ylgfos::-webkit-search-cancel-button,input[type=\"search\"].svelte-ylgfos::-webkit-search-results-button,input[type=\"search\"].svelte-ylgfos::-webkit-search-results-decoration{display:none}",
	map: "{\"version\":3,\"file\":\"Search.svelte\",\"sources\":[\"Search.svelte\"],\"sourcesContent\":[\"<style>\\n  .search{\\n    display: flex;\\n    align-items: center;\\n    margin: 0;\\n    padding: 0 0 0 0.75em;\\n    background: rgba(255,255,255,0.25);\\n    border-radius: 100px;\\n  }\\n\\n  .field{\\n    font: inherit;\\n    font-size: 1.1rem;\\n    border: none;\\n    padding: 0.5em;\\n    outline: none;\\n    width: 100%;\\n    border-radius: 2px;\\n    /*box-shadow: rgba(0,0,0,0.15) 0 1px 2px 2px;*/\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n    white-space: nowrap;\\n\\n\\n    background: transparent;\\n    color: #fff;\\n  }\\n\\n  .field::placeholder{\\n    color: rgba(255,255,255,0.8);\\n  }\\n  \\n  .icon{\\n    display: flex;\\n  }\\n\\n  /* clears the 'X' from Internet Explorer */\\n  input[type=search]::-ms-clear,\\n  input[type=search]::-ms-reveal {\\n    display: none;\\n    width: 0;\\n    height: 0; \\n  }\\n\\n  /* clears the 'X' from Chrome */\\n  input[type=\\\"search\\\"]::-webkit-search-decoration,\\n  input[type=\\\"search\\\"]::-webkit-search-cancel-button,\\n  input[type=\\\"search\\\"]::-webkit-search-results-button,\\n  input[type=\\\"search\\\"]::-webkit-search-results-decoration {\\n    display: none; \\n}\\n</style>\\n\\n<script>\\n  import {goto as go} from \\\"@sapper/app\\\";\\n  import {stores} from \\\"@sapper/app\\\";\\n  const {session, page} = stores();\\n\\n  import Search from \\\"svelte-material-icons-0/dist/Search.svelte\\\";\\n  import {searchUrl, searchActionUrl} from \\\"/Common/urls\\\";\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {trans, lang, countryCode} = i18n.stores();\\n\\n  export let value = $page.query.q || \\\"\\\"; \\n  export let input = void 0;\\n\\n  export function submit(){\\n    // Remove country limited search\\n    // value.trim() && go(searchUrl({lang: $lang, q: value.trim(), countryCode: $countryCode }));\\n    value.trim() && go(searchUrl({lang: $lang, q: value.trim() }));\\n  }\\n\\n  let action, placeholder;\\n  // Remove country limited search\\n  // $: action = searchActionUrl({lang: $lang, countryCode: $countryCode});\\n  $: action = searchActionUrl({lang: $lang});\\n\\n  // Remove country limited search\\n  // $: placeholder = $countryCode ? $trans(\\\"search.placeholder.country\\\", {country: $trans(`countries.${$countryCode}`)}) : $trans(\\\"search.placeholder.global\\\");\\n  $: placeholder = $trans(\\\"search.placeholder.global\\\");\\n</script>\\n\\n<form class=\\\"search\\\" method=\\\"get\\\" {action} on:submit|preventDefault={submit}>\\n  <div class=\\\"icon\\\">\\n    <Search size=\\\"1.25em\\\"/>\\n  </div>\\n  <input \\n    bind:this={input} \\n    class=\\\"field\\\"\\n    type=\\\"search\\\"\\n    name=\\\"q\\\"\\n    autocomplete=\\\"off\\\"\\n    bind:value\\n    {placeholder}\\n  >\\n</form>\"],\"names\":[],\"mappings\":\"AACE,qBAAO,CAAC,AACN,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,CACnB,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CACrB,UAAU,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAClC,aAAa,CAAE,KAAK,AACtB,CAAC,AAED,oBAAM,CAAC,AACL,IAAI,CAAE,OAAO,CACb,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,CACX,aAAa,CAAE,GAAG,CAElB,QAAQ,CAAE,MAAM,CAChB,aAAa,CAAE,QAAQ,CACvB,WAAW,CAAE,MAAM,CAGnB,UAAU,CAAE,WAAW,CACvB,KAAK,CAAE,IAAI,AACb,CAAC,AAED,oBAAM,aAAa,CAAC,AAClB,KAAK,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,AAC9B,CAAC,AAED,mBAAK,CAAC,AACJ,OAAO,CAAE,IAAI,AACf,CAAC,AAGD,KAAK,CAAC,IAAI,CAAC,MAAM,eAAC,WAAW,CAC7B,KAAK,CAAC,IAAI,CAAC,MAAM,eAAC,YAAY,AAAC,CAAC,AAC9B,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,CAAC,CACR,MAAM,CAAE,CAAC,AACX,CAAC,AAGD,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAC,2BAA2B,CAC/C,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAC,8BAA8B,CAClD,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAC,+BAA+B,CACnD,KAAK,CAAC,IAAI,CAAC,QAAQ,eAAC,mCAAmC,AAAC,CAAC,AACvD,OAAO,CAAE,IAAI,AACjB,CAAC\"}"
};

const Search_1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;
	let $lang;
	let $trans;
	const { session, page } = stores$1$1();
	$page = get_store_value(page);
	const { trans, lang, countryCode } = stores();
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	let { value = $page.query.q || "" } = $$props;
	let { input = void 0 } = $$props;

	function submit() {
		// Remove country limited search
		// value.trim() && go(searchUrl({lang: $lang, q: value.trim(), countryCode: $countryCode }));
		value.trim() && goto(searchUrl({ lang: $lang, q: value.trim() }));
	}

	let action, placeholder;
	if ($$props.value === void 0 && $$bindings.value && value !== void 0) $$bindings.value(value);
	if ($$props.input === void 0 && $$bindings.input && input !== void 0) $$bindings.input(input);
	if ($$props.submit === void 0 && $$bindings.submit && submit !== void 0) $$bindings.submit(submit);
	$$result.css.add(css$8);
	$page = get_store_value(page);
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	action = searchActionUrl({ lang: $lang });
	placeholder = $trans("search.placeholder.global");

	return `<form class="${"search svelte-ylgfos"}" method="${"get"}"${add_attribute("action", action, 0)}>
  <div class="${"icon svelte-ylgfos"}">
    ${validate_component(Search, "Search").$$render($$result, { size: "1.25em" }, {}, {})}
  </div>
  <input class="${"field svelte-ylgfos"}" type="${"search"}" name="${"q"}" autocomplete="${"off"}"${add_attribute("placeholder", placeholder, 0)}${add_attribute("this", input, 1)}${add_attribute("value", value, 1)}>
</form>`;
});

/* node_modules/svelte-material-icons-0/dist/Menu.svelte generated by Svelte v3.18.2 */

const Menu = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"}"></path></svg>`;
});

/* node_modules/svelte-material-icons-0/dist/Close.svelte generated by Svelte v3.18.2 */

const Close$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z"}"></path></svg>`;
});

var DASH = {};

/* src/Components/Topbar.svelte generated by Svelte v3.18.2 */

const css$9 = {
	code: ".topbar.svelte-102tnj9.svelte-102tnj9{position:fixed;z-index:9999;top:0;left:0;width:100%;height:var(--topbar-height);display:flex;flex-direction:column;background:var(--primary-color);color:var(--contrast-color);box-shadow:rgba(0, 0, 0, 0.25) 0 1px 2px 2px}.phone.svelte-102tnj9.svelte-102tnj9,.desktop.svelte-102tnj9.svelte-102tnj9{height:var(--topobar-height);display:flex;flex-direction:row;align-items:center}.desktop.svelte-102tnj9.svelte-102tnj9{display:none}@media screen and (min-width: 600px){.desktop.svelte-102tnj9.svelte-102tnj9{display:flex}.phone.svelte-102tnj9.svelte-102tnj9{display:none}}.touchsquare.svelte-102tnj9.svelte-102tnj9{flex:none;display:flex;width:var(--topbar-height);height:var(--topbar-height);cursor:pointer;transition:background-color 200ms ease}.touchsquare.svelte-102tnj9.svelte-102tnj9:hover{background:rgba(0, 0, 0, 0.25)}.icon.svelte-102tnj9.svelte-102tnj9{flex:none;display:flex;margin:auto;font-size:1.25rem}.desktop.svelte-102tnj9.svelte-102tnj9 .topbar-title{flex:none;margin-right:1.5em}.search.svelte-102tnj9.svelte-102tnj9{flex:1}.desktop.svelte-102tnj9 .search.svelte-102tnj9{padding-right:1.5rem}",
	map: "{\"version\":3,\"file\":\"Topbar.svelte\",\"sources\":[\"Topbar.svelte\"],\"sourcesContent\":[\"<style>\\n  .topbar {\\n    position: fixed;\\n    z-index: 9999;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: var(--topbar-height);\\n    display: flex;\\n    flex-direction: column;\\n    background: var(--primary-color);\\n    color: var(--contrast-color);\\n    box-shadow: rgba(0, 0, 0, 0.25) 0 1px 2px 2px;\\n  }\\n\\n  .phone,\\n  .desktop {\\n    height: var(--topobar-height);\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n  }\\n\\n  .desktop {\\n    display: none;\\n  }\\n\\n  @media screen and (min-width: 600px) {\\n    .desktop {\\n      display: flex;\\n    }\\n\\n    .phone {\\n      display: none;\\n    }\\n  }\\n\\n  .touchsquare {\\n    flex: none;\\n    display: flex;\\n    width: var(--topbar-height);\\n    height: var(--topbar-height);\\n    cursor: pointer;\\n    transition: background-color 200ms ease;\\n  }\\n\\n  .touchsquare:hover {\\n    background: rgba(0, 0, 0, 0.25);\\n  }\\n\\n  .icon {\\n    flex: none;\\n    display: flex;\\n    margin: auto;\\n    font-size: 1.25rem;\\n  }\\n\\n  .desktop :global(.topbar-title){\\n    flex: none;\\n    margin-right: 1.5em;\\n  }\\n\\n  .search {\\n    flex: 1;\\n  }\\n\\n  .desktop .search{\\n    padding-right: 1.5rem;\\n  }\\n</style>\\n\\n<script>\\n  import TopbarTitle from \\\"./TopbarTitle.svelte\\\";\\n  import Player from \\\"./Player.svelte\\\";\\n  import Search from \\\"./Search.svelte\\\";\\n\\n  import Menu from \\\"svelte-material-icons-0/dist/Menu.svelte\\\";\\n  import Close from \\\"svelte-material-icons-0/dist/Close.svelte\\\";\\n  import SearchIcon from \\\"svelte-material-icons-0/dist/Search.svelte\\\";\\n\\n  import DASH from \\\"./DASH\\\";\\n  import { getContext } from \\\"svelte\\\";\\n\\n  const {navOpen, toggleNav} = getContext(DASH);\\n\\n  //export let menuOpen = false;\\n  export let mode = \\\"normal\\\"; // or \\\"search\\\";\\n  // export let value = void 0;\\n  let mobileSearch;\\n  let searchInput;\\n  let submit;\\n\\n  export let toggleSearch = () => {\\n    if (mode === \\\"normal\\\") {\\n      mode = \\\"search\\\";\\n      setTimeout(() => searchInput.focus(), 10);\\n    } else if (mode === \\\"search\\\") {\\n      mode = \\\"normal\\\";\\n    }\\n  };  \\n</script>\\n\\n<div class=\\\"topbar\\\" class:mode>\\n\\n  <div class=\\\"phone\\\">\\n    {#if mode === 'normal'}\\n      <div class=\\\"touchsquare\\\" on:click={toggleNav}>\\n        <div class=\\\"icon\\\">\\n          {#if $navOpen}\\n            <Close />\\n          {:else}\\n            <Menu />\\n          {/if}\\n        </div>\\n      </div>\\n\\n    <TopbarTitle/>\\n\\n      <div class=\\\"touchsquare\\\" on:click={toggleSearch}>\\n        <div class=\\\"icon\\\">\\n          <SearchIcon />\\n        </div>\\n      </div>\\n    {:else if mode === 'search'}\\n      <div class=\\\"touchsquare\\\" on:click={toggleSearch}>\\n        <div class=\\\"icon\\\">\\n          <Close />\\n        </div>\\n      </div>\\n\\n      <div class=\\\"search\\\">\\n        <Search bind:input={searchInput} bind:this={mobileSearch}/>\\n      </div>\\n\\n      <div class=\\\"touchsquare\\\" on:click={() => mobileSearch.submit()}>\\n        <div class=\\\"icon\\\">\\n          <SearchIcon />\\n        </div>\\n      </div>\\n    {/if}\\n  </div>\\n\\n  <div class=\\\"desktop\\\">\\n    <div class=\\\"touchsquare\\\" on:click={toggleNav}>\\n      <div class=\\\"icon\\\">\\n        {#if $navOpen}\\n          <Close />\\n        {:else}\\n          <Menu />\\n        {/if}\\n      </div>\\n    </div>\\n\\n    <TopbarTitle />\\n\\n    <div class=\\\"search\\\">\\n      <Search/>\\n    </div>\\n\\n  </div>\\n</div>\\n\"],\"names\":[],\"mappings\":\"AACE,OAAO,8BAAC,CAAC,AACP,QAAQ,CAAE,KAAK,CACf,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,eAAe,CAAC,CAC5B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,IAAI,gBAAgB,CAAC,CAC5B,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,AAC/C,CAAC,AAED,oCAAM,CACN,QAAQ,8BAAC,CAAC,AACR,MAAM,CAAE,IAAI,gBAAgB,CAAC,CAC7B,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,AACf,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACpC,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,AACf,CAAC,AAED,MAAM,8BAAC,CAAC,AACN,OAAO,CAAE,IAAI,AACf,CAAC,AACH,CAAC,AAED,YAAY,8BAAC,CAAC,AACZ,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,MAAM,CAAE,IAAI,eAAe,CAAC,CAC5B,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,AACzC,CAAC,AAED,0CAAY,MAAM,AAAC,CAAC,AAClB,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACjC,CAAC,AAED,KAAK,8BAAC,CAAC,AACL,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,SAAS,CAAE,OAAO,AACpB,CAAC,AAED,sCAAQ,CAAC,AAAQ,aAAa,AAAC,CAAC,AAC9B,IAAI,CAAE,IAAI,CACV,YAAY,CAAE,KAAK,AACrB,CAAC,AAED,OAAO,8BAAC,CAAC,AACP,IAAI,CAAE,CAAC,AACT,CAAC,AAED,uBAAQ,CAAC,sBAAO,CAAC,AACf,aAAa,CAAE,MAAM,AACvB,CAAC\"}"
};

const Topbar = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $navOpen;
	const { navOpen, toggleNav } = getContext(DASH);
	$navOpen = get_store_value(navOpen);
	let { mode = "normal" } = $$props; // or "search";

	// export let value = void 0;
	let mobileSearch;

	let searchInput;

	let { toggleSearch = () => {
		if (mode === "normal") {
			mode = "search";
			setTimeout(() => searchInput.focus(), 10);
		} else if (mode === "search") {
			mode = "normal";
		}
	} } = $$props;

	if ($$props.mode === void 0 && $$bindings.mode && mode !== void 0) $$bindings.mode(mode);
	if ($$props.toggleSearch === void 0 && $$bindings.toggleSearch && toggleSearch !== void 0) $$bindings.toggleSearch(toggleSearch);
	$$result.css.add(css$9);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;
		$navOpen = get_store_value(navOpen);

		$$rendered = `<div class="${["topbar svelte-102tnj9", mode ? "mode" : ""].join(" ").trim()}">

  <div class="${"phone svelte-102tnj9"}">
    ${mode === "normal"
		? `<div class="${"touchsquare svelte-102tnj9"}">
        <div class="${"icon svelte-102tnj9"}">
          ${$navOpen
			? `${validate_component(Close$1, "Close").$$render($$result, {}, {}, {})}`
			: `${validate_component(Menu, "Menu").$$render($$result, {}, {}, {})}`}
        </div>
      </div>

    ${validate_component(TopbarTitle, "TopbarTitle").$$render($$result, {}, {}, {})}

      <div class="${"touchsquare svelte-102tnj9"}">
        <div class="${"icon svelte-102tnj9"}">
          ${validate_component(Search, "SearchIcon").$$render($$result, {}, {}, {})}
        </div>
      </div>`
		: `${mode === "search"
			? `<div class="${"touchsquare svelte-102tnj9"}">
        <div class="${"icon svelte-102tnj9"}">
          ${validate_component(Close$1, "Close").$$render($$result, {}, {}, {})}
        </div>
      </div>

      <div class="${"search svelte-102tnj9"}">
        ${validate_component(Search_1, "Search").$$render(
					$$result,
					{ input: searchInput, this: mobileSearch },
					{
						input: $$value => {
							searchInput = $$value;
							$$settled = false;
						},
						this: $$value => {
							mobileSearch = $$value;
							$$settled = false;
						}
					},
					{}
				)}
      </div>

      <div class="${"touchsquare svelte-102tnj9"}">
        <div class="${"icon svelte-102tnj9"}">
          ${validate_component(Search, "SearchIcon").$$render($$result, {}, {}, {})}
        </div>
      </div>`
			: ``}`}
  </div>

  <div class="${"desktop svelte-102tnj9"}">
    <div class="${"touchsquare svelte-102tnj9"}">
      <div class="${"icon svelte-102tnj9"}">
        ${$navOpen
		? `${validate_component(Close$1, "Close").$$render($$result, {}, {}, {})}`
		: `${validate_component(Menu, "Menu").$$render($$result, {}, {}, {})}`}
      </div>
    </div>

    ${validate_component(TopbarTitle, "TopbarTitle").$$render($$result, {}, {}, {})}

    <div class="${"search svelte-102tnj9"}">
      ${validate_component(Search_1, "Search").$$render($$result, {}, {}, {})}
    </div>

  </div>
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* node_modules/svelte-material-icons-0/dist/ChevronLeft.svelte generated by Svelte v3.18.2 */

const ChevronLeft = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z"}"></path></svg>`;
});

/* node_modules/svelte-material-icons/Translate.svelte generated by Svelte v3.18.2 */

const Translate = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12.87,15.07L10.33,12.56L10.36,12.53C12.1,10.59 13.34,8.36 14.07,6H17V4H10V2H8V4H1V6H12.17C11.5,7.92 10.44,9.75 9,11.35C8.07,10.32 7.3,9.19 6.69,8H4.69C5.42,9.63 6.42,11.17 7.67,12.56L2.58,17.58L4,19L9,14L12.11,17.11L12.87,15.07M18.5,10H16.5L12,22H14L15.12,19H19.87L21,22H23L18.5,10M15.88,17L17.5,12.67L19.12,17H15.88Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/Earth.svelte generated by Svelte v3.18.2 */

const Earth = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M17.9,17.39C17.64,16.59 16.89,16 16,16H15V13A1,1 0 0,0 14,12H8V10H10A1,1 0 0,0 11,9V7H13A2,2 0 0,0 15,5V4.59C17.93,5.77 20,8.64 20,12C20,14.08 19.2,15.97 17.9,17.39M11,19.93C7.05,19.44 4,16.08 4,12C4,11.38 4.08,10.78 4.21,10.21L9,15V16A2,2 0 0,0 11,18M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/Timelapse.svelte generated by Svelte v3.18.2 */

const Timelapse = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12,20A8,8 0 0,1 4,12A8,8 0 0,1 12,4A8,8 0 0,1 20,12A8,8 0 0,1 12,20M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2M16.24,7.76C15.07,6.58 13.53,6 12,6V12L7.76,16.24C10.1,18.58 13.9,18.58 16.24,16.24C18.59,13.9 18.59,10.1 16.24,7.76Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/AlphaFBox.svelte generated by Svelte v3.18.2 */

const AlphaFBox = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M9,7V17H11V13H14V11H11V9H15V7H9M5,3H19A2,2 0 0,1 21,5V19A2,2 0 0,1 19,21H5A2,2 0 0,1 3,19V5A2,2 0 0,1 5,3Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* node_modules/svelte-material-icons/AlphaACircle.svelte generated by Svelte v3.18.2 */

const AlphaACircle = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("viewBox", viewBox, 0)}><path d="${"M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22A10,10 0 0,1 2,12A10,10 0 0,1 12,2M11,7A2,2 0 0,0 9,9V17H11V13H13V17H15V9A2,2 0 0,0 13,7H11M11,9H13V11H11V9Z"}"${add_attribute("fill", color, 0)}></path></svg>`;
});

/* src/Components/Nav.svelte generated by Svelte v3.18.2 */

const css$a = {
	code: ".cover.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0, 0, 0, 0.75);z-index:15000}.menu.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{background:#fff;position:fixed;top:0;left:0;width:300px;max-width:80%;height:100%;z-index:15100;transform:translateX(-105%);transition:transform 150ms ease-in-out;display:flex;flex-direction:column}.open.svelte-trrpqq.svelte-trrpqq>.menu.svelte-trrpqq.svelte-trrpqq{transform:none}.title.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{font-size:1.5rem;transition:opacity 150ms ease;color:var(--primary-color);border-bottom:rgba(0, 0, 0, 0.15) 1px solid;flex:none;display:flex;flex-direction:row;align-items:center}.title.svelte-trrpqq.svelte-trrpqq span.svelte-trrpqq.svelte-trrpqq{opacity:0.4}.close.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{flex:none;display:flex;font-size:0.75em;cursor:pointer;padding:1rem;transition:background-color 200ms ease}.close.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq:hover{background:rgba(61, 90, 254, 0.25)}.content.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{display:flex;flex-direction:column;flex:1;overflow-y:auto;overflow-x:hidden;font-size:1.25em}.group.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{padding:0.5em 0;flex:none}.group+.group.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{border-top:rgba(0, 0, 0, 0.15) 1px solid}.content.svelte-trrpqq.svelte-trrpqq a.svelte-trrpqq.svelte-trrpqq{display:inline-flex;align-items:center;color:var(--primary-color);padding:0.5em 1em}.content.svelte-trrpqq a.svelte-trrpqq>span.svelte-trrpqq{margin-left:0.75em}.langs.svelte-trrpqq.svelte-trrpqq.svelte-trrpqq{margin-top:auto}",
	map: "{\"version\":3,\"file\":\"Nav.svelte\",\"sources\":[\"Nav.svelte\"],\"sourcesContent\":[\"<script>\\n  import { fade } from \\\"svelte/transition\\\";\\n  import Close from \\\"svelte-material-icons-0/dist/ChevronLeft.svelte\\\";\\n  import Langs from \\\"svelte-material-icons/Translate.svelte\\\";\\n  import Countries from \\\"svelte-material-icons/Earth.svelte\\\";\\n  import Recents from \\\"svelte-material-icons/Timelapse.svelte\\\";\\n  import Genres from \\\"svelte-material-icons/GooglePages.svelte\\\";\\n  import Fms from \\\"svelte-material-icons/AlphaFBox.svelte\\\";\\n  import Ams from \\\"svelte-material-icons/AlphaACircle.svelte\\\";\\n\\n  import { stores } from \\\"@sapper/app\\\";\\n  const { page } = stores();\\n\\n  import { getContext } from \\\"svelte\\\";\\n  import DASH from \\\"./DASH\\\";\\n  const { navOpen, closeNav, openNav } = getContext(DASH);\\n\\n  import {\\n    indexUrl,\\n    langsUrl,\\n    recentsUrl,\\n    genreListUrl,\\n    signalListUrl\\n  } from \\\"/Common/urls\\\";\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const { lang, trans, countryCode, country } = i18n.stores();\\n\\n  const handleClick = event => {\\n    let target = event.target;\\n    do {\\n      if (target.tagName.toLowerCase() === \\\"a\\\") {\\n        navOpen.set(false);\\n        break;\\n      }\\n    } while ((target = target.parentElement));\\n  };\\n</script>\\n\\n<style>\\n  .cover {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    background: rgba(0, 0, 0, 0.75);\\n    z-index: 15000;\\n  }\\n  .menu {\\n    background: #fff;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    width: 300px;\\n    max-width: 80%;\\n    height: 100%;\\n    z-index: 15100;\\n    transform: translateX(-105%);\\n    transition: transform 150ms ease-in-out;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n  .open > .menu {\\n    transform: none;\\n  }\\n  .title {\\n    font-size: 1.5rem;\\n    transition: opacity 150ms ease;\\n    color: var(--primary-color);\\n    border-bottom: rgba(0, 0, 0, 0.15) 1px solid;\\n    flex: none;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n  }\\n  .title span {\\n    opacity: 0.4;\\n  }\\n  .close {\\n    flex: none;\\n    display: flex;\\n    font-size: 0.75em;\\n    cursor: pointer;\\n    padding: 1rem;\\n    transition: background-color 200ms ease;\\n  }\\n  .close:hover {\\n    background: rgba(61, 90, 254, 0.25);\\n  }\\n  .content {\\n    display: flex;\\n    flex-direction: column;\\n    flex: 1;\\n    overflow-y: auto;\\n    overflow-x: hidden;\\n    font-size: 1.25em;\\n  }\\n\\n  .group {\\n    padding: 0.5em 0;\\n    flex: none;\\n  }\\n\\n  .group + .group {\\n    border-top: rgba(0, 0, 0, 0.15) 1px solid;\\n  }\\n\\n  .content a {\\n    display: inline-flex;\\n    align-items: center;\\n    color: var(--primary-color);\\n    padding: 0.5em 1em;\\n  }\\n\\n  .content a > span {\\n    margin-left: 0.75em;\\n  }\\n\\n  .langs {\\n    margin-top: auto;\\n  }\\n</style>\\n\\n<nav class=\\\"nav\\\" class:open={$navOpen}>\\n  {#if $navOpen}\\n    <div\\n      transition:fade={{ duration: 200 }}\\n      class=\\\"cover\\\"\\n      on:click={closeNav} />\\n  {/if}\\n  <div class=\\\"menu\\\" on:click={handleClick}>\\n    <div class=\\\"title\\\">\\n      <div class=\\\"close\\\" on:click={closeNav}>\\n        <Close />\\n      </div>\\n      <a class=\\\"no-a\\\" href={indexUrl({ lang: $lang })}>\\n        openradio\\n        <span>.app</span>\\n      </a>\\n    </div>\\n\\n    <div class=\\\"content scrollbar\\\">\\n\\n      <div class=\\\"group\\\">\\n        <div>\\n          <a class=\\\"no-a\\\" href={recentsUrl({ lang: $lang })}>\\n            <Recents />\\n            <span>{$trans('nav.recents')}</span>\\n          </a>\\n        </div>\\n      </div>\\n      <div class=\\\"group\\\">\\n        <div>\\n          <a class=\\\"no-a\\\" href={indexUrl({ lang: $lang })}>\\n            <Countries />\\n            <span>{$trans('nav.countries')}</span>\\n          </a>\\n        </div>\\n      </div>\\n      <!--\\n      <div>\\n        <a class=\\\"no-a\\\" href={genreListUrl({lang: $lang, countryCode: $countryCode})}>\\n          <Genres />\\n          <span>{$trans(\\\"nav.genres\\\")}</span>\\n        </a>\\n      </div>\\n      -->\\n\\n      <div class=\\\"group\\\">\\n        {#if !$country || ($country && $country.fmCount)}\\n          <div>\\n            <a\\n              class=\\\"no-a\\\"\\n              href={signalListUrl({\\n                lang: $lang,\\n                type: 'fm',\\n                countryCode: $countryCode\\n              })}>\\n              <Fms />\\n              <span>{$trans('nav.fms')}</span>\\n            </a>\\n          </div>\\n        {/if}\\n\\n        {#if !$country || ($country && $country.amCount)}\\n          <div>\\n            <a\\n              class=\\\"no-a\\\"\\n              href={signalListUrl({\\n                lang: $lang,\\n                type: 'am',\\n                countryCode: $countryCode\\n              })}>\\n              <Ams />\\n              <span>{$trans('nav.ams')}</span>\\n            </a>\\n          </div>\\n        {/if}\\n      </div>\\n\\n      <!-- TODO: MOVE TO FOOTER -->\\n      <div class=\\\"group langs\\\">\\n        <div class=\\\"langs\\\">\\n          <a class=\\\"no-a\\\" href={langsUrl({ lang: $lang })}>\\n            <Langs />\\n            <span>{$trans('nav.langs')}</span>\\n          </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</nav>\\n\"],\"names\":[],\"mappings\":\"AAwCE,MAAM,0CAAC,CAAC,AACN,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAC/B,OAAO,CAAE,KAAK,AAChB,CAAC,AACD,KAAK,0CAAC,CAAC,AACL,UAAU,CAAE,IAAI,CAChB,QAAQ,CAAE,KAAK,CACf,GAAG,CAAE,CAAC,CACN,IAAI,CAAE,CAAC,CACP,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,MAAM,CAAE,IAAI,CACZ,OAAO,CAAE,KAAK,CACd,SAAS,CAAE,WAAW,KAAK,CAAC,CAC5B,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,WAAW,CACvC,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AACD,iCAAK,CAAG,KAAK,4BAAC,CAAC,AACb,SAAS,CAAE,IAAI,AACjB,CAAC,AACD,MAAM,0CAAC,CAAC,AACN,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAC9B,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,aAAa,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CAC5C,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,kCAAM,CAAC,IAAI,4BAAC,CAAC,AACX,OAAO,CAAE,GAAG,AACd,CAAC,AACD,MAAM,0CAAC,CAAC,AACN,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,MAAM,CACjB,MAAM,CAAE,OAAO,CACf,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,gBAAgB,CAAC,KAAK,CAAC,IAAI,AACzC,CAAC,AACD,gDAAM,MAAM,AAAC,CAAC,AACZ,UAAU,CAAE,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,AACrC,CAAC,AACD,QAAQ,0CAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,MAAM,CAClB,SAAS,CAAE,MAAM,AACnB,CAAC,AAED,MAAM,0CAAC,CAAC,AACN,OAAO,CAAE,KAAK,CAAC,CAAC,CAChB,IAAI,CAAE,IAAI,AACZ,CAAC,AAED,MAAM,CAAG,MAAM,0CAAC,CAAC,AACf,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,AAC3C,CAAC,AAED,oCAAQ,CAAC,CAAC,4BAAC,CAAC,AACV,OAAO,CAAE,WAAW,CACpB,WAAW,CAAE,MAAM,CACnB,KAAK,CAAE,IAAI,eAAe,CAAC,CAC3B,OAAO,CAAE,KAAK,CAAC,GAAG,AACpB,CAAC,AAED,sBAAQ,CAAC,eAAC,CAAG,IAAI,cAAC,CAAC,AACjB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,MAAM,0CAAC,CAAC,AACN,UAAU,CAAE,IAAI,AAClB,CAAC\"}"
};

const Nav = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $navOpen;
	let $lang;
	let $trans;
	let $country;
	let $countryCode;
	const { page } = stores$1$1();
	const { navOpen, closeNav, openNav } = getContext(DASH);
	$navOpen = get_store_value(navOpen);
	const { lang, trans, countryCode, country } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	$countryCode = get_store_value(countryCode);
	$country = get_store_value(country);

	$$result.css.add(css$a);
	$navOpen = get_store_value(navOpen);
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	$country = get_store_value(country);
	$countryCode = get_store_value(countryCode);

	return `<nav class="${["nav svelte-trrpqq", $navOpen ? "open" : ""].join(" ").trim()}">
  ${$navOpen
	? `<div class="${"cover svelte-trrpqq"}"></div>`
	: ``}
  <div class="${"menu svelte-trrpqq"}">
    <div class="${"title svelte-trrpqq"}">
      <div class="${"close svelte-trrpqq"}">
        ${validate_component(ChevronLeft, "Close").$$render($$result, {}, {}, {})}
      </div>
      <a class="${"no-a"}"${add_attribute("href", indexUrl({ lang: $lang }), 0)}>
        openradio
        <span class="${"svelte-trrpqq"}">.app</span>
      </a>
    </div>

    <div class="${"content scrollbar svelte-trrpqq"}">

      <div class="${"group svelte-trrpqq"}">
        <div>
          <a class="${"no-a svelte-trrpqq"}"${add_attribute("href", recentsUrl({ lang: $lang }), 0)}>
            ${validate_component(Timelapse, "Recents").$$render($$result, {}, {}, {})}
            <span class="${"svelte-trrpqq"}">${escape($trans("nav.recents"))}</span>
          </a>
        </div>
      </div>
      <div class="${"group svelte-trrpqq"}">
        <div>
          <a class="${"no-a svelte-trrpqq"}"${add_attribute("href", indexUrl({ lang: $lang }), 0)}>
            ${validate_component(Earth, "Countries").$$render($$result, {}, {}, {})}
            <span class="${"svelte-trrpqq"}">${escape($trans("nav.countries"))}</span>
          </a>
        </div>
      </div>
      

      <div class="${"group svelte-trrpqq"}">
        ${!$country || $country && $country.fmCount
	? `<div>
            <a class="${"no-a svelte-trrpqq"}"${add_attribute(
			"href",
			signalListUrl({
				lang: $lang,
				type: "fm",
				countryCode: $countryCode
			}),
			0
		)}>
              ${validate_component(AlphaFBox, "Fms").$$render($$result, {}, {}, {})}
              <span class="${"svelte-trrpqq"}">${escape($trans("nav.fms"))}</span>
            </a>
          </div>`
	: ``}

        ${!$country || $country && $country.amCount
	? `<div>
            <a class="${"no-a svelte-trrpqq"}"${add_attribute(
			"href",
			signalListUrl({
				lang: $lang,
				type: "am",
				countryCode: $countryCode
			}),
			0
		)}>
              ${validate_component(AlphaACircle, "Ams").$$render($$result, {}, {}, {})}
              <span class="${"svelte-trrpqq"}">${escape($trans("nav.ams"))}</span>
            </a>
          </div>`
	: ``}
      </div>

      
      <div class="${"group langs svelte-trrpqq"}">
        <div class="${"langs svelte-trrpqq"}">
          <a class="${"no-a svelte-trrpqq"}"${add_attribute("href", langsUrl({ lang: $lang }), 0)}>
            ${validate_component(Translate, "Langs").$$render($$result, {}, {}, {})}
            <span class="${"svelte-trrpqq"}">${escape($trans("nav.langs"))}</span>
          </a>
        </div>
      </div>
    </div>
  </div>
</nav>`;
});

let player = null;

const setPlayer = (pl) => player = pl;

const getPlayer = () => player;

/* src/Components/Dashboard.svelte generated by Svelte v3.18.2 */

const css$b = {
	code: ".dashboard.svelte-1tfihk4{padding-top:var(--topbar-height);height:100%;overflow:hidden;display:flex;flex-direction:column}",
	map: "{\"version\":3,\"file\":\"Dashboard.svelte\",\"sources\":[\"Dashboard.svelte\"],\"sourcesContent\":[\"<style>\\n  .dashboard{\\n    padding-top: var(--topbar-height);\\n    height: 100%;\\n    overflow: hidden;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n</style>\\n\\n<script>\\n  import Topbar from \\\"./Topbar.svelte\\\";\\n  import Player from \\\"./Player.svelte\\\";\\n  //import FloatingList from \\\"./FloatingList.svelte\\\";\\n  import Nav from \\\"./Nav.svelte\\\";\\n\\n  import { setContext } from \\\"svelte\\\";\\n  import { writable } from \\\"svelte/store\\\";\\n  import DASH from \\\"./DASH\\\"\\n  export const navOpen = writable(false);\\n  setContext(DASH, {\\n    navOpen,\\n    closeNav: () => navOpen.set(false),\\n    openNav: () => navOpen.set(true),\\n    toggleNav: () => navOpen.update(b => !b)\\n  });\\n\\n\\n\\timport {setPlayer} from \\\"/Stores/player\\\";\\n  let player;\\n  $: setPlayer(player);\\n</script>\\n\\n<div class=\\\"dashboard\\\">\\n  <Topbar/>\\n  <main class=\\\"main\\\">\\n    <slot/>\\n  </main>\\n  <Nav/>\\n  <Player bind:this={player} />\\n</div>\"],\"names\":[],\"mappings\":\"AACE,yBAAU,CAAC,AACT,WAAW,CAAE,IAAI,eAAe,CAAC,CACjC,MAAM,CAAE,IAAI,CACZ,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC\"}"
};

const Dashboard = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const navOpen = writable(false);

	setContext(DASH, {
		navOpen,
		closeNav: () => navOpen.set(false),
		openNav: () => navOpen.set(true),
		toggleNav: () => navOpen.update(b => !b)
	});

	let player;
	if ($$props.navOpen === void 0 && $$bindings.navOpen && navOpen !== void 0) $$bindings.navOpen(navOpen);
	$$result.css.add(css$b);
	let $$settled;
	let $$rendered;

	do {
		$$settled = true;

		 {
			setPlayer(player);
		}

		$$rendered = `<div class="${"dashboard svelte-1tfihk4"}">
  ${validate_component(Topbar, "Topbar").$$render($$result, {}, {}, {})}
  <main class="${"main"}">
    ${$$slots.default ? $$slots.default({}) : ``}
  </main>
  ${validate_component(Nav, "Nav").$$render($$result, {}, {}, {})}
  ${validate_component(Player, "Player").$$render(
			$$result,
			{ this: player },
			{
				this: $$value => {
					player = $$value;
					$$settled = false;
				}
			},
			{}
		)}
</div>`;
	} while (!$$settled);

	return $$rendered;
});

/* src/Components/Alternates.svelte generated by Svelte v3.18.2 */

const Alternates = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;
	const { page } = stores$1$1();
	$page = get_store_value(page);
	const { countryCode } = stores();
	$page = get_store_value(page);

	let langs = Object.values(map).map(lang => {
		return {
			url: canonical("/" + lang.code + $page.path.slice(3)),
			//lang: lang.code + ($countryCode ? ("-" + $countryCode.toUpperCase()) : "")
			lang: lang.code
		};
	});

	return `${($$result.head += `${each(langs, lang => `<link rel="${"alternate"}"${add_attribute("hreflang", lang.lang, 0)}${add_attribute("href", lang.url, 0)}>`)}`, "")}`;
});

/* src/routes/_layout.svelte generated by Svelte v3.18.2 */

const Layout = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	const { page, session } = stores$1$1();
	const { lang, trans, countryCode } = stores();

	return `${validate_component(Alternates, "Alternates").$$render($$result, {}, {}, {})}

${validate_component(Dashboard, "Dashboard").$$render($$result, {}, {}, {
		default: () => `
	${$$slots.default ? $$slots.default({}) : ``}
`
	})}`;
});

/* src/routes/_error.svelte generated by Svelte v3.18.2 */

const Error$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { status } = $$props;
	let { error } = $$props;
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);

	return `<div>
  ${escape(status)}
</div>

<div>
  ${escape(error.message)}
</div>`;
});

/* src/node_modules/@sapper/internal/App.svelte generated by Svelte v3.18.2 */

const App = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { stores } = $$props;
	let { error } = $$props;
	let { status } = $$props;
	let { segments } = $$props;
	let { level0 } = $$props;
	let { level1 = null } = $$props;
	setContext(CONTEXT_KEY, stores);
	if ($$props.stores === void 0 && $$bindings.stores && stores !== void 0) $$bindings.stores(stores);
	if ($$props.error === void 0 && $$bindings.error && error !== void 0) $$bindings.error(error);
	if ($$props.status === void 0 && $$bindings.status && status !== void 0) $$bindings.status(status);
	if ($$props.segments === void 0 && $$bindings.segments && segments !== void 0) $$bindings.segments(segments);
	if ($$props.level0 === void 0 && $$bindings.level0 && level0 !== void 0) $$bindings.level0(level0);
	if ($$props.level1 === void 0 && $$bindings.level1 && level1 !== void 0) $$bindings.level1(level1);

	return `


${validate_component(Layout, "Layout").$$render($$result, Object.assign({ segment: segments[0] }, level0.props), {}, {
		default: () => `
	${error
		? `${validate_component(Error$1, "Error").$$render($$result, { error, status }, {}, {})}`
		: `${validate_component(level1.component || missing_component, "svelte:component").$$render($$result, Object.assign(level1.props), {}, {})}`}
`
	})}`;
});

// This file is generated by Sapper — do not edit it!

const ignore = [];

const components = [
	{
		js: () => Promise.resolve().then(function () { return index; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/index.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return languages; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/languages.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return recents; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/recents.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return index$1; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/radio-[signalType(am|fm)]/index.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return _signalFrec__09____09____09____; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return search; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[lang([a-z]{2})]/search.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return index$2; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[langCountry([a-z]{2}-[a-z]{2})]/index.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return index$3; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/index.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return _signalFrec__09____09____09____$1; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return search$1; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[langCountry([a-z]{2}-[a-z]{2})]/search.svelte__"
	},
	{
		js: () => Promise.resolve().then(function () { return _station_; }),
		css: "__SAPPER_CSS_PLACEHOLDER:[langCountry([a-z]{2}-[a-z]{2})]/radio/[station].svelte__"
	}
];

const routes = (d => [
	{
		// [lang([a-z]{2})]/index.svelte
		pattern: /^\/([a-z]{2})\/?$/,
		parts: [
			{ i: 0, params: match => ({ lang: d(match[1]) }) }
		]
	},

	{
		// [lang([a-z]{2})]/languages.svelte
		pattern: /^\/([a-z]{2})\/languages\/?$/,
		parts: [
			null,
			{ i: 1, params: match => ({ lang: d(match[1]) }) }
		]
	},

	{
		// [lang([a-z]{2})]/recents.svelte
		pattern: /^\/([a-z]{2})\/recents\/?$/,
		parts: [
			null,
			{ i: 2, params: match => ({ lang: d(match[1]) }) }
		]
	},

	{
		// [lang([a-z]{2})]/radio-[signalType(am|fm)]/index.svelte
		pattern: /^\/([a-z]{2})\/radio-(am|fm)\/?$/,
		parts: [
			null,
			{ i: 3, params: match => ({ lang: d(match[1]), signalType: d(match[2]) }) }
		]
	},

	{
		// [lang([a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte
		pattern: /^\/([a-z]{2})\/radio-(am|fm)\/([0-9]+|[0-9]+.[0-9]+)\/?$/,
		parts: [
			null,
			null,
			{ i: 4, params: match => ({ lang: d(match[1]), signalType: d(match[2]), signalFrec: d(match[3]) }) }
		]
	},

	{
		// [lang([a-z]{2})]/search.svelte
		pattern: /^\/([a-z]{2})\/search\/?$/,
		parts: [
			null,
			{ i: 5, params: match => ({ lang: d(match[1]) }) }
		]
	},

	{
		// [langCountry([a-z]{2}-[a-z]{2})]/index.svelte
		pattern: /^\/([a-z]{2}-[a-z]{2})\/?$/,
		parts: [
			{ i: 6, params: match => ({ langCountry: d(match[1]) }) }
		]
	},

	{
		// [langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/index.svelte
		pattern: /^\/([a-z]{2}-[a-z]{2})\/radio-(am|fm)\/?$/,
		parts: [
			null,
			{ i: 7, params: match => ({ langCountry: d(match[1]), signalType: d(match[2]) }) }
		]
	},

	{
		// [langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte
		pattern: /^\/([a-z]{2}-[a-z]{2})\/radio-(am|fm)\/([0-9]+|[0-9]+.[0-9]+)\/?$/,
		parts: [
			null,
			null,
			{ i: 8, params: match => ({ langCountry: d(match[1]), signalType: d(match[2]), signalFrec: d(match[3]) }) }
		]
	},

	{
		// [langCountry([a-z]{2}-[a-z]{2})]/search.svelte
		pattern: /^\/([a-z]{2}-[a-z]{2})\/search\/?$/,
		parts: [
			null,
			{ i: 9, params: match => ({ langCountry: d(match[1]) }) }
		]
	},

	{
		// [langCountry([a-z]{2}-[a-z]{2})]/radio/[station].svelte
		pattern: /^\/([a-z]{2}-[a-z]{2})\/radio\/([^\/]+?)\/?$/,
		parts: [
			null,
			null,
			{ i: 10, params: match => ({ langCountry: d(match[1]), station: d(match[2]) }) }
		]
	}
])(decodeURIComponent);

function goto(href, opts = { replaceState: false }) {
	const target = select_target(new URL(href, document.baseURI));

	if (target) {
		_history[opts.replaceState ? 'replaceState' : 'pushState']({ id: cid }, '', href);
		return navigate(target, null).then(() => {});
	}

	location.href = href;
	return new Promise(f => {}); // never resolves
}

const initial_data = typeof __SAPPER__ !== 'undefined' && __SAPPER__;

let ready = false;
let root_component;
let current_token;
let root_preloaded;
let current_branch = [];
let current_query = '{}';

const stores$1 = {
	page: writable({}),
	preloading: writable(null),
	session: writable(initial_data && initial_data.session)
};

let $session;
let session_dirty;

stores$1.session.subscribe(async value => {
	$session = value;

	if (!ready) return;
	session_dirty = true;

	const target = select_target(new URL(location.href));

	const token = current_token = {};
	const { redirect, props, branch } = await hydrate_target(target);
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
});

let prefetching


 = null;

let target;

let uid = 1;

let cid;

const _history = typeof history !== 'undefined' ? history : {
	pushState: (state, title, href) => {},
	replaceState: (state, title, href) => {},
	scrollRestoration: ''
};

const scroll_history = {};

function extract_query(search) {
	const query = Object.create(null);
	if (search.length > 0) {
		search.slice(1).split('&').forEach(searchParam => {
			let [, key, value = ''] = /([^=]*)(?:=(.*))?/.exec(decodeURIComponent(searchParam.replace(/\+/g, ' ')));
			if (typeof query[key] === 'string') query[key] = [query[key]];
			if (typeof query[key] === 'object') (query[key] ).push(value);
			else query[key] = value;
		});
	}
	return query;
}

function select_target(url) {
	if (url.origin !== location.origin) return null;
	if (!url.pathname.startsWith(initial_data.baseUrl)) return null;

	let path = url.pathname.slice(initial_data.baseUrl.length);

	if (path === '') {
		path = '/';
	}

	// avoid accidental clashes between server routes and page routes
	if (ignore.some(pattern => pattern.test(path))) return;

	for (let i = 0; i < routes.length; i += 1) {
		const route = routes[i];

		const match = route.pattern.exec(path);

		if (match) {
			const query = extract_query(url.search);
			const part = route.parts[route.parts.length - 1];
			const params = part.params ? part.params(match) : {};

			const page = { host: location.host, path, query, params };

			return { href: url.href, route, match, page };
		}
	}
}

function scroll_state() {
	return {
		x: pageXOffset,
		y: pageYOffset
	};
}

async function navigate(target, id, noscroll, hash) {
	if (id) {
		// popstate or initial navigation
		cid = id;
	} else {
		const current_scroll = scroll_state();

		// clicked on a link. preserve scroll state
		scroll_history[cid] = current_scroll;

		id = cid = ++uid;
		scroll_history[cid] = noscroll ? current_scroll : { x: 0, y: 0 };
	}

	cid = id;

	if (root_component) stores$1.preloading.set(true);

	const loaded = prefetching && prefetching.href === target.href ?
		prefetching.promise :
		hydrate_target(target);

	prefetching = null;

	const token = current_token = {};
	const { redirect, props, branch } = await loaded;
	if (token !== current_token) return; // a secondary navigation happened while we were loading

	await render(redirect, branch, props, target.page);
	if (document.activeElement) document.activeElement.blur();

	if (!noscroll) {
		let scroll = scroll_history[id];

		if (hash) {
			// scroll is an element id (from a hash), we need to compute y.
			const deep_linked = document.getElementById(hash.slice(1));

			if (deep_linked) {
				scroll = {
					x: 0,
					y: deep_linked.getBoundingClientRect().top
				};
			}
		}

		scroll_history[cid] = scroll;
		if (scroll) scrollTo(scroll.x, scroll.y);
	}
}

async function render(redirect, branch, props, page) {
	if (redirect) return goto(redirect.location, { replaceState: true });

	stores$1.page.set(page);
	stores$1.preloading.set(false);

	if (root_component) {
		root_component.$set(props);
	} else {
		props.stores = {
			page: { subscribe: stores$1.page.subscribe },
			preloading: { subscribe: stores$1.preloading.subscribe },
			session: stores$1.session
		};
		props.level0 = {
			props: await root_preloaded
		};

		// first load — remove SSR'd <head> contents
		const start = document.querySelector('#sapper-head-start');
		const end = document.querySelector('#sapper-head-end');

		if (start && end) {
			while (start.nextSibling !== end) detach(start.nextSibling);
			detach(start);
			detach(end);
		}

		root_component = new App({
			target,
			props,
			hydrate: true
		});
	}

	current_branch = branch;
	current_query = JSON.stringify(page.query);
	ready = true;
	session_dirty = false;
}

function part_changed(i, segment, match, stringified_query) {
	// TODO only check query string changes for preload functions
	// that do in fact depend on it (using static analysis or
	// runtime instrumentation)
	if (stringified_query !== current_query) return true;

	const previous = current_branch[i];

	if (!previous) return false;
	if (segment !== previous.segment) return true;
	if (previous.match) {
		if (JSON.stringify(previous.match.slice(1, i + 2)) !== JSON.stringify(match.slice(1, i + 2))) {
			return true;
		}
	}
}

async function hydrate_target(target)



 {
	const { route, page } = target;
	const segments = page.path.split('/').filter(Boolean);

	let redirect = null;

	const props = { error: null, status: 200, segments: [segments[0]] };

	const preload_context = {
		fetch: (url, opts) => fetch(url, opts),
		redirect: (statusCode, location) => {
			if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
				throw new Error(`Conflicting redirects`);
			}
			redirect = { statusCode, location };
		},
		error: (status, error) => {
			props.error = typeof error === 'string' ? new Error(error) : error;
			props.status = status;
		}
	};

	if (!root_preloaded) {
		root_preloaded = initial_data.preloaded[0] || preload.call(preload_context, {
			host: page.host,
			path: page.path,
			query: page.query,
			params: {}
		}, $session);
	}

	let branch;
	let l = 1;

	try {
		const stringified_query = JSON.stringify(page.query);
		const match = route.pattern.exec(page.path);

		let segment_dirty = false;

		branch = await Promise.all(route.parts.map(async (part, i) => {
			const segment = segments[i];

			if (part_changed(i, segment, match, stringified_query)) segment_dirty = true;

			props.segments[l] = segments[i + 1]; // TODO make this less confusing
			if (!part) return { segment };

			const j = l++;

			if (!session_dirty && !segment_dirty && current_branch[i] && current_branch[i].part === part.i) {
				return current_branch[i];
			}

			segment_dirty = false;

			const { default: component, preload } = await load_component(components[part.i]);

			let preloaded;
			if (ready || !initial_data.preloaded[i + 1]) {
				preloaded = preload
					? await preload.call(preload_context, {
						host: page.host,
						path: page.path,
						query: page.query,
						params: part.params ? part.params(target.match) : {}
					}, $session)
					: {};
			} else {
				preloaded = initial_data.preloaded[i + 1];
			}

			return (props[`level${j}`] = { component, props: preloaded, segment, match, part: part.i });
		}));
	} catch (error) {
		props.error = error;
		props.status = 500;
		branch = [];
	}

	return { redirect, props, branch };
}

function load_css(chunk) {
	const href = `client/${chunk}`;
	if (document.querySelector(`link[href="${href}"]`)) return;

	return new Promise((fulfil, reject) => {
		const link = document.createElement('link');
		link.rel = 'stylesheet';
		link.href = href;

		link.onload = () => fulfil();
		link.onerror = reject;

		document.head.appendChild(link);
	});
}

function load_component(component)


 {
	// TODO this is temporary — once placeholders are
	// always rewritten, scratch the ternary
	const promises = (typeof component.css === 'string' ? [] : component.css.map(load_css));
	promises.unshift(component.js());
	return Promise.all(promises).then(values => values[0]);
}

function detach(node) {
	node.parentNode.removeChild(node);
}

const stores$1$1 = () => getContext(CONTEXT_KEY);

/* src/routes/[lang([a-z]{2})]/index.svelte generated by Svelte v3.18.2 */

const css$c = {
	code: ".contlist.svelte-13dqpv4.svelte-13dqpv4{display:flex;flex-direction:column;padding:1.5em 10%;background:#f5f5f5}.contbox.svelte-13dqpv4.svelte-13dqpv4{display:flex;flex-direction:column;margin:1.5em 0;padding:1.5em;box-shadow:0 1px 1px 0 rgba(0, 0, 0, 0.14),\n      0 2px 1px -1px rgba(0, 0, 0, 0.12), 0 1px 3px 0 rgba(0, 0, 0, 0.2);border-top:var(--primary-color) 6px solid;border-radius:3px;background:#fff}.contname.svelte-13dqpv4.svelte-13dqpv4{margin-bottom:1em}.countrylist.svelte-13dqpv4.svelte-13dqpv4{display:grid;grid-template-columns:repeat(auto-fill, minmax(15em, 1fr));grid-column-gap:1em}.country.svelte-13dqpv4>a.svelte-13dqpv4{display:inline-flex;align-items:center;padding:0.5em;color:var(--primary-color)}.country.svelte-13dqpv4.svelte-13dqpv4 picture{margin:0 0.5em 0 0;width:24px;height:24px}",
	map: "{\"version\":3,\"file\":\"index.svelte\",\"sources\":[\"index.svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n  export async function preload($page, $session){\\n    const continents = await this.fetch(\\\"/api/continents\\\").then(res => res.json());\\n    return {continents};\\n  }\\n</script>\\n\\n<style>\\n  .contlist {\\n    display: flex;\\n    flex-direction: column;\\n    padding: 1.5em 10%;\\n    background: #f5f5f5;\\n  }\\n\\n  .contbox {\\n    display: flex;\\n    flex-direction: column;\\n    margin: 1.5em 0;\\n    padding: 1.5em;\\n    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.14),\\n      0 2px 1px -1px rgba(0, 0, 0, 0.12), 0 1px 3px 0 rgba(0, 0, 0, 0.2);\\n    border-top: var(--primary-color) 6px solid;\\n    border-radius: 3px;\\n    background: #fff;\\n  }\\n\\n  .contname {\\n    margin-bottom: 1em;\\n  }\\n\\n  .countrylist {\\n    display: grid;\\n    grid-template-columns: repeat(auto-fill, minmax(15em, 1fr));\\n    grid-column-gap: 1em;\\n  }\\n\\n  .country > a {\\n    display: inline-flex;\\n    align-items: center;\\n    padding: 0.5em;\\n    color: var(--primary-color);\\n  }\\n\\n  .country :global(picture){\\n    margin: 0 0.5em 0 0;\\n    width: 24px;\\n    height: 24px;\\n  }\\n</style>\\n\\n<script>\\n  import Page from \\\"/Components/Page.svelte\\\";\\n  import CountryFlag from \\\"/Components/CountryFlag.svelte\\\";\\n  import { canonical, countryUrl, indexUrl } from \\\"/Common/urls\\\";\\n\\n  import { stores } from \\\"@sapper/app\\\";\\n  const { page } = stores();\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const { lang, trans } = i18n.stores();\\n\\n  export let continents;\\n\\n  const sort = (a, b) => a.name.localeCompare(b.name);\\n\\n  $: conts = continents.map(cont => {\\n    return {\\n      ...cont, \\n      name: $trans(`continents.${cont.code}`),\\n      countries: cont.countries.map(country => {\\n        return {\\n          ...country,\\n          name: $trans(`countries.${country.code}`)\\n        }\\n      }).sort(sort)\\n    }\\n  }).sort(sort);\\n\\n  const size = 24; // 16 24 32 48 64\\n  const style = \\\"shiny\\\"; // flat shiny\\n\\n  $: meta = {\\n    title: $trans(\\\"globalIndex.head.title\\\"),\\n    desc: $trans(\\\"globalIndex.head.desc\\\"),\\n    canonical: canonical(indexUrl({lang: $lang}))\\n  };\\n</script>\\n\\n<Page {meta}>\\n  <ul class=\\\"contlist\\\">\\n    {#each conts as cont}\\n      <li class=\\\"contbox\\\">\\n        <div class=\\\"contname\\\">{cont.name}</div>\\n        <ul class=\\\"countrylist\\\">\\n          {#each cont.countries as country}\\n            <li class=\\\"country\\\">\\n              <a class=\\\"no-a underline-link\\\" href={countryUrl({ lang: $lang, countryCode: country.code })}>\\n                <CountryFlag {size} {style} countryCode={country.code} />\\n                {country.name}\\n              </a>\\n            </li>\\n          {/each}\\n        </ul>\\n      </li>\\n    {/each}\\n  </ul>\\n</Page>\\n\"],\"names\":[],\"mappings\":\"AAQE,SAAS,8BAAC,CAAC,AACT,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,UAAU,CAAE,OAAO,AACrB,CAAC,AAED,QAAQ,8BAAC,CAAC,AACR,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,KAAK,CAAC,CAAC,CACf,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;MAC1C,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACpE,UAAU,CAAE,IAAI,eAAe,CAAC,CAAC,GAAG,CAAC,KAAK,CAC1C,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,SAAS,8BAAC,CAAC,AACT,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,YAAY,8BAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,qBAAqB,CAAE,OAAO,SAAS,CAAC,CAAC,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAC3D,eAAe,CAAE,GAAG,AACtB,CAAC,AAED,uBAAQ,CAAG,CAAC,eAAC,CAAC,AACZ,OAAO,CAAE,WAAW,CACpB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,KAAK,CACd,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AAED,sCAAQ,CAAC,AAAQ,OAAO,AAAC,CAAC,AACxB,MAAM,CAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CACnB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,AACd,CAAC\"}"
};

async function preload$1($page, $session) {
	const continents = await this.fetch("/api/continents").then(res => res.json());
	return { continents };
}

const size = 24; // 16 24 32 48 64
const style = "shiny"; // flat shiny

const U5Blang_u5Ba_zu5Du7B2u7D_u5D = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	let $lang;
	const { page } = stores$1$1();
	const { lang, trans } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	let { continents } = $$props;
	const sort = (a, b) => a.name.localeCompare(b.name);
	if ($$props.continents === void 0 && $$bindings.continents && continents !== void 0) $$bindings.continents(continents);
	$$result.css.add(css$c);
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);

	let conts = continents.map(cont => {
		return {
			...cont,
			name: $trans(`continents.${cont.code}`),
			countries: cont.countries.map(country => {
				return {
					...country,
					name: $trans(`countries.${country.code}`)
				};
			}).sort(sort)
		};
	}).sort(sort);

	let meta = {
		title: $trans("globalIndex.head.title"),
		desc: $trans("globalIndex.head.desc"),
		canonical: canonical(indexUrl({ lang: $lang }))
	};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <ul class="${"contlist svelte-13dqpv4"}">
    ${each(conts, cont => `<li class="${"contbox svelte-13dqpv4"}">
        <div class="${"contname svelte-13dqpv4"}">${escape(cont.name)}</div>
        <ul class="${"countrylist svelte-13dqpv4"}">
          ${each(cont.countries, country => `<li class="${"country svelte-13dqpv4"}">
              <a class="${"no-a underline-link svelte-13dqpv4"}"${add_attribute("href", countryUrl({ lang: $lang, countryCode: country.code }), 0)}>
                ${validate_component(CountryFlag, "CountryFlag").$$render($$result, { size, style, countryCode: country.code }, {}, {})}
                ${escape(country.name)}
              </a>
            </li>`)}
        </ul>
      </li>`)}
  </ul>
`
	})}`;
});

var index = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': U5Blang_u5Ba_zu5Du7B2u7D_u5D,
    preload: preload$1
});

/* src/Components/UnderlineLink.svelte generated by Svelte v3.18.2 */

const css$d = {
	code: "a.svelte-5xmtb9{flex:none;display:block;padding:0.75em;margin:0 auto;position:relative}a.svelte-5xmtb9:after{content:\" \";display:block;position:absolute;width:100%;height:2px;background:var(--primary-color);opacity:0.5;bottom:0.3em;left:0;transition:transform 150ms ease;transform:scaleX(0)}a.svelte-5xmtb9:hover:after{transform:scaleX(1)}.text.svelte-5xmtb9{color:var(--primary-color)}.desc.svelte-5xmtb9{opacity:0.9}",
	map: "{\"version\":3,\"file\":\"UnderlineLink.svelte\",\"sources\":[\"UnderlineLink.svelte\"],\"sourcesContent\":[\"<style>\\n  a{\\n    flex: none;\\n    display: block;\\n    padding: 0.75em;\\n    margin: 0 auto;\\n    position: relative;\\n  }\\n\\n  a:after{\\n    content: \\\" \\\";\\n    display: block;\\n    position: absolute;\\n    width: 100%;\\n    height: 2px;\\n    background: var(--primary-color);\\n    opacity: 0.5;\\n    bottom: 0.3em;\\n    left: 0;\\n    transition: transform 150ms ease;\\n    transform: scaleX(0);\\n  }\\n\\n  a:hover:after{\\n    transform: scaleX(1);\\n  }\\n\\n  .text{\\n    color: var(--primary-color);\\n  }\\n\\n  .desc{\\n    opacity: 0.9;\\n  }\\n</style>\\n\\n<script>\\n  export let href;\\n  export let text;\\n  export let desc;\\n</script>\\n\\n<a class=\\\"no-a\\\" {href}>\\n  <span class=\\\"text\\\">{text}</span>\\n  {#if desc}\\n    <span class=\\\"desc\\\">({desc})</span>\\n  {/if}\\n</a>\"],\"names\":[],\"mappings\":\"AACE,eAAC,CAAC,AACA,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,KAAK,CACd,OAAO,CAAE,MAAM,CACf,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,eAAC,MAAM,CAAC,AACN,OAAO,CAAE,GAAG,CACZ,OAAO,CAAE,KAAK,CACd,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,OAAO,CAAE,GAAG,CACZ,MAAM,CAAE,KAAK,CACb,IAAI,CAAE,CAAC,CACP,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAChC,SAAS,CAAE,OAAO,CAAC,CAAC,AACtB,CAAC,AAED,eAAC,MAAM,MAAM,CAAC,AACZ,SAAS,CAAE,OAAO,CAAC,CAAC,AACtB,CAAC,AAED,mBAAK,CAAC,AACJ,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AAED,mBAAK,CAAC,AACJ,OAAO,CAAE,GAAG,AACd,CAAC\"}"
};

const UnderlineLink = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { href } = $$props;
	let { text } = $$props;
	let { desc } = $$props;
	if ($$props.href === void 0 && $$bindings.href && href !== void 0) $$bindings.href(href);
	if ($$props.text === void 0 && $$bindings.text && text !== void 0) $$bindings.text(text);
	if ($$props.desc === void 0 && $$bindings.desc && desc !== void 0) $$bindings.desc(desc);
	$$result.css.add(css$d);

	return `<a class="${"no-a svelte-5xmtb9"}"${add_attribute("href", href, 0)}>
  <span class="${"text svelte-5xmtb9"}">${escape(text)}</span>
  ${desc
	? `<span class="${"desc svelte-5xmtb9"}">(${escape(desc)})</span>`
	: ``}
</a>`;
});

/* src/Components/LinkListBox.svelte generated by Svelte v3.18.2 */

const css$e = {
	code: ".link-list-box.svelte-1gogfsi{display:flex;flex-direction:column;padding-top:1em}.box.svelte-1gogfsi{display:flex;flex-direction:column;font-size:1.1em;justify-self:center;align-self:center;width:600px;max-width:90%;background:#fff;box-shadow:0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.2);border-top:var(--primary-color) 6px solid;border-radius:3px;text-align:center;padding:1em}",
	map: "{\"version\":3,\"file\":\"LinkListBox.svelte\",\"sources\":[\"LinkListBox.svelte\"],\"sourcesContent\":[\"<style>\\n  .link-list-box{\\n    display: flex;\\n    flex-direction: column;\\n    padding-top: 1em;\\n  }\\n\\n  .box{\\n    display: flex;\\n    flex-direction: column;\\n    font-size: 1.1em;\\n    justify-self: center;\\n    align-self: center;\\n    width: 600px;\\n    max-width: 90%;\\n    background: #fff;\\n    box-shadow: 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.2);\\n    border-top: var(--primary-color) 6px solid;\\n    border-radius: 3px;\\n    text-align: center;\\n    padding: 1em;\\n  }\\n  </style>\\n\\n  <div class=\\\"link-list-box\\\">\\n    <div class=\\\"box\\\">\\n      <slot/>\\n    </div>\\n  </div>\"],\"names\":[],\"mappings\":\"AACE,6BAAc,CAAC,AACb,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,mBAAI,CAAC,AACH,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,SAAS,CAAE,KAAK,CAChB,YAAY,CAAE,MAAM,CACpB,UAAU,CAAE,MAAM,CAClB,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,GAAG,CACd,UAAU,CAAE,IAAI,CAChB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtG,UAAU,CAAE,IAAI,eAAe,CAAC,CAAC,GAAG,CAAC,KAAK,CAC1C,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,AACd,CAAC\"}"
};

const LinkListBox = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	$$result.css.add(css$e);

	return `<div class="${"link-list-box svelte-1gogfsi"}">
    <div class="${"box svelte-1gogfsi"}">
      ${$$slots.default ? $$slots.default({}) : ``}
    </div>
  </div>`;
});

/* src/routes/[lang([a-z]{2})]/languages.svelte generated by Svelte v3.18.2 */

const Languages = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	let $lang;
	const { page } = stores$1$1();
	const { lang, trans } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);

	const langs = Object.values(map).sort((a, b) => {
		a.native.localeCompare(b.native);
	});

	$trans = get_store_value(trans);
	$lang = get_store_value(lang);

	let meta = {
		title: $trans("langs.head.title"),
		desc: $trans("langs.head.desc"),
		canonical: canonical(langsUrl({ lang: $lang }))
	};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1>${escape($trans("langs.title"))}</h1>
  ${validate_component(LinkListBox, "LinkListBox").$$render($$result, {}, {}, {
			default: () => `
    ${each(langs, lang => `${validate_component(UnderlineLink, "UnderlineLink").$$render(
				$$result,
				{
					href: indexUrl({ lang: lang.code }),
					text: lang.native,
					desc: lang.en
				},
				{},
				{}
			)}`)}
  `
		})}
`
	})}`;
});

var languages = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Languages
});

/* src/Components/RadioItem.svelte generated by Svelte v3.18.2 */

const css$f = {
	code: ".radioitem.svelte-1sb6tst.svelte-1sb6tst{flex:none;display:flex;flex-direction:column;margin:0.5em;width:96px;padding:0.5em;box-sizing:content-box;box-shadow:0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.2);color:#616161;background:#fff;border-radius:2px}.image.svelte-1sb6tst.svelte-1sb6tst{position:relative;--width:96px;width:var(--width);border-radius:3px;overflow:hidden;cursor:pointer}.title.svelte-1sb6tst.svelte-1sb6tst{display:flex;font-size:0.8em;line-height:1.5em;height:3em;max-height:3em;overflow:hidden;margin-top:0.75em;text-align:center}.title.svelte-1sb6tst>span.svelte-1sb6tst{margin:auto}",
	map: "{\"version\":3,\"file\":\"RadioItem.svelte\",\"sources\":[\"RadioItem.svelte\"],\"sourcesContent\":[\"<style>\\n  .radioitem{\\n    flex: none;\\n    display: flex;\\n    flex-direction: column;\\n    margin: 0.5em;\\n    width: 96px;\\n    padding: 0.5em;\\n    box-sizing: content-box;\\n    box-shadow: 0 1px 1px 0 rgba(0,0,0,0.14), 0 2px 1px -1px rgba(0,0,0,0.12), 0 1px 3px 0 rgba(0,0,0,0.2);\\n    color: #616161;\\n    background: #fff;\\n    border-radius: 2px;\\n  }\\n\\n  .image{\\n    position: relative;\\n    --width: 96px;\\n    width: var(--width);\\n    border-radius: 3px;\\n    overflow: hidden;\\n    cursor: pointer;\\n  }\\n  \\n  .title{\\n    display: flex;\\n    font-size: 0.8em;\\n    line-height: 1.5em;\\n    height: 3em;\\n    max-height: 3em;\\n    overflow: hidden;\\n    margin-top: 0.75em;\\n    text-align: center;\\n  }\\n\\n  .title > span{\\n    margin: auto;\\n  }\\n\\n  /*\\n  .flag{\\n    position: absolute;\\n    right: 0;\\n    bottom: 0;\\n    width: 16px;\\n    height: 16px;\\n  }\\n  */\\n</style>\\n\\n<script>\\n  import StationImage from \\\"/Components/StationImage.svelte\\\";\\n  import CountryFlag from \\\"/Components/StationImage.svelte\\\";\\n      \\n  import Loading from \\\"/Components/Loading.svelte\\\";\\n\\n  import {stores} from \\\"@sapper/app\\\";\\n  const {page} = stores();\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {lang, countryCode} = i18n.stores();\\n\\n  import {stationUrl} from \\\"/Common/urls\\\";\\n\\n  export let station;\\n</script>\\n\\n<a class=\\\"no-a radioitem\\\" href={stationUrl({lang: $lang, station})}>\\n  <div class=\\\"image\\\">\\n    <StationImage {station} size=\\\"w96\\\" />\\n    <!--\\n    {#if !$countryCode}\\n      <div class=\\\"flag\\\">\\n        <CountryFlag size={16} countryCode={station.countryCode} />\\n      </div>\\n    {/if}\\n    -->\\n  </div>  \\n  <div class=\\\"title\\\" title={station.name}>\\n    <span>{station.name}</span>\\n  </div>\\n</a>\"],\"names\":[],\"mappings\":\"AACE,wCAAU,CAAC,AACT,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,WAAW,CACvB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CACtG,KAAK,CAAE,OAAO,CACd,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,oCAAM,CAAC,AACL,QAAQ,CAAE,QAAQ,CAClB,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,aAAa,CAAE,GAAG,CAClB,QAAQ,CAAE,MAAM,CAChB,MAAM,CAAE,OAAO,AACjB,CAAC,AAED,oCAAM,CAAC,AACL,OAAO,CAAE,IAAI,CACb,SAAS,CAAE,KAAK,CAChB,WAAW,CAAE,KAAK,CAClB,MAAM,CAAE,GAAG,CACX,UAAU,CAAE,GAAG,CACf,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,MAAM,CAClB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,qBAAM,CAAG,mBAAI,CAAC,AACZ,MAAM,CAAE,IAAI,AACd,CAAC\"}"
};

const RadioItem = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $lang;
	const { page } = stores$1$1();
	const { lang, countryCode } = stores();
	$lang = get_store_value(lang);
	let { station } = $$props;
	if ($$props.station === void 0 && $$bindings.station && station !== void 0) $$bindings.station(station);
	$$result.css.add(css$f);
	$lang = get_store_value(lang);

	return `<a class="${"no-a radioitem svelte-1sb6tst"}"${add_attribute("href", stationUrl({ lang: $lang, station }), 0)}>
  <div class="${"image svelte-1sb6tst"}">
    ${validate_component(StationImage, "StationImage").$$render($$result, { station, size: "w96" }, {}, {})}
    
  </div>  
  <div class="${"title svelte-1sb6tst"}"${add_attribute("title", station.name, 0)}>
    <span class="${"svelte-1sb6tst"}">${escape(station.name)}</span>
  </div>
</a>`;
});

/* node_modules/svelte-material-icons-0/dist/AddCircle.svelte generated by Svelte v3.18.2 */

const AddCircle = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { size = "1.5em" } = $$props;
	let { width = size } = $$props;
	let { height = size } = $$props;
	let { color = "currentColor" } = $$props;
	let { fill = color } = $$props;
	let { stroke = color } = $$props;
	let { viewBox = "0 0 24 24" } = $$props;
	if ($$props.size === void 0 && $$bindings.size && size !== void 0) $$bindings.size(size);
	if ($$props.width === void 0 && $$bindings.width && width !== void 0) $$bindings.width(width);
	if ($$props.height === void 0 && $$bindings.height && height !== void 0) $$bindings.height(height);
	if ($$props.color === void 0 && $$bindings.color && color !== void 0) $$bindings.color(color);
	if ($$props.fill === void 0 && $$bindings.fill && fill !== void 0) $$bindings.fill(fill);
	if ($$props.stroke === void 0 && $$bindings.stroke && stroke !== void 0) $$bindings.stroke(stroke);
	if ($$props.viewBox === void 0 && $$bindings.viewBox && viewBox !== void 0) $$bindings.viewBox(viewBox);
	return `<svg xmlns="${"http://www.w3.org/2000/svg"}"${add_attribute("viewBox", viewBox, 0)}${add_attribute("width", width, 0)}${add_attribute("height", height, 0)}${add_attribute("fill", fill, 0)}${add_attribute("stroke", stroke, 0)}><path d="${"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11h-4v4h-2v-4H7v-2h4V7h2v4h4v2z"}"></path></svg>`;
});

/* src/Components/RadioList.svelte generated by Svelte v3.18.2 */

const css$g = {
	code: ".list.svelte-6478ze.svelte-6478ze{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center}.loadmore.svelte-6478ze.svelte-6478ze{display:flex;padding:1rem 0;height:5rem}.loadmore.svelte-6478ze>span.svelte-6478ze{display:flex;margin:0 auto;color:var(--primary-color)}a.svelte-6478ze.svelte-6478ze{display:flex}@media screen and (max-width: 400px){.list.svelte-6478ze>div.svelte-6478ze{width:100%;display:flex}.list.svelte-6478ze.svelte-6478ze .radioitem{flex-direction:row;flex:1;margin:0.25em 0.5em;align-items:center}.list.svelte-6478ze.svelte-6478ze .image{flex:none;margin-right:1em}.list.svelte-6478ze.svelte-6478ze .title{margin:0;flex:1}.list.svelte-6478ze.svelte-6478ze .title > span{margin:auto 0;text-align:start}}",
	map: "{\"version\":3,\"file\":\"RadioList.svelte\",\"sources\":[\"RadioList.svelte\"],\"sourcesContent\":[\"<style>\\n  .list{\\n    display: flex;\\n    flex-direction: row;\\n    flex-wrap: wrap;\\n    justify-content: center;\\n  }\\n\\n  .loadmore{\\n    display: flex;\\n    padding: 1rem 0;\\n    height: 5rem;\\n  }\\n  \\n  .loadmore > span{\\n    display: flex;\\n    margin: 0 auto;\\n    color: var(--primary-color);\\n  }\\n\\n  a{\\n    display: flex;\\n  }\\n\\n  @media screen and (max-width: 400px){\\n    .list > div{\\n      width: 100%;\\n      display: flex;\\n    }\\n\\n    .list :global(.radioitem){\\n      flex-direction: row;\\n      flex: 1;\\n      margin: 0.25em 0.5em;\\n      align-items: center;\\n    }\\n\\n    .list :global(.image){\\n      flex: none;\\n      margin-right: 1em;\\n    }\\n\\n    .list :global(.title){\\n      margin: 0;\\n      flex: 1;\\n    }\\n\\n    .list :global(.title > span){\\n      margin: auto 0;\\n      text-align: start;\\n    }\\n  }\\n</style>\\n\\n<script>\\n  import {flip} from \\\"svelte/animate\\\";\\n  import {fade} from \\\"svelte/transition\\\";\\n\\n  import RadioItem from \\\"./RadioItem.svelte\\\";\\n  import Loading from \\\"./Loading.svelte\\\";\\n  import More from \\\"svelte-material-icons-0/dist/AddCircle.svelte\\\";\\n\\n  export let stations;\\n  export let paging = null;\\n  export let url = null;\\n  export let apiUrl = null;\\n\\n  export let loading = false;\\n\\n  export const loadMore = async () => {\\n    \\n    if(loading || paging == null || !paging.nextPage)\\n      return;\\n\\n    loading = true;\\n  \\n    const nextUrl = apiUrl.indexOf(\\\"?\\\") == -1 ? `${apiUrl}?page=${paging.nextPage}` : `${apiUrl}&page=${paging.nextPage}`;\\n    const res = await fetch(nextUrl);\\n    const json = await res.json();\\n    stations = [...stations, ...json.items];\\n    paging = json.paging;\\n    loading = false;\\n  }\\n\\n</script>\\n\\n<div class=\\\"radiolist\\\">\\n  <div class=\\\"list\\\">\\n    {#each stations as station (station._id)}\\n      <div animate:flip={{duration: 500}} transition:fade|intro|local={{duration: 300}}>\\n        <RadioItem {station} />\\n      </div>\\n    {/each}\\n  </div>\\n  {#if paging != null && paging.nextPage}\\n    <div class=\\\"loadmore\\\">\\n      <span>\\n        {#if !loading}\\n          <a class=\\\"no-a\\\" href=\\\"{url}{url.indexOf(\\\"?\\\") == -1 ? \\\"?\\\" : \\\"&\\\"}page={paging.nextPage}\\\" on:click|preventDefault={loadMore}>\\n            <More size=\\\"3em\\\"/>\\n          </a>\\n        {:else}\\n          <Loading size=\\\"2.5em\\\"/>\\n        {/if}\\n      </span>\\n    </div>\\n  {/if}\\n</div>\"],\"names\":[],\"mappings\":\"AACE,iCAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,MAAM,AACzB,CAAC,AAED,qCAAS,CAAC,AACR,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CAAC,CAAC,CACf,MAAM,CAAE,IAAI,AACd,CAAC,AAED,uBAAS,CAAG,kBAAI,CAAC,AACf,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AAED,6BAAC,CAAC,AACA,OAAO,CAAE,IAAI,AACf,CAAC,AAED,OAAO,MAAM,CAAC,GAAG,CAAC,YAAY,KAAK,CAAC,CAAC,AACnC,mBAAK,CAAG,iBAAG,CAAC,AACV,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,IAAI,AACf,CAAC,AAED,iCAAK,CAAC,AAAQ,UAAU,AAAC,CAAC,AACxB,cAAc,CAAE,GAAG,CACnB,IAAI,CAAE,CAAC,CACP,MAAM,CAAE,MAAM,CAAC,KAAK,CACpB,WAAW,CAAE,MAAM,AACrB,CAAC,AAED,iCAAK,CAAC,AAAQ,MAAM,AAAC,CAAC,AACpB,IAAI,CAAE,IAAI,CACV,YAAY,CAAE,GAAG,AACnB,CAAC,AAED,iCAAK,CAAC,AAAQ,MAAM,AAAC,CAAC,AACpB,MAAM,CAAE,CAAC,CACT,IAAI,CAAE,CAAC,AACT,CAAC,AAED,iCAAK,CAAC,AAAQ,aAAa,AAAC,CAAC,AAC3B,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,UAAU,CAAE,KAAK,AACnB,CAAC,AACH,CAAC\"}"
};

const RadioList = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { stations } = $$props;
	let { paging = null } = $$props;
	let { url = null } = $$props;
	let { apiUrl = null } = $$props;
	let { loading = false } = $$props;

	const loadMore = async () => {
		if (loading || paging == null || !paging.nextPage) return;
		loading = true;

		const nextUrl = apiUrl.indexOf("?") == -1
		? `${apiUrl}?page=${paging.nextPage}`
		: `${apiUrl}&page=${paging.nextPage}`;

		const res = await fetch(nextUrl);
		const json = await res.json();
		stations = [...stations, ...json.items];
		paging = json.paging;
		loading = false;
	};

	if ($$props.stations === void 0 && $$bindings.stations && stations !== void 0) $$bindings.stations(stations);
	if ($$props.paging === void 0 && $$bindings.paging && paging !== void 0) $$bindings.paging(paging);
	if ($$props.url === void 0 && $$bindings.url && url !== void 0) $$bindings.url(url);
	if ($$props.apiUrl === void 0 && $$bindings.apiUrl && apiUrl !== void 0) $$bindings.apiUrl(apiUrl);
	if ($$props.loading === void 0 && $$bindings.loading && loading !== void 0) $$bindings.loading(loading);
	if ($$props.loadMore === void 0 && $$bindings.loadMore && loadMore !== void 0) $$bindings.loadMore(loadMore);
	$$result.css.add(css$g);

	return `<div class="${"radiolist svelte-6478ze"}">
  <div class="${"list svelte-6478ze"}">
    ${each(stations, station => `<div class="${"svelte-6478ze"}">
        ${validate_component(RadioItem, "RadioItem").$$render($$result, { station }, {}, {})}
      </div>`)}
  </div>
  ${paging != null && paging.nextPage
	? `<div class="${"loadmore svelte-6478ze"}">
      <span class="${"svelte-6478ze"}">
        ${!loading
		? `<a class="${"no-a svelte-6478ze"}" href="${escape(url) + escape(url.indexOf("?") == -1 ? "?" : "&") + "page=" + escape(paging.nextPage)}">
            ${validate_component(AddCircle, "More").$$render($$result, { size: "3em" }, {}, {})}
          </a>`
		: `${validate_component(Loading, "Loading").$$render($$result, { size: "2.5em" }, {}, {})}`}
      </span>
    </div>`
	: ``}
</div>`;
});

/* src/routes/[lang([a-z]{2})]/recents.svelte generated by Svelte v3.18.2 */

const css$h = {
	code: ".loading.svelte-18sxh30{margin-top:1.5em;color:var(--primary-color)}",
	map: "{\"version\":3,\"file\":\"recents.svelte\",\"sources\":[\"recents.svelte\"],\"sourcesContent\":[\"<style>\\n  .loading{\\n    margin-top: 1.5em;\\n    color: var(--primary-color);\\n  }\\n</style>\\n\\n<script>\\n  import Page from \\\"/Components/Page.svelte\\\";\\n  import Loading from \\\"/Components/Loading.svelte\\\";\\n  import RadioList from \\\"/Components/RadioList.svelte\\\";\\n\\n  import {stores} from \\\"/Common/i18n\\\"\\n  const {lang, trans} = stores();\\n\\n  import {canonical, recentsUrl} from \\\"/Common/urls\\\";\\n\\n  import {recentList} from \\\"/Stores/recentList\\\";\\n\\n  import {fade} from \\\"svelte/transition\\\";\\n\\n  import {onMount} from \\\"svelte\\\";\\n  \\n  $: meta = {\\n    title: $trans(\\\"recents.head.title\\\"),\\n    desc: $trans(\\\"recents.head.desc\\\"),\\n    canonical: canonical(recentsUrl({lang: $lang}))\\n  }\\n\\n  let mounted = false;\\n  onMount(() => {\\n    mounted = true;\\n  })\\n  \\n</script>\\n\\n<Page {meta}>\\n  <h1>{$trans(\\\"recents.title\\\")}</h1>\\n  {#if mounted}\\n    <div in:fade>\\n      <RadioList stations={$recentList} />\\n    </div>\\n  {:else}\\n    <div class=\\\"loading\\\">\\n      <Loading size=\\\"2.5em\\\" />\\n    </div>\\n  {/if}\\n</Page>\"],\"names\":[],\"mappings\":\"AACE,uBAAQ,CAAC,AACP,UAAU,CAAE,KAAK,CACjB,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC\"}"
};

const Recents = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	let $lang;
	let $recentList = get_store_value(recentList);
	const { lang, trans } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	let mounted = false;

	onMount(() => {
		mounted = true;
	});

	$$result.css.add(css$h);
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);

	let meta = {
		title: $trans("recents.head.title"),
		desc: $trans("recents.head.desc"),
		canonical: canonical(recentsUrl({ lang: $lang }))
	};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1>${escape($trans("recents.title"))}</h1>
  ${mounted
		? `<div>
      ${validate_component(RadioList, "RadioList").$$render($$result, { stations: $recentList }, {}, {})}
    </div>`
		: `<div class="${"loading svelte-18sxh30"}">
      ${validate_component(Loading, "Loading").$$render($$result, { size: "2.5em" }, {}, {})}
    </div>`}
`
	})}`;
});

var recents = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Recents
});

/* src/routes/_shared/signalList.svelte generated by Svelte v3.18.2 */

async function preload$2($page, $session) {
	let url = `/api/signal/${$page.params.signalType}`;

	if ($page.params.langCountry) {
		const [_, $countryCode] = $page.params.langCountry.split("-");
		url += `?countryCode=${$countryCode}`;
	}

	const signals = await this.fetch(url).then(res => res.json());
	return { signals };
}

const SignalList = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;
	let $countryCode;
	let $trans;
	let $lang;
	const { page } = stores$1$1();
	$page = get_store_value(page);
	const { trans, lang, countryCode } = stores();
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	let { signals } = $$props;
	if ($$props.signals === void 0 && $$bindings.signals && signals !== void 0) $$bindings.signals(signals);
	$page = get_store_value(page);
	$countryCode = get_store_value(countryCode);
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	let type = $page.params.signalType;

	let title = $countryCode
	? $trans("signalList.country.title", {
			type,
			country: $trans(`countries.${$countryCode}`)
		})
	: $trans("signalList.global.title", { type });

	let meta = $countryCode
	? {
			title: $trans("signalList.head.country.title", {
				type,
				country: $trans(`countries.${$countryCode}`)
			}),
			desc: $trans("signalList.head.country.desc", {
				type,
				country: $trans(`countries.${$countryCode}`)
			}),
			canonical: canonical(signalListUrl({
				lang: $lang,
				countryCode: $countryCode,
				type
			}))
		}
	: {
			title: $trans("signalList.head.global.title", { type }),
			desc: $trans("signalList.head.global.title", { type }),
			canonical: canonical(signalListUrl({ lang: $lang, type }))
		};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1>${escape(title)}</h1>
  ${validate_component(LinkListBox, "LinkListBox").$$render($$result, {}, {}, {
			default: () => `
    ${each(signals, frec => `${validate_component(UnderlineLink, "UnderlineLink").$$render(
				$$result,
				{
					href: signalUrl({
						lang: $lang,
						countryCode: $countryCode,
						type,
						frec
					}),
					text: $trans("signal.link.text", { type, frec })
				},
				{},
				{}
			)}
      `)}
  `
		})}
`
	})}`;
});

/* src/routes/[lang([a-z]{2})]/radio-[signalType(am|fm)]/index.svelte generated by Svelte v3.18.2 */

const Radio_u5BsignalType_amu7Cfm_u5D = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(SignalList, "Component").$$render($$result, Object.assign($$props), {}, {})}`;
});

var index$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Radio_u5BsignalType_amu7Cfm_u5D,
    preload: preload$2
});

/* src/routes/_shared/signal.svelte generated by Svelte v3.18.2 */

async function preload$3($page, $session) {
	let apiUrl = `/api/signal/${$page.params.signalType}/${$page.params.signalFrec}`;

	if ($page.params.langCountry) {
		const [$lang, $countryCode] = $page.params.langCountry.split("-");
		apiUrl += `?countryCode=${$countryCode}`;
	}

	const { items: stations, paging } = await this.fetch(apiUrl).then(res => res.json());
	return { stations, paging, apiUrl };
}

const Signal = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;
	let $lang;
	let $countryCode;
	let $trans;
	const { page } = stores$1$1();
	$page = get_store_value(page);
	const { lang, trans, countryCode } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	$countryCode = get_store_value(countryCode);
	let { stations } = $$props;
	let { apiUrl } = $$props;
	let { paging } = $$props;
	if ($$props.stations === void 0 && $$bindings.stations && stations !== void 0) $$bindings.stations(stations);
	if ($$props.apiUrl === void 0 && $$bindings.apiUrl && apiUrl !== void 0) $$bindings.apiUrl(apiUrl);
	if ($$props.paging === void 0 && $$bindings.paging && paging !== void 0) $$bindings.paging(paging);
	$page = get_store_value(page);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	$trans = get_store_value(trans);
	let type = $page.params.signalType;
	let frec = $page.params.signalFrec;

	let url = signalUrl({
		lang: $lang,
		type,
		frec,
		countryCode: $countryCode
	});

	let title = $countryCode
	? $trans("signal.country.title", {
			type,
			frec,
			country: $trans(`countries.${$countryCode}`)
		})
	: $trans("signal.global.title", { type, frec });

	let meta = $countryCode
	? {
			title: $trans("signal.head.country.title", {
				type,
				frec,
				country: $trans(`countries.${$countryCode}`)
			}),
			desc: $trans("signal.head.country.desc", {
				type,
				frec,
				country: $trans(`countries.${$countryCode}`)
			}),
			canonical: canonical(url)
		}
	: {
			title: $trans("signal.head.global.title", { type, frec }),
			desc: $trans("signal.head.global.title", { type, frec }),
			canonical: canonical(url)
		};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1>${escape(title)}</h1>
  ${validate_component(RadioList, "RadioList").$$render($$result, { stations, paging, apiUrl, url }, {}, {})}
`
	})}`;
});

/* src/routes/[lang([a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte generated by Svelte v3.18.2 */

const U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(Signal, "Component").$$render($$result, Object.assign($$props), {}, {})}`;
});

var _signalFrec__09____09____09____ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D,
    preload: preload$3
});

/* src/routes/_shared/search.svelte generated by Svelte v3.18.2 */

const css$i = {
	code: "h1.svelte-p013sm{margin-bottom:0 !important}.timing.svelte-p013sm{font-size:1em;font-weight:400;margin-top:0.5em;margin-bottom:2em;text-align:center}",
	map: "{\"version\":3,\"file\":\"search.svelte\",\"sources\":[\"search.svelte\"],\"sourcesContent\":[\"<style>\\n  h1{\\n    margin-bottom: 0 !important;\\n  }\\n\\n  .timing{\\n    font-size: 1em;\\n    font-weight: 400;\\n    margin-top: 0.5em;\\n    margin-bottom: 2em;\\n    text-align: center;\\n  }\\n</style>\\n\\n<script context=\\\"module\\\">\\n  export async function preload($page, $session){\\n    const page = ($page.query.page | 0) || 1;\\n    let apiUrl = `/api/search?q=${encodeURIComponent($page.query.q || \\\"\\\")}`;\\n    // is country-wise\\n    if($page.params.langCountry){\\n      const [$lang, $countryCode] = $page.params.langCountry.split(\\\"-\\\");\\n      apiUrl += `&countryCode=${$countryCode}`;\\n    }\\n\\n    const {items: stations, paging, time} = await this.fetch(`${apiUrl}&page=${page}`).then(res => res.json());\\n    return {stations, paging, apiUrl, time};\\n  }\\n</script>\\n\\n<script>\\n  import Page from \\\"/Components/Page.svelte\\\";\\n  import RadioList from \\\"/Components/RadioList.svelte\\\";\\n\\n  import {canonical, searchUrl} from \\\"/Common/urls\\\";\\n\\n  import {stores} from \\\"@sapper/app\\\";\\n  const {page} = stores();\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {trans, lang, countryCode} = i18n.stores();\\n\\n  export let stations;\\n  export let paging;\\n  export let time;\\n  export let apiUrl;\\n\\n  $: q = $page.query.q || \\\"\\\";\\n\\n  $: url = searchUrl({lang: $lang, countryCode: $countryCode, q});\\n\\n  //$: subtitleKey = $countryCode ? \\\"search.country.subtitle\\\" : \\\"search.global.subtitle\\\";\\n  $: countryName = $countryCode && $trans(`countries.${$countryCode}`);\\n\\n  $: meta = $countryCode ? {\\n    title: $trans(\\\"search.head.country.title\\\", {q, country: $trans(`countries.${$countryCode}`)}),\\n    desc: $trans(\\\"search.head.country.desc\\\", {q, country: $trans(`countries.${$countryCode}`)}),\\n    canonical: canonical(url)\\n  } : {\\n    title: $trans(\\\"signal.head.global.title\\\", {q}),\\n    desc: $trans(\\\"signal.head.global.title\\\", {q}),\\n    canonical: canonical(url)\\n  };\\n</script>\\n\\n<Page {meta}>\\n  <h1>{q}</h1>\\n  <div class=\\\"timing\\\">{$trans(\\\"search.timing\\\", {total: paging.total, s: (time/1000).toFixed(2)})}</div>\\n  <RadioList {stations} {paging} {url} {apiUrl} />\\n</Page>\\n\\n\"],\"names\":[],\"mappings\":\"AACE,gBAAE,CAAC,AACD,aAAa,CAAE,CAAC,CAAC,UAAU,AAC7B,CAAC,AAED,qBAAO,CAAC,AACN,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,CAChB,UAAU,CAAE,KAAK,CACjB,aAAa,CAAE,GAAG,CAClB,UAAU,CAAE,MAAM,AACpB,CAAC\"}"
};

async function preload$4($page, $session) {
	const page = $page.query.page | 0 || 1;
	let apiUrl = `/api/search?q=${encodeURIComponent($page.query.q || "")}`;

	// is country-wise
	if ($page.params.langCountry) {
		const [$lang, $countryCode] = $page.params.langCountry.split("-");
		apiUrl += `&countryCode=${$countryCode}`;
	}

	const { items: stations, paging, time } = await this.fetch(`${apiUrl}&page=${page}`).then(res => res.json());
	return { stations, paging, apiUrl, time };
}

const Search$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $page;
	let $lang;
	let $countryCode;
	let $trans;
	const { page } = stores$1$1();
	$page = get_store_value(page);
	const { trans, lang, countryCode } = stores();
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	let { stations } = $$props;
	let { paging } = $$props;
	let { time } = $$props;
	let { apiUrl } = $$props;
	if ($$props.stations === void 0 && $$bindings.stations && stations !== void 0) $$bindings.stations(stations);
	if ($$props.paging === void 0 && $$bindings.paging && paging !== void 0) $$bindings.paging(paging);
	if ($$props.time === void 0 && $$bindings.time && time !== void 0) $$bindings.time(time);
	if ($$props.apiUrl === void 0 && $$bindings.apiUrl && apiUrl !== void 0) $$bindings.apiUrl(apiUrl);
	$$result.css.add(css$i);
	$page = get_store_value(page);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	$trans = get_store_value(trans);
	let q = $page.query.q || "";

	let url = searchUrl({
		lang: $lang,
		countryCode: $countryCode,
		q
	});

	let countryName = $countryCode && $trans(`countries.${$countryCode}`);

	let meta = $countryCode
	? {
			title: $trans("search.head.country.title", {
				q,
				country: $trans(`countries.${$countryCode}`)
			}),
			desc: $trans("search.head.country.desc", {
				q,
				country: $trans(`countries.${$countryCode}`)
			}),
			canonical: canonical(url)
		}
	: {
			title: $trans("signal.head.global.title", { q }),
			desc: $trans("signal.head.global.title", { q }),
			canonical: canonical(url)
		};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1 class="${"svelte-p013sm"}">${escape(q)}</h1>
  <div class="${"timing svelte-p013sm"}">${escape($trans("search.timing", {
			total: paging.total,
			s: (time / 1000).toFixed(2)
		}))}</div>
  ${validate_component(RadioList, "RadioList").$$render($$result, { stations, paging, url, apiUrl }, {}, {})}
`
	})}`;
});

/* src/routes/[lang([a-z]{2})]/search.svelte generated by Svelte v3.18.2 */

const Search_1$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(Search$1, "Search").$$render($$result, Object.assign($$props), {}, {})}`;
});

var search = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Search_1$1,
    preload: preload$4
});

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/index.svelte generated by Svelte v3.18.2 */

async function preload$5($page, $session) {
	const [lang, countryCode] = $page.params.langCountry.split("-");
	const url = countryUrl({ lang, countryCode });
	const apiUrl = `/api/stations/${countryCode}`;
	const json = await this.fetch(apiUrl + "?page=" + ($page.query.page || 1)).then(res => res.json());

	return {
		url,
		apiUrl,
		stations: json.items,
		paging: json.paging
	};
}

const U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	let $countryCode;
	let $lang;
	const { page } = stores$1$1();
	const { trans, lang, countryCode } = stores();
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);
	$countryCode = get_store_value(countryCode);
	let { url } = $$props;
	let { apiUrl } = $$props;
	let { stations } = $$props;
	let { paging } = $$props;
	if ($$props.url === void 0 && $$bindings.url && url !== void 0) $$bindings.url(url);
	if ($$props.apiUrl === void 0 && $$bindings.apiUrl && apiUrl !== void 0) $$bindings.apiUrl(apiUrl);
	if ($$props.stations === void 0 && $$bindings.stations && stations !== void 0) $$bindings.stations(stations);
	if ($$props.paging === void 0 && $$bindings.paging && paging !== void 0) $$bindings.paging(paging);
	$trans = get_store_value(trans);
	$countryCode = get_store_value(countryCode);
	$lang = get_store_value(lang);

	let meta = {
		title: $trans("countryIndex.head.title", {
			country: $trans(`countries.${$countryCode}`)
		}),
		desc: $trans("countryIndex.head.desc", {
			country: $trans(`countries.${$countryCode}`)
		}),
		canonical: canonical(countryUrl({ lang: $lang, countryCode: $countryCode }))
	};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <h1>
    ${escape($trans("countryIndex.title", {
			country: $trans(`countries.${$countryCode}`)
		}))}
  </h1>
  ${validate_component(RadioList, "RadioList").$$render($$result, { url, apiUrl, stations, paging }, {}, {})}
`
	})}`;
});

var index$2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D,
    preload: preload$5
});

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/index.svelte generated by Svelte v3.18.2 */

const Radio_u5BsignalType_amu7Cfm_u5D$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(SignalList, "Component").$$render($$result, Object.assign($$props), {}, {})}`;
});

var index$3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Radio_u5BsignalType_amu7Cfm_u5D$1,
    preload: preload$2
});

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte generated by Svelte v3.18.2 */

const U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D$1 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(Signal, "Component").$$render($$result, Object.assign($$props), {}, {})}`;
});

var _signalFrec__09____09____09____$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D$1,
    preload: preload$3
});

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/search.svelte generated by Svelte v3.18.2 */

const Search_1$2 = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	return `${validate_component(Search$1, "Search").$$render($$result, Object.assign($$props), {}, {})}`;
});

var search$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': Search_1$2,
    preload: preload$4
});

/* src/Components/Tabs/Tabs.svelte generated by Svelte v3.18.2 */

const css$j = {
	code: ".tabs.svelte-j3h0p8{display:flex;flex-direction:column;overflow:hidden}",
	map: "{\"version\":3,\"file\":\"Tabs.svelte\",\"sources\":[\"Tabs.svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n\\texport const TABS = {};\\n</script>\\n\\n<style>\\n  .tabs{\\n    display: flex;\\n    flex-direction: column;\\n    overflow: hidden;\\n  }\\n</style>\\n\\n<script>\\n\\timport { setContext, onDestroy } from 'svelte';\\n\\timport { get, writable } from 'svelte/store';\\n\\n\\tconst tabs = writable([]);\\n\\tconst panels = writable([]);\\n\\tconst selectedTab = writable(null);\\n\\tconst selectedPanel = writable(null);\\n\\n\\tsetContext(TABS, {\\n\\t\\tregisterTab: tab => {\\n\\t\\t\\ttabs.update($tabs => [...$tabs, tab]);\\n\\t\\t\\tselectedTab.update(current => current || tab);\\n\\t\\t\\t\\n\\t\\t\\tonDestroy(() => {\\n\\t\\t\\t\\ttabs.update($tabs => {\\n          const i = $tabs.indexOf(tab);\\n\\t\\t\\t\\t  const helper = $tabs.slice();\\n          helper.splice(i, 1);\\n  \\t\\t\\t\\tselectedTab.update(current => current === tab ? (tabs[i] || tabs[tabs.length - 1]) : current);\\n          return helper;\\n        });\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tregisterPanel: panel => {\\n\\t\\t\\tpanels.update($panels => [...$panels, panel]);\\n\\t\\t\\tselectedPanel.update(current => current || $panels[$tabs.indexOf($selectedTab)]);\\n\\t\\t\\t\\n\\t\\t\\tonDestroy(() => {\\n\\t\\t\\t\\tpanels.update($panels => {\\n          const i = $panels.indexOf(panel);\\n          const helper = $panels.slice();\\n          helper.splice(i, 1);\\n\\t\\t\\t\\t  selectedPanel.update(current => current === panel ? (panels[i] || panels[panels.length - 1]) : current);\\n          return helper;\\n        });\\n\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\tselectTab: tab => {\\n\\t\\t\\tconst i = get(tabs).indexOf(tab);\\n\\t\\t\\tselectedTab.set(tab);\\n\\t\\t\\tselectedPanel.set(get(panels)[i]);\\n    },\\n  \\n    selectedTab,\\n    selectedPanel,\\n    tabs,\\n    panels\\n\\t});\\n</script>\\n\\n<div class=\\\"tabs\\\">\\n\\t<slot></slot>\\n</div>\"],\"names\":[],\"mappings\":\"AAKE,mBAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,QAAQ,CAAE,MAAM,AAClB,CAAC\"}"
};

const TABS = {};

const Tabs = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $panels;
	let $tabs;
	let $selectedTab;
	const tabs = writable([]);
	$tabs = get_store_value(tabs);
	const panels = writable([]);
	$panels = get_store_value(panels);
	const selectedTab = writable(null);
	$selectedTab = get_store_value(selectedTab);
	const selectedPanel = writable(null);

	setContext(TABS, {
		registerTab: tab => {
			tabs.update($tabs => [...$tabs, tab]);
			selectedTab.update(current => current || tab);

			onDestroy(() => {
				tabs.update($tabs => {
					const i = $tabs.indexOf(tab);
					const helper = $tabs.slice();
					helper.splice(i, 1);

					selectedTab.update(current => current === tab
					? tabs[i] || tabs[tabs.length - 1]
					: current);

					return helper;
				});
			});
		},
		registerPanel: panel => {
			panels.update($panels => [...$panels, panel]);
			selectedPanel.update(current => current || $panels[$tabs.indexOf($selectedTab)]);

			onDestroy(() => {
				panels.update($panels => {
					const i = $panels.indexOf(panel);
					const helper = $panels.slice();
					helper.splice(i, 1);

					selectedPanel.update(current => current === panel
					? panels[i] || panels[panels.length - 1]
					: current);

					return helper;
				});
			});
		},
		selectTab: tab => {
			const i = get_store_value(tabs).indexOf(tab);
			selectedTab.set(tab);
			selectedPanel.set(get_store_value(panels)[i]);
		},
		selectedTab,
		selectedPanel,
		tabs,
		panels
	});

	$$result.css.add(css$j);
	$panels = get_store_value(panels);
	$tabs = get_store_value(tabs);
	$selectedTab = get_store_value(selectedTab);

	return `<div class="${"tabs svelte-j3h0p8"}">
	${$$slots.default ? $$slots.default({}) : ``}
</div>`;
});

/* src/Components/Tabs/TabList.svelte generated by Svelte v3.18.2 */

const css$k = {
	code: ".tab-list.svelte-xtixxl{overflow:hidden;display:flex;overflow:hidden}.scroll.svelte-xtixxl{flex:none;display:flex;flex-direction:row;align-items:center;transition:transform 200ms ease}.underline.svelte-xtixxl{position:absolute;bottom:0;transition:transform 200ms ease, width 200ms ease;height:2px;background-color:var(--primary-color)}",
	map: "{\"version\":3,\"file\":\"TabList.svelte\",\"sources\":[\"TabList.svelte\"],\"sourcesContent\":[\"<style>\\n\\t.tab-list {\\n    overflow: hidden;\\n    display: flex;\\n    overflow: hidden;\\n  }\\n\\n  .scroll {\\n    flex: none;\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    transition: transform 200ms ease;\\n  }\\n\\n  .underline{\\n    position: absolute;\\n    bottom: 0;\\n    transition: transform 200ms ease, width 200ms ease;\\n    height: 2px;\\n    background-color: var(--primary-color);\\n  }\\n</style>\\n\\n<script>\\n  import {onMount, getContext} from \\\"svelte\\\";\\n  import {TABS} from \\\"./Tabs.svelte\\\";\\n  \\n  const {selectedTab, tabs, currentIndex, size} = getContext(TABS);\\n  \\n  let out, scroll, outW, scrollW;\\n  let mounted = false;\\n\\n  onMount(() => mounted = true)\\n\\n  let scrollX, underW, underX = 0;\\n\\n  $: if(mounted){\\n    const selectedIndex = $tabs.indexOf($selectedTab);\\n    const selectedEl = scroll.children[selectedIndex];\\n    \\n    if(scrollW <= outW){\\n      scrollX = 0;\\n    } else {\\n      const min = -(scrollW - outW);\\n      const max = 0;\\n\\n      const center = selectedEl.offsetLeft + (selectedEl.clientWidth / 2);\\n      \\n      scrollX = Math.min(max, Math.max(min, (out.clientWidth / 2) - center));\\n    }\\n\\n    underW = selectedEl.clientWidth;\\n    underX = scrollX + selectedEl.offsetLeft;\\n  }\\n</script>\\n\\n<div bind:this={out} bind:clientWidth={outW} class=\\\"tab-list\\\">\\n  <div \\n    bind:this={scroll}\\n    bind:clientWidth={scrollW}\\n    class=\\\"scroll\\\"\\n    style=\\\"transform: translateX({scrollX}px)\\\"\\n  >\\n    <slot></slot>\\n  </div>\\n    <div class=\\\"underline\\\" style=\\\"width: {underW}px; transform: translateX({underX}px)\\\">\\n  </div>\\n</div>\"],\"names\":[],\"mappings\":\"AACC,SAAS,cAAC,CAAC,AACR,QAAQ,CAAE,MAAM,CAChB,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,OAAO,cAAC,CAAC,AACP,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,IAAI,AAClC,CAAC,AAED,wBAAU,CAAC,AACT,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,CAAC,CACT,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAClD,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,IAAI,eAAe,CAAC,AACxC,CAAC\"}"
};

const TabList = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $tabs;
	let $selectedTab;
	const { selectedTab, tabs, currentIndex, size } = getContext(TABS);
	$selectedTab = get_store_value(selectedTab);
	$tabs = get_store_value(tabs);
	let out, scroll, outW, scrollW;
	let mounted = false;
	onMount(() => mounted = true);
	let scrollX, underW, underX = 0;
	$$result.css.add(css$k);
	$tabs = get_store_value(tabs);
	$selectedTab = get_store_value(selectedTab);

	 {
		if (mounted) {
			const selectedIndex = $tabs.indexOf($selectedTab);
			const selectedEl = scroll.children[selectedIndex];

			{
				const min = -(scrollW - outW);
				const max = 0;
				const center = selectedEl.offsetLeft + selectedEl.clientWidth / 2;
				scrollX = Math.min(max, Math.max(min, out.clientWidth / 2 - center));
			}

			underW = selectedEl.clientWidth;
			underX = scrollX + selectedEl.offsetLeft;
		}
	}

	return `<div class="${"tab-list svelte-xtixxl"}"${add_attribute("this", out, 1)}>
  <div class="${"scroll svelte-xtixxl"}" style="${"transform: translateX(" + escape(scrollX) + "px)"}"${add_attribute("this", scroll, 1)}>
    ${$$slots.default ? $$slots.default({}) : ``}
  </div>
    <div class="${"underline svelte-xtixxl"}" style="${"width: " + escape(underW) + "px; transform: translateX(" + escape(underX) + "px)"}">
  </div>
</div>`;
});

/* src/Components/Tabs/TabPanel.svelte generated by Svelte v3.18.2 */

const css$l = {
	code: ".tab-panel.svelte-kmq3fq{flex:none;align-self:flex-start;transition:opacity 500ms ease;opacity:0}.selected.svelte-kmq3fq{opacity:1}",
	map: "{\"version\":3,\"file\":\"TabPanel.svelte\",\"sources\":[\"TabPanel.svelte\"],\"sourcesContent\":[\"<style>\\n  .tab-panel{\\n    flex: none;\\n    align-self: flex-start;\\n    transition: opacity 500ms ease;\\n    opacity: 0;\\n  }\\n\\n  .selected{\\n    opacity: 1;\\n  }\\n</style>\\n\\n<script>\\n\\timport { getContext } from 'svelte';\\n\\timport { TABS } from './Tabs.svelte';\\n\\n\\tconst panel = {};\\n\\tconst { registerPanel, selectedPanel, panels } = getContext(TABS);\\n\\n\\tregisterPanel(panel);\\n</script>\\n\\n<div class=\\\"tab-panel\\\" class:selected={$selectedPanel === panel}\\n  style=\\\"width: {100 / $panels.length}%\\\"\\n>\\n  <slot/>\\n</div>\"],\"names\":[],\"mappings\":\"AACE,wBAAU,CAAC,AACT,IAAI,CAAE,IAAI,CACV,UAAU,CAAE,UAAU,CACtB,UAAU,CAAE,OAAO,CAAC,KAAK,CAAC,IAAI,CAC9B,OAAO,CAAE,CAAC,AACZ,CAAC,AAED,uBAAS,CAAC,AACR,OAAO,CAAE,CAAC,AACZ,CAAC\"}"
};

const TabPanel = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $selectedPanel;
	let $panels;
	const panel = {};
	const { registerPanel, selectedPanel, panels } = getContext(TABS);
	$selectedPanel = get_store_value(selectedPanel);
	$panels = get_store_value(panels);
	registerPanel(panel);
	$$result.css.add(css$l);
	$selectedPanel = get_store_value(selectedPanel);
	$panels = get_store_value(panels);

	return `<div class="${["tab-panel svelte-kmq3fq", $selectedPanel === panel ? "selected" : ""].join(" ").trim()}" style="${"width: " + escape(100 / $panels.length) + "%"}">
  ${$$slots.default ? $$slots.default({}) : ``}
</div>`;
});

/* src/Components/Tabs/TabPanelList.svelte generated by Svelte v3.18.2 */

const css$m = {
	code: ".tab-panel-list.svelte-1g44aop{display:flex;overflow:hidden;transition:height 200ms ease}.scroll.svelte-1g44aop{flex:none;display:flex;flex-direction:row;flex-wrap:nowrap;transition:transform 200ms ease}",
	map: "{\"version\":3,\"file\":\"TabPanelList.svelte\",\"sources\":[\"TabPanelList.svelte\"],\"sourcesContent\":[\"<style>\\n\\t.tab-panel-list{\\n\\t\\tdisplay: flex;\\n\\t\\toverflow: hidden;\\n\\t\\ttransition: height 200ms ease;\\n\\t}\\n\\n\\t.scroll{\\n\\t\\tflex: none;\\n\\t\\tdisplay: flex;\\n\\t\\tflex-direction: row;\\n\\t\\tflex-wrap: nowrap; \\n\\t\\ttransition: transform 200ms ease;\\n\\t}\\n</style>\\n\\n<script>\\n\\timport {onMount, getContext} from \\\"svelte\\\";\\n\\timport {TABS} from \\\"./Tabs.svelte\\\";\\n\\n\\tconst {panels, selectedPanel} = getContext(TABS);\\n\\n\\tlet scroll;\\n\\tlet mounted = false;\\n\\tlet scrollX, h = 0; // in percentaje\\n\\tonMount(() => mounted = true);\\n\\n\\t$: if(mounted){\\n\\t\\tconst selectedIndex = $panels.indexOf($selectedPanel);\\n\\t\\tscrollX = (-1 / $panels.length) * selectedIndex;\\n\\t\\th = scroll.children[selectedIndex].clientHeight;\\n\\t}\\n\\n</script>\\n\\n<div class=\\\"tab-panel-list\\\" style={mounted && `height: ${h}px`}>\\n\\t<div bind:this={scroll} class=\\\"scroll\\\" style=\\\"width: {$panels.length * 100}%; transform: translateX({scrollX * 100}%);\\\">\\n\\t\\t<slot></slot>\\n\\t</div>\\n</div>\"],\"names\":[],\"mappings\":\"AACC,8BAAe,CAAC,AACf,OAAO,CAAE,IAAI,CACb,QAAQ,CAAE,MAAM,CAChB,UAAU,CAAE,MAAM,CAAC,KAAK,CAAC,IAAI,AAC9B,CAAC,AAED,sBAAO,CAAC,AACP,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,SAAS,CAAE,MAAM,CACjB,UAAU,CAAE,SAAS,CAAC,KAAK,CAAC,IAAI,AACjC,CAAC\"}"
};

const TabPanelList = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $panels;
	let $selectedPanel;
	const { panels, selectedPanel } = getContext(TABS);
	$panels = get_store_value(panels);
	$selectedPanel = get_store_value(selectedPanel);
	let scroll;
	let mounted = false;
	let scrollX, h = 0; // in percentaje
	onMount(() => mounted = true);
	$$result.css.add(css$m);
	$panels = get_store_value(panels);
	$selectedPanel = get_store_value(selectedPanel);

	 {
		if (mounted) {
			const selectedIndex = $panels.indexOf($selectedPanel);
			scrollX = -1 / $panels.length * selectedIndex;
			h = scroll.children[selectedIndex].clientHeight;
		}
	}

	return `<div class="${"tab-panel-list svelte-1g44aop"}"${add_attribute("style", mounted && `height: ${h}px`, 0)}>
	<div class="${"scroll svelte-1g44aop"}" style="${"width: " + escape($panels.length * 100) + "%; transform: translateX(" + escape(scrollX * 100) + "%);"}"${add_attribute("this", scroll, 1)}>
		${$$slots.default ? $$slots.default({}) : ``}
	</div>
</div>`;
});

/* src/Components/Tabs/Tab.svelte generated by Svelte v3.18.2 */

const css$n = {
	code: ".tab.svelte-m8jp4c.svelte-m8jp4c{flex:none;padding:0.5em 0.25em 0.4em 0.25em;display:flex;transition:color 200ms ease;user-select:none;cursor:pointer;margin:0 0.4em;border-bottom:2px solid transparent}.selected.svelte-m8jp4c.svelte-m8jp4c{color:var(--primary-color)}.tab.svelte-m8jp4c>span.svelte-m8jp4c{margin:0.25em}",
	map: "{\"version\":3,\"file\":\"Tab.svelte\",\"sources\":[\"Tab.svelte\"],\"sourcesContent\":[\"<style>\\n\\t.tab {\\n    flex: none;\\n    padding: 0.5em 0.25em 0.4em 0.25em;\\n    display: flex;\\n    transition: color 200ms ease;\\n    user-select: none;\\n    cursor: pointer;\\n    margin: 0 0.4em;\\n    border-bottom: 2px solid transparent;\\n  }\\n\\n  .selected{\\n    color: var(--primary-color);\\n  }\\n\\t\\n  .tab > span{\\n    margin: 0.25em;\\n  }\\n</style>\\n\\n<script>\\n\\timport { getContext } from 'svelte';\\n\\timport { TABS } from './Tabs.svelte';\\n  \\n  export let selected = false;\\n\\n\\tconst tab = {};\\n\\tconst { registerTab, selectTab, selectedTab } = getContext(TABS);\\n\\n  registerTab(tab);\\n  \\n  if(selected)\\n    selectTab(tab);\\n</script>\\n\\n<div class=\\\"tab\\\" class:selected={$selectedTab === tab} on:click={() => selectTab(tab)}>\\n\\t<span>\\n    <slot></slot>\\n  </span>\\n</div>\"],\"names\":[],\"mappings\":\"AACC,IAAI,4BAAC,CAAC,AACH,IAAI,CAAE,IAAI,CACV,OAAO,CAAE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAClC,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CAAC,KAAK,CAAC,IAAI,CAC5B,WAAW,CAAE,IAAI,CACjB,MAAM,CAAE,OAAO,CACf,MAAM,CAAE,CAAC,CAAC,KAAK,CACf,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,WAAW,AACtC,CAAC,AAED,qCAAS,CAAC,AACR,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AAED,kBAAI,CAAG,kBAAI,CAAC,AACV,MAAM,CAAE,MAAM,AAChB,CAAC\"}"
};

const Tab = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $selectedTab;
	let { selected = false } = $$props;
	const tab = {};
	const { registerTab, selectTab, selectedTab } = getContext(TABS);
	$selectedTab = get_store_value(selectedTab);
	registerTab(tab);
	if (selected) selectTab(tab);
	if ($$props.selected === void 0 && $$bindings.selected && selected !== void 0) $$bindings.selected(selected);
	$$result.css.add(css$n);
	$selectedTab = get_store_value(selectedTab);

	return `<div class="${["tab svelte-m8jp4c", $selectedTab === tab ? "selected" : ""].join(" ").trim()}">
	<span class="${"svelte-m8jp4c"}">
    ${$$slots.default ? $$slots.default({}) : ``}
  </span>
</div>`;
});

/* src/Components/Programming.svelte generated by Svelte v3.18.2 */

const css$o = {
	code: ".programming.svelte-1e8g7tm{box-shadow:rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;background:#fff;border-radius:4px;display:flex;flex-direction:column}.label.svelte-1e8g7tm{flex:none;font-size:1.1em;padding:1em 1.25em;border-bottom:rgba(231,231,231) 1px solid}table.svelte-1e8g7tm{width:100%;border-collapse:collapse;border:none}.time.svelte-1e8g7tm{white-space:nowrap;text-align:center}.name.svelte-1e8g7tm{width:100%}td.svelte-1e8g7tm{padding:0.6em 0.75em}tr.svelte-1e8g7tm:nth-child(odd){background:rgb(61, 90, 254, 0.1)}",
	map: "{\"version\":3,\"file\":\"Programming.svelte\",\"sources\":[\"Programming.svelte\"],\"sourcesContent\":[\"<style>\\n  .programming{\\n    box-shadow: rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;\\n    background: #fff;\\n    border-radius: 4px;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .label{\\n    flex: none;\\n    font-size: 1.1em;\\n    padding: 1em 1.25em;\\n    border-bottom: rgba(231,231,231) 1px solid;\\n  }\\n\\n  .day{}\\n\\n  table{\\n    width: 100%;\\n    border-collapse: collapse;\\n    border: none;\\n  }\\n\\n  .time{\\n    white-space: nowrap;\\n    text-align: center;\\n  }\\n\\n  .name{\\n    width: 100%;\\n  }\\n\\n  td{\\n    padding: 0.6em 0.75em;\\n  }\\n\\n  tr:nth-child(odd){\\n    background: rgb(61, 90, 254, 0.1);\\n  }\\n</style>\\n\\n<script>\\n  import {Tabs, TabList, Tab, TabPanelList, TabPanel} from \\\"/Components/Tabs/tabs\\\";\\n\\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {trans} = i18n.stores();\\n\\n  export let programming;\\n\\n  $: list = Object.entries(programming);\\n\\n  const h = time => {\\n    if(time < 12)\\n      return `${time} am`;\\n    else\\n      return `${time - 12} pm`; \\n  }\\n\\n  const dayMap = [6,0,1,2,3,4,5];\\n  const today = dayMap[new Date().getDay()];\\n</script>\\n\\n<div class=\\\"programming\\\">\\n  <div class=\\\"label\\\">\\n    {$trans(\\\"station.labels.programming\\\")}\\n  </div>\\n\\n  <Tabs>\\n    <TabList>\\n      {#each list as [index, day]}\\n        <Tab selected={index == today}>{$trans(`week.${index}`)}</Tab>\\n      {/each}\\n    </TabList>\\n\\n    <TabPanelList>\\n      {#each list as [index, day]}\\n        <TabPanel>\\n          <div class=\\\"day\\\">\\n            <table>\\n              <tbody>\\n                {#each day as entry}\\n                  <tr>\\n                    <td class=\\\"time\\\">{h(entry.from)} - {h(entry.to)}</td>\\n                    <td class=\\\"name\\\">{entry.name}</td>\\n                  </tr>\\n                {/each}\\n              </tbody>\\n            </table>\\n          </div>\\n        </TabPanel>\\n      {/each}  \\n    </TabPanelList>\\n  </Tabs>\\n</div>\\n\\n\"],\"names\":[],\"mappings\":\"AACE,2BAAY,CAAC,AACX,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACzH,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,qBAAM,CAAC,AACL,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CAAC,MAAM,CACnB,aAAa,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,AAC5C,CAAC,AAID,oBAAK,CAAC,AACJ,KAAK,CAAE,IAAI,CACX,eAAe,CAAE,QAAQ,CACzB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,oBAAK,CAAC,AACJ,WAAW,CAAE,MAAM,CACnB,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,oBAAK,CAAC,AACJ,KAAK,CAAE,IAAI,AACb,CAAC,AAED,iBAAE,CAAC,AACD,OAAO,CAAE,KAAK,CAAC,MAAM,AACvB,CAAC,AAED,iBAAE,WAAW,GAAG,CAAC,CAAC,AAChB,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC\"}"
};

const Programming = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	const { trans } = stores();
	$trans = get_store_value(trans);
	let { programming } = $$props;

	const h = time => {
		if (time < 12) return `${time} am`; else return `${time - 12} pm`;
	};

	const dayMap = [6, 0, 1, 2, 3, 4, 5];
	const today = dayMap[new Date().getDay()];
	if ($$props.programming === void 0 && $$bindings.programming && programming !== void 0) $$bindings.programming(programming);
	$$result.css.add(css$o);
	$trans = get_store_value(trans);
	let list = Object.entries(programming);

	return `<div class="${"programming svelte-1e8g7tm"}">
  <div class="${"label svelte-1e8g7tm"}">
    ${escape($trans("station.labels.programming"))}
  </div>

  ${validate_component(Tabs, "Tabs").$$render($$result, {}, {}, {
		default: () => `
    ${validate_component(TabList, "TabList").$$render($$result, {}, {}, {
			default: () => `
      ${each(list, ([index, day]) => `${validate_component(Tab, "Tab").$$render($$result, { selected: index == today }, {}, {
				default: () => `${escape($trans(`week.${index}`))}`
			})}`)}
    `
		})}

    ${validate_component(TabPanelList, "TabPanelList").$$render($$result, {}, {}, {
			default: () => `
      ${each(list, ([index, day]) => `${validate_component(TabPanel, "TabPanel").$$render($$result, {}, {}, {
				default: () => `
          <div class="${"day svelte-1e8g7tm"}">
            <table class="${"svelte-1e8g7tm"}">
              <tbody>
                ${each(day, entry => `<tr class="${"svelte-1e8g7tm"}">
                    <td class="${"time svelte-1e8g7tm"}">${escape(h(entry.from))} - ${escape(h(entry.to))}</td>
                    <td class="${"name svelte-1e8g7tm"}">${escape(entry.name)}</td>
                  </tr>`)}
              </tbody>
            </table>
          </div>
        `
			})}`)}  
    `
		})}
  `
	})}
</div>`;
});

/* src/Components/Signals.svelte generated by Svelte v3.18.2 */

const css$p = {
	code: "a.svelte-1hzmx5g{color:var(--primary-color)}.signals.svelte-1hzmx5g{box-shadow:rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;background:#fff;border-radius:4px;display:flex;flex-direction:column}.title.svelte-1hzmx5g{flex:none;font-size:1.1em;padding:1em 1.25em;border-bottom:rgba(231,231,231) 1px solid}.list.svelte-1hzmx5g{display:flex;flex-direction:column}.item.svelte-1hzmx5g{display:flex;flex-direction:row;padding:1em 1.5em}.item.svelte-1hzmx5g:nth-child(odd):not(:only-child){background:rgb(61, 90, 254, 0.1)}.region.svelte-1hzmx5g{flex:1}",
	map: "{\"version\":3,\"file\":\"Signals.svelte\",\"sources\":[\"Signals.svelte\"],\"sourcesContent\":[\"<style>\\n  a{\\n    color: var(--primary-color);\\n  }\\n\\n  .signals{\\n    box-shadow: rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;\\n    background: #fff;\\n    border-radius: 4px;\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .title{\\n    flex: none;\\n    font-size: 1.1em;\\n    padding: 1em 1.25em;\\n    border-bottom: rgba(231,231,231) 1px solid;\\n  }\\n\\n  .list{\\n    display: flex;\\n    flex-direction: column;\\n  }\\n\\n  .item{\\n    display: flex;\\n    flex-direction: row;\\n    padding: 1em 1.5em;\\n  }\\n\\n  .item:nth-child(odd):not(:only-child){\\n    background: rgb(61, 90, 254, 0.1);\\n  }\\n\\n  .region{\\n    flex: 1;\\n  }\\n</style>\\n\\n<script>\\n  import {stores} from \\\"/Common/i18n\\\";\\n  const {lang, trans} = stores();\\n\\n  import {signalUrl} from \\\"/Common/urls\\\";\\n\\n  export let station;\\n</script>\\n\\n<div class=\\\"signals\\\">\\n  <div class=\\\"title\\\">\\n    {$trans(\\\"station.signals.title\\\")}\\n  </div>\\n  <div class=\\\"list\\\">\\n    {#if station.origin == \\\"mt\\\"}\\n      {#each station.mt.signals as signal}\\n        <div class=\\\"item\\\">\\n          <div class=\\\"region\\\">{signal.regionName} - {$trans(`countries.${station.countryCode}`)}</div>\\n          <div class=\\\"frec\\\">\\n            {#if signal.type == \\\"am\\\" || signal.type == \\\"fm\\\"}\\n              <a class=\\\"no-a\\\" href={signalUrl({lang: $lang, countryCode: station.countryCode, type: signal.type, frec: signal.frec})}>\\n                {$trans(\\\"station.signals.type.amfm\\\", {type: signal.type, frec: signal.frec})}\\n              </a>\\n            {:else if signal.type == \\\"web\\\"}\\n              {$trans(\\\"station.signals.type.web\\\")}\\n            {:else}\\n              {signal.str}\\n            {/if}\\n          </div>\\n        </div>\\n      {/each}\\n    {:else}\\n      <div class=\\\"item\\\">\\n        <div class=\\\"region\\\">{$trans(`countries.${station.countryCode}`)}</div>\\n        <div class=\\\"frec\\\">\\n          <a class=\\\"no-a\\\" href={signalUrl({lang: $lang, countryCode: station.countryCode, type: station.signal.type, frec: station.signal.frec})}>\\n            {$trans(\\\"station.signals.type.amfm\\\", {type: station.signal.type, frec: station.signal.frec})}\\n          </a>\\n        </div>\\n      </div>\\n    {/if}\\n  </div>\\n</div>\"],\"names\":[],\"mappings\":\"AACE,gBAAC,CAAC,AACA,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC,AAED,uBAAQ,CAAC,AACP,UAAU,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CACzH,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,qBAAM,CAAC,AACL,IAAI,CAAE,IAAI,CACV,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,GAAG,CAAC,MAAM,CACnB,aAAa,CAAE,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,AAC5C,CAAC,AAED,oBAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,AACxB,CAAC,AAED,oBAAK,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,OAAO,CAAE,GAAG,CAAC,KAAK,AACpB,CAAC,AAED,oBAAK,WAAW,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,AACpC,UAAU,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AAED,sBAAO,CAAC,AACN,IAAI,CAAE,CAAC,AACT,CAAC\"}"
};

const Signals = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $trans;
	let $lang;
	const { lang, trans } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	let { station } = $$props;
	if ($$props.station === void 0 && $$bindings.station && station !== void 0) $$bindings.station(station);
	$$result.css.add(css$p);
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);

	return `<div class="${"signals svelte-1hzmx5g"}">
  <div class="${"title svelte-1hzmx5g"}">
    ${escape($trans("station.signals.title"))}
  </div>
  <div class="${"list svelte-1hzmx5g"}">
    ${station.origin == "mt"
	? `${each(station.mt.signals, signal => `<div class="${"item svelte-1hzmx5g"}">
          <div class="${"region svelte-1hzmx5g"}">${escape(signal.regionName)} - ${escape($trans(`countries.${station.countryCode}`))}</div>
          <div class="${"frec"}">
            ${signal.type == "am" || signal.type == "fm"
		? `<a class="${"no-a svelte-1hzmx5g"}"${add_attribute(
				"href",
				signalUrl({
					lang: $lang,
					countryCode: station.countryCode,
					type: signal.type,
					frec: signal.frec
				}),
				0
			)}>
                ${escape($trans("station.signals.type.amfm", { type: signal.type, frec: signal.frec }))}
              </a>`
		: `${signal.type == "web"
			? `${escape($trans("station.signals.type.web"))}`
			: `${escape(signal.str)}`}`}
          </div>
        </div>`)}`
	: `<div class="${"item svelte-1hzmx5g"}">
        <div class="${"region svelte-1hzmx5g"}">${escape($trans(`countries.${station.countryCode}`))}</div>
        <div class="${"frec"}">
          <a class="${"no-a svelte-1hzmx5g"}"${add_attribute(
			"href",
			signalUrl({
				lang: $lang,
				countryCode: station.countryCode,
				type: station.signal.type,
				frec: station.signal.frec
			}),
			0
		)}>
            ${escape($trans("station.signals.type.amfm", {
			type: station.signal.type,
			frec: station.signal.frec
		}))}
          </a>
        </div>
      </div>`}
  </div>
</div>`;
});

/* src/Components/StateIcon.svelte generated by Svelte v3.18.2 */

const css$q = {
	code: ".stateicon.svelte-1wgz2wf{display:flex}",
	map: "{\"version\":3,\"file\":\"StateIcon.svelte\",\"sources\":[\"StateIcon.svelte\"],\"sourcesContent\":[\"<style>\\n  .stateicon{\\n    display: flex;\\n  }\\n</style>\\n\\n<script>\\n  //import Play from \\\"svelte-material-icons/PlayCircleOutline.svelte\\\";\\n  import Play from \\\"svelte-material-icons/Play.svelte\\\";\\n  //import Pause from \\\"svelte-material-icons/PauseCircleOutline.svelte\\\";\\n  import Pause from \\\"svelte-material-icons/Pause.svelte\\\";\\n  import Loading from \\\"/Components/Loading.svelte\\\";\\n\\n  export let state;\\n</script>\\n\\n<div class=\\\"stateicon\\\">\\n  {#if state === \\\"playing\\\"}\\n    <Pause size=\\\"2.5em\\\" />\\n  {:else if state === \\\"paused\\\"}\\n    <Play size=\\\"2.5em\\\" />\\n  {:else if state === \\\"loading\\\"}\\n    <Loading size=\\\"2.25em\\\"/>\\n  {/if}\\n</div>\"],\"names\":[],\"mappings\":\"AACE,yBAAU,CAAC,AACT,OAAO,CAAE,IAAI,AACf,CAAC\"}"
};

const StateIcon = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { state } = $$props;
	if ($$props.state === void 0 && $$bindings.state && state !== void 0) $$bindings.state(state);
	$$result.css.add(css$q);

	return `<div class="${"stateicon svelte-1wgz2wf"}">
  ${state === "playing"
	? `${validate_component(Pause, "Pause").$$render($$result, { size: "2.5em" }, {}, {})}`
	: `${state === "paused"
		? `${validate_component(Play, "Play").$$render($$result, { size: "2.5em" }, {}, {})}`
		: `${state === "loading"
			? `${validate_component(Loading, "Loading").$$render($$result, { size: "2.25em" }, {}, {})}`
			: ``}`}`}
</div>`;
});

/* src/Components/Tag.svelte generated by Svelte v3.18.2 */

const css$r = {
	code: ".tag.svelte-1ij20n4{font-size:0.7em;text-transform:lowercase;background-color:#e2e2e2;border-radius:100px;padding:0.5em 1em;white-space:nowrap}",
	map: "{\"version\":3,\"file\":\"Tag.svelte\",\"sources\":[\"Tag.svelte\"],\"sourcesContent\":[\"<style>\\n  .tag{\\n    font-size: 0.7em;\\n    text-transform: lowercase;\\n    background-color: #e2e2e2;\\n    border-radius: 100px; /* round */\\n    padding: 0.5em 1em;\\n    white-space: nowrap;\\n  }\\n</style>\\n\\n<script>  \\n  export let label;\\n</script>\\n\\n<span class=\\\"tag\\\">{label}</span>\\n\\n\"],\"names\":[],\"mappings\":\"AACE,mBAAI,CAAC,AACH,SAAS,CAAE,KAAK,CAChB,cAAc,CAAE,SAAS,CACzB,gBAAgB,CAAE,OAAO,CACzB,aAAa,CAAE,KAAK,CACpB,OAAO,CAAE,KAAK,CAAC,GAAG,CAClB,WAAW,CAAE,MAAM,AACrB,CAAC\"}"
};

const Tag = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let { label } = $$props;
	if ($$props.label === void 0 && $$bindings.label && label !== void 0) $$bindings.label(label);
	$$result.css.add(css$r);
	return `<span class="${"tag svelte-1ij20n4"}">${escape(label)}</span>`;
});

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/radio/[station].svelte generated by Svelte v3.18.2 */

const css$s = {
	code: ".title-image.svelte-8y35po.svelte-8y35po{display:flex;flex-direction:row;align-items:center;padding:3rem 2.5rem}.image.svelte-8y35po.svelte-8y35po{--width:96px;width:var(--width);border-radius:4px;margin-right:1.5rem;flex:none;box-shadow:0 0 5px rgba(0,0,0,0.2)}.title.svelte-8y35po.svelte-8y35po{margin:0}.playline.svelte-8y35po.svelte-8y35po{border-bottom:rgba(0,0,0,0.15) 1px solid;margin-top:2.5rem}.play.svelte-8y35po.svelte-8y35po{background:var(--primary-color);color:#fff;height:5rem;width:5rem;margin:-2.5rem auto 2.5rem auto;border-radius:2.5rem;cursor:pointer;box-shadow:#000 0 0 2px 0;display:flex}.playicon.svelte-8y35po.svelte-8y35po{display:flex;margin:auto;flex:none;filter:drop-shadow(#000 0 0 2px)}.content.svelte-8y35po.svelte-8y35po{padding:0 2.5rem}p.svelte-8y35po.svelte-8y35po{font-size:1.125em;line-height:2em;padding:0 1em}p.svelte-8y35po.svelte-8y35po:first-child{margin-top:0}.desc.svelte-8y35po.svelte-8y35po{margin-bottom:2em}.desc.svelte-8y35po.svelte-8y35po>b{display:block;margin-top:2em}.label.svelte-8y35po.svelte-8y35po{opacity:0.5;margin-right:0.5em}.data-wrap.svelte-8y35po.svelte-8y35po{margin-top:2em}.data.svelte-8y35po a.svelte-8y35po{text-decoration:none;color:var(--primary-color)}",
	map: "{\"version\":3,\"file\":\"[station].svelte\",\"sources\":[\"[station].svelte\"],\"sourcesContent\":[\"<script context=\\\"module\\\">\\n  export async function preload($page, $session){\\n\\n    const countryCode = $page.params.langCountry.split(\\\"-\\\")[1];\\n\\n    let station;\\n\\n    try{\\n      station = await this.fetch(`/api/stations/${countryCode}/${$page.params.station}`).then(res => res.json());\\n    } catch(e){\\n      return this.error(500, e.message);\\n    }\\n\\n    if(station.error){\\n      return this.error(station.error.code, station.error.message)\\n    }\\n\\n    return {station};\\n  }\\n</script>\\n\\n<style>\\n  .title-image{\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    padding: 3rem 2.5rem;\\n  }\\n\\n  .image{\\n    --width: 96px;\\n    width: var(--width);\\n    border-radius: 4px;\\n    margin-right: 1.5rem;\\n    flex: none;\\n    box-shadow: 0 0 5px rgba(0,0,0,0.2);\\n  }\\n\\n  .title{\\n    margin: 0;\\n  }\\n\\n  .playline{\\n    border-bottom: rgba(0,0,0,0.15) 1px solid;\\n    margin-top: 2.5rem;\\n  }\\n\\n  .play{\\n    background: var(--primary-color);\\n    color: #fff;\\n    height: 5rem;\\n    width: 5rem;\\n    margin: -2.5rem auto 2.5rem auto;\\n    border-radius: 2.5rem;\\n    cursor: pointer;\\n    box-shadow: #000 0 0 2px 0;\\n    display: flex;\\n  }\\n\\n  .playicon{\\n    display: flex;\\n    margin: auto;\\n    flex: none;\\n    filter: drop-shadow(#000 0 0 2px);\\n  }\\n\\n  .content{\\n    padding: 0 2.5rem;\\n  }\\n\\n  p{\\n    font-size: 1.125em;\\n    line-height: 2em;\\n    padding: 0 1em;\\n  }\\n\\n  p:first-child{\\n    margin-top: 0;\\n  }\\n\\n  .desc{\\n    margin-bottom: 2em;\\n  }\\n\\n  .desc > :global(b){\\n    display: block;\\n    margin-top: 2em;\\n  }\\n\\n\\n  .label{\\n    opacity: 0.5;\\n    margin-right: 0.5em;\\n  }\\n\\n  .data-wrap{\\n    margin-top: 2em;\\n  }\\n\\n  .data a{\\n    text-decoration: none;\\n    color: var(--primary-color);\\n  }\\n</style>\\n\\n<script>\\n  // ONLY DEBUG\\n  //import copy from \\\"copy-to-clipboard\\\";\\n\\n  import {stores} from \\\"@sapper/app\\\";\\n  const {page} = stores();\\n\\n  import {onMount} from \\\"svelte\\\";\\n  \\n  import {playerState} from \\\"/Stores/playerState\\\";\\n  import {getPlayer} from \\\"/Stores/player\\\";\\n  \\n  //import {sleep} from \\\"/utils\\\";\\n  const sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\\n\\n  import Page from \\\"/Components/Page.svelte\\\";\\n  import StationImage from \\\"/Components/StationImage.svelte\\\";\\n  import Programming from \\\"/Components/Programming.svelte\\\";\\n  import Signals from \\\"/Components/Signals.svelte\\\";\\n  import StateIcon from \\\"/Components/StateIcon.svelte\\\";\\n  import Tag from \\\"/Components/Tag.svelte\\\";\\n  import Play from \\\"svelte-material-icons/Play.svelte\\\";\\n  \\n  import * as i18n from \\\"/Common/i18n\\\";\\n  const {lang, trans} = i18n.stores();\\n\\n  import {canonical, stationUrl, signalUrl, stationImgUrl} from \\\"/Common/urls\\\";\\n\\n  export let station;\\n\\n  onMount(async () => {\\n    await sleep(100);\\n    const player = getPlayer();\\n    if(player.state !== \\\"playing\\\"){\\n       player.play(station);\\n    }\\n  })\\n\\n  const formatWebText = str => str.replace(/^https?:\\\\/\\\\/(www\\\\.)?/, \\\"\\\").replace(/\\\\/$/, \\\"\\\");\\n  const formatFacebookText = str => str.replace(/https:\\\\/\\\\/(www\\\\.)?facebook.com\\\\//, \\\"\\\").replace(/\\\\/$/, \\\"\\\");\\n  const formatTwitterText = str => str.replace(/^https:\\\\/\\\\/twitter.com\\\\/(.+)\\\\/?/, \\\"@$1\\\");\\n  const formatInstagramText = str => str.replace(\\\"https://instagram.com/\\\", \\\"\\\");\\n  const formatDiscordText = str => str.replace(\\\"https://discord.gg/\\\", \\\"\\\");\\n  const formatTwitchText = str => str.replace(\\\"https://twitch.tv/\\\", \\\"\\\");\\n  const formatYouTubeText = str => str.replace(\\\"https://www.youtube.com/\\\", \\\"\\\");\\n\\n\\n  const handlePlay = async () => {\\n    const player = getPlayer();\\n    if($playerState.station && $playerState.station._id === station._id){\\n      player.toggle();\\n    } else {\\n      player.play(station);\\n    }\\n  }\\n\\n  $: meta = {\\n    title: $trans(\\\"station.head.title\\\", {station}),\\n    desc: $trans(\\\"station.head.desc\\\", {station}),\\n    canonical: canonical(stationUrl({lang: $lang, station}))\\n  }\\n</script>\\n\\n<Page {meta}>\\n  <main class=\\\"main\\\">\\n    <div class=\\\"title-image\\\">\\n      <div class=\\\"image\\\">\\n        <StationImage {station} size=\\\"w96\\\"/>\\n      </div>\\n      <h1 class=\\\"title\\\">{station.name}</h1>\\n    </div>\\n\\n    <div class=\\\"playline\\\"></div>\\n    \\n    <div class=\\\"play\\\" on:click={handlePlay}>\\n        <div class=\\\"playicon\\\">\\n        {#if $playerState.station && $playerState.station.name === station.name}\\n          <StateIcon state={$playerState.state}/>\\n        {:else}\\n          <Play size=\\\"2.5em\\\"/>\\n        {/if}\\n      </div>\\n    </div>\\n\\n    <div class=\\\"content\\\">\\n      {#if station.mt && station.mt.desc}\\n        <p class=\\\"desc\\\">\\n          {@html station.mt.desc}\\n        </p>\\n      {:else if station.desc}\\n        <p class=\\\"desc\\\">\\n          {station.desc}\\n        </p>\\n      {/if}\\n      \\n      <div class=\\\"info\\\">\\n\\n        {#if station.slogan != null}\\n            <div class=\\\"data-wrap slogan\\\">\\n              <p>\\n                <span class=\\\"label\\\">{$trans(\\\"station.labels.slogan\\\")}</span>\\n                <span class=\\\"data\\\">{station.slogan}</span>\\n              </p>\\n            </div>\\n        {/if}\\n\\n        <!--\\n        {#if station.signal != null}\\n          <div class=\\\"data-wrap signal\\\">\\n            <p>\\n              <span class=\\\"label\\\">{$trans(\\\"station.labels.signal\\\")}</span> \\n              <span class=\\\"data\\\">\\n                <a href={signalUrl({...station.signal, lang: $lang, countryCode: station.countryCode})}>\\n                  {station.signal.type.toUpperCase()} {station.signal.frec}\\n                </a>\\n              </span>\\n            </p>\\n          </div>\\n        {/if}\\n        -->\\n        <!--\\n        {#if station.signals.length}\\n          <div class=\\\"data-wrap signals\\\">\\n            <p class=\\\"signals-title label\\\">{$trans(\\\"station.labels.signals\\\")}</p>\\n            {#each station.signals as signal}\\n              <div class=\\\"signals-list\\\">\\n                <div class=\\\"signal-city\\\">{signal.cityId}</div>\\n                <div class=\\\"signal-frec\\\">{((signal) => {\\n                  switch(signal.type){\\n                    case \\\"am\\\":\\n                    case \\\"fm\\\":\\n                      return signal.frecuency + \\\" \\\" + signal.type.toUpperCase()\\n                    case \\\"web\\\":\\n                      return \\\"Web\\\";\\n                    case \\\"other\\\":\\n                      return \\\"\\\";\\n                  }\\n                })(signal)}</div>\\n              </div>\\n            {/each}\\n          </div>\\n        {/if}\\n        -->\\n\\n        {#if station.web != null}\\n          <div class=\\\"data-wrap web\\\">\\n            <p><span class=\\\"label\\\">{$trans(\\\"station.labels.web\\\")}</span> <span class=\\\"data\\\"><a href=\\\"{station.web}\\\" rel=\\\"nofollow noopener\\\" target=\\\"_blank\\\">{formatWebText(station.web)}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.address != null}\\n          <div class=\\\"data-wrap address\\\">\\n            <p><span class=\\\"label\\\">{$trans(\\\"station.labels.location\\\")}</span> <span class=\\\"data\\\">{station.address}</span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.mail != null}\\n          <div class=\\\"data-wrap mail\\\">\\n            <p><span class=\\\"label\\\">{$trans(\\\"station.labels.mail\\\")}</span> <span class=\\\"data\\\"><a href=\\\"mailto:{station.mail}\\\">{station.mail}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.tel != null}\\n          <div class=\\\"data-wrap tel\\\">\\n            <p><span class=\\\"label\\\">{$trans(\\\"station.labels.phone\\\")}</span> <span class=\\\"data\\\"><a href=\\\"tel:{station.tel.url}\\\">{station.tel.text}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.whatsApp != null}\\n          <div class=\\\"data-wrap whatsApp\\\">\\n            <p><span class=\\\"label\\\">WhatsApp:</span> <span class=\\\"data\\\"><a href=\\\"tel:{station.whatsApp.url}\\\">{station.whatsApp.text}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.facebook != null}\\n          <div class=\\\"data-wrap facebook\\\">\\n            <p><span class=\\\"label\\\">Facebook:</span> <span class=\\\"data\\\"><a href={station.facebook} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">{formatFacebookText(station.facebook)}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.twitter != null}\\n          <div class=\\\"data-wrap twitter\\\">\\n            <p><span class=\\\"label\\\">Twitter:</span> <span class=\\\"data\\\"><a href={station.twitter} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">{formatTwitterText(station.twitter)}</a></span></p>\\n          </div>\\n        {/if}\\n\\n        {#if station.instagram != null}\\n          <div class=\\\"data-wrap instagram\\\">\\n            <p><span class=\\\"label\\\">Instagram:</span>\\n              <span class=\\\"data\\\"><a href={station.instagram} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">\\n                {formatInstagramText(station.instagram)}\\n              </a></span>\\n            </p>\\n          </div>\\n        {/if}\\n\\n        {#if station.youtube != null}\\n          <div class=\\\"data-wrap youtube\\\">\\n            <p><span class=\\\"label\\\">YouTube:</span>\\n              <span class=\\\"data\\\"><a href={station.youtube} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">\\n                {formatYouTubeText(station.youtube)}\\n              </a></span>\\n            </p>\\n          </div>\\n        {/if}\\n\\n        {#if station.discord != null}\\n          <div class=\\\"data-wrap discord\\\">\\n            <p><span class=\\\"label\\\">Discord:</span>\\n              <span class=\\\"data\\\"><a href={station.discord} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">\\n                {formatDiscordText(station.discord)}\\n              </a></span>\\n            </p>\\n          </div>\\n        {/if}\\n\\n        {#if station.twitch != null}\\n          <div class=\\\"data-wrap twitch\\\">\\n            <p><span class=\\\"label\\\">Twitch:</span>\\n              <span class=\\\"data\\\"><a href={station.twitch} rel=\\\"noopener nofollow\\\" target=\\\"_blank\\\">\\n                {formatTwitchText(station.twitch)}\\n              </a></span>\\n            </p>\\n          </div>\\n        {/if}\\n\\n        {#if station.signal != null || station.mt && station.mt.signals.length !== 0}\\n          <div class=\\\"data-wrap signals\\\">\\n            <Signals {station}/>\\n          </div>\\n        {/if}\\n\\n        {#if station.programming}\\n          <div class=\\\"data-wrap programming\\\">\\n            <Programming programming={station.programming}/>\\n          </div>\\n        {/if}\\n\\n        <div class=\\\"data-wrap tags\\\">\\n          <p>\\n            <span class=\\\"label\\\">{$trans(\\\"station.labels.tags\\\")}</span>\\n            <span class=\\\"data\\\">\\n              <Tag label={$trans(\\\"station.tags.live\\\", {station})} countryCode={station.countryCode}/>\\n              <Tag label={$trans(\\\"station.tags.listen\\\", {station})} countryCode={station.countryCode}/>\\n              <Tag label={$trans(\\\"station.tags.listenLive\\\", {station})} countryCode={station.countryCode}/>\\n              {#if station.signal != null}\\n                <Tag label={$trans(\\\"station.tags.signal\\\", {station})} countryCode={station.countryCode} />\\n                <Tag label={$trans(\\\"station.tags.signalLive\\\", {station})} countryCode={station.countryCode} />\\n                <Tag label={$trans(\\\"station.tags.signalListenLive\\\", {station})} countryCode={station.countryCode} />\\n              {/if}\\n            </span>\\n          </p>\\n        </div>\\n      \\n      </div>\\n    </div>\\n\\n  </main>\\n</Page>\\n\\n\\n\\n\"],\"names\":[],\"mappings\":\"AAsBE,wCAAY,CAAC,AACX,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,GAAG,CACnB,WAAW,CAAE,MAAM,CACnB,OAAO,CAAE,IAAI,CAAC,MAAM,AACtB,CAAC,AAED,kCAAM,CAAC,AACL,OAAO,CAAE,IAAI,CACb,KAAK,CAAE,IAAI,OAAO,CAAC,CACnB,aAAa,CAAE,GAAG,CAClB,YAAY,CAAE,MAAM,CACpB,IAAI,CAAE,IAAI,CACV,UAAU,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACrC,CAAC,AAED,kCAAM,CAAC,AACL,MAAM,CAAE,CAAC,AACX,CAAC,AAED,qCAAS,CAAC,AACR,aAAa,CAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,CACzC,UAAU,CAAE,MAAM,AACpB,CAAC,AAED,iCAAK,CAAC,AACJ,UAAU,CAAE,IAAI,eAAe,CAAC,CAChC,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAChC,aAAa,CAAE,MAAM,CACrB,MAAM,CAAE,OAAO,CACf,UAAU,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAC1B,OAAO,CAAE,IAAI,AACf,CAAC,AAED,qCAAS,CAAC,AACR,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,IAAI,CACZ,IAAI,CAAE,IAAI,CACV,MAAM,CAAE,YAAY,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AACnC,CAAC,AAED,oCAAQ,CAAC,AACP,OAAO,CAAE,CAAC,CAAC,MAAM,AACnB,CAAC,AAED,6BAAC,CAAC,AACA,SAAS,CAAE,OAAO,CAClB,WAAW,CAAE,GAAG,CAChB,OAAO,CAAE,CAAC,CAAC,GAAG,AAChB,CAAC,AAED,6BAAC,YAAY,CAAC,AACZ,UAAU,CAAE,CAAC,AACf,CAAC,AAED,iCAAK,CAAC,AACJ,aAAa,CAAE,GAAG,AACpB,CAAC,AAED,iCAAK,CAAW,CAAC,AAAC,CAAC,AACjB,OAAO,CAAE,KAAK,CACd,UAAU,CAAE,GAAG,AACjB,CAAC,AAGD,kCAAM,CAAC,AACL,OAAO,CAAE,GAAG,CACZ,YAAY,CAAE,KAAK,AACrB,CAAC,AAED,sCAAU,CAAC,AACT,UAAU,CAAE,GAAG,AACjB,CAAC,AAED,mBAAK,CAAC,eAAC,CAAC,AACN,eAAe,CAAE,IAAI,CACrB,KAAK,CAAE,IAAI,eAAe,CAAC,AAC7B,CAAC\"}"
};

async function preload$6($page, $session) {
	const countryCode = $page.params.langCountry.split("-")[1];
	let station;

	try {
		station = await this.fetch(`/api/stations/${countryCode}/${$page.params.station}`).then(res => res.json());
	} catch(e) {
		return this.error(500, e.message);
	}

	if (station.error) {
		return this.error(station.error.code, station.error.message);
	}

	return { station };
}

const U5Bstationu5D = create_ssr_component(($$result, $$props, $$bindings, $$slots) => {
	let $playerState = get_store_value(playerState);
	let $trans;
	let $lang;
	const { page } = stores$1$1();

	//import {sleep} from "/utils";
	const sleep = ms => new Promise(resolve => setTimeout(resolve, ms));

	const { lang, trans } = stores();
	$lang = get_store_value(lang);
	$trans = get_store_value(trans);
	let { station } = $$props;

	onMount(async () => {
		await sleep(100);
		const player = getPlayer();

		if (player.state !== "playing") {
			player.play(station);
		}
	});

	const formatWebText = str => str.replace(/^https?:\/\/(www\.)?/, "").replace(/\/$/, "");
	const formatFacebookText = str => str.replace(/https:\/\/(www\.)?facebook.com\//, "").replace(/\/$/, "");
	const formatTwitterText = str => str.replace(/^https:\/\/twitter.com\/(.+)\/?/, "@$1");
	const formatInstagramText = str => str.replace("https://instagram.com/", "");
	const formatDiscordText = str => str.replace("https://discord.gg/", "");
	const formatTwitchText = str => str.replace("https://twitch.tv/", "");
	const formatYouTubeText = str => str.replace("https://www.youtube.com/", "");

	if ($$props.station === void 0 && $$bindings.station && station !== void 0) $$bindings.station(station);
	$$result.css.add(css$s);
	$trans = get_store_value(trans);
	$lang = get_store_value(lang);

	let meta = {
		title: $trans("station.head.title", { station }),
		desc: $trans("station.head.desc", { station }),
		canonical: canonical(stationUrl({ lang: $lang, station }))
	};

	return `${validate_component(Page, "Page").$$render($$result, { meta }, {}, {
		default: () => `
  <main class="${"main"}">
    <div class="${"title-image svelte-8y35po"}">
      <div class="${"image svelte-8y35po"}">
        ${validate_component(StationImage, "StationImage").$$render($$result, { station, size: "w96" }, {}, {})}
      </div>
      <h1 class="${"title svelte-8y35po"}">${escape(station.name)}</h1>
    </div>

    <div class="${"playline svelte-8y35po"}"></div>
    
    <div class="${"play svelte-8y35po"}">
        <div class="${"playicon svelte-8y35po"}">
        ${$playerState.station && $playerState.station.name === station.name
		? `${validate_component(StateIcon, "StateIcon").$$render($$result, { state: $playerState.state }, {}, {})}`
		: `${validate_component(Play, "Play").$$render($$result, { size: "2.5em" }, {}, {})}`}
      </div>
    </div>

    <div class="${"content svelte-8y35po"}">
      ${station.mt && station.mt.desc
		? `<p class="${"desc svelte-8y35po"}">
          ${station.mt.desc}
        </p>`
		: `${station.desc
			? `<p class="${"desc svelte-8y35po"}">
          ${escape(station.desc)}
        </p>`
			: ``}`}
      
      <div class="${"info"}">

        ${station.slogan != null
		? `<div class="${"data-wrap slogan svelte-8y35po"}">
              <p class="${"svelte-8y35po"}">
                <span class="${"label svelte-8y35po"}">${escape($trans("station.labels.slogan"))}</span>
                <span class="${"data"}">${escape(station.slogan)}</span>
              </p>
            </div>`
		: ``}

        
        

        ${station.web != null
		? `<div class="${"data-wrap web svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">${escape($trans("station.labels.web"))}</span> <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.web, 0)} rel="${"nofollow noopener"}" target="${"_blank"}" class="${"svelte-8y35po"}">${escape(formatWebText(station.web))}</a></span></p>
          </div>`
		: ``}

        ${station.address != null
		? `<div class="${"data-wrap address svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">${escape($trans("station.labels.location"))}</span> <span class="${"data"}">${escape(station.address)}</span></p>
          </div>`
		: ``}

        ${station.mail != null
		? `<div class="${"data-wrap mail svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">${escape($trans("station.labels.mail"))}</span> <span class="${"data svelte-8y35po"}"><a href="${"mailto:" + escape(station.mail)}" class="${"svelte-8y35po"}">${escape(station.mail)}</a></span></p>
          </div>`
		: ``}

        ${station.tel != null
		? `<div class="${"data-wrap tel svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">${escape($trans("station.labels.phone"))}</span> <span class="${"data svelte-8y35po"}"><a href="${"tel:" + escape(station.tel.url)}" class="${"svelte-8y35po"}">${escape(station.tel.text)}</a></span></p>
          </div>`
		: ``}

        ${station.whatsApp != null
		? `<div class="${"data-wrap whatsApp svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">WhatsApp:</span> <span class="${"data svelte-8y35po"}"><a href="${"tel:" + escape(station.whatsApp.url)}" class="${"svelte-8y35po"}">${escape(station.whatsApp.text)}</a></span></p>
          </div>`
		: ``}

        ${station.facebook != null
		? `<div class="${"data-wrap facebook svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">Facebook:</span> <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.facebook, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">${escape(formatFacebookText(station.facebook))}</a></span></p>
          </div>`
		: ``}

        ${station.twitter != null
		? `<div class="${"data-wrap twitter svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">Twitter:</span> <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.twitter, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">${escape(formatTwitterText(station.twitter))}</a></span></p>
          </div>`
		: ``}

        ${station.instagram != null
		? `<div class="${"data-wrap instagram svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">Instagram:</span>
              <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.instagram, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">
                ${escape(formatInstagramText(station.instagram))}
              </a></span>
            </p>
          </div>`
		: ``}

        ${station.youtube != null
		? `<div class="${"data-wrap youtube svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">YouTube:</span>
              <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.youtube, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">
                ${escape(formatYouTubeText(station.youtube))}
              </a></span>
            </p>
          </div>`
		: ``}

        ${station.discord != null
		? `<div class="${"data-wrap discord svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">Discord:</span>
              <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.discord, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">
                ${escape(formatDiscordText(station.discord))}
              </a></span>
            </p>
          </div>`
		: ``}

        ${station.twitch != null
		? `<div class="${"data-wrap twitch svelte-8y35po"}">
            <p class="${"svelte-8y35po"}"><span class="${"label svelte-8y35po"}">Twitch:</span>
              <span class="${"data svelte-8y35po"}"><a${add_attribute("href", station.twitch, 0)} rel="${"noopener nofollow"}" target="${"_blank"}" class="${"svelte-8y35po"}">
                ${escape(formatTwitchText(station.twitch))}
              </a></span>
            </p>
          </div>`
		: ``}

        ${station.signal != null || station.mt && station.mt.signals.length !== 0
		? `<div class="${"data-wrap signals svelte-8y35po"}">
            ${validate_component(Signals, "Signals").$$render($$result, { station }, {}, {})}
          </div>`
		: ``}

        ${station.programming
		? `<div class="${"data-wrap programming svelte-8y35po"}">
            ${validate_component(Programming, "Programming").$$render($$result, { programming: station.programming }, {}, {})}
          </div>`
		: ``}

        <div class="${"data-wrap tags svelte-8y35po"}">
          <p class="${"svelte-8y35po"}">
            <span class="${"label svelte-8y35po"}">${escape($trans("station.labels.tags"))}</span>
            <span class="${"data"}">
              ${validate_component(Tag, "Tag").$$render(
			$$result,
			{
				label: $trans("station.tags.live", { station }),
				countryCode: station.countryCode
			},
			{},
			{}
		)}
              ${validate_component(Tag, "Tag").$$render(
			$$result,
			{
				label: $trans("station.tags.listen", { station }),
				countryCode: station.countryCode
			},
			{},
			{}
		)}
              ${validate_component(Tag, "Tag").$$render(
			$$result,
			{
				label: $trans("station.tags.listenLive", { station }),
				countryCode: station.countryCode
			},
			{},
			{}
		)}
              ${station.signal != null
		? `${validate_component(Tag, "Tag").$$render(
				$$result,
				{
					label: $trans("station.tags.signal", { station }),
					countryCode: station.countryCode
				},
				{},
				{}
			)}
                ${validate_component(Tag, "Tag").$$render(
				$$result,
				{
					label: $trans("station.tags.signalLive", { station }),
					countryCode: station.countryCode
				},
				{},
				{}
			)}
                ${validate_component(Tag, "Tag").$$render(
				$$result,
				{
					label: $trans("station.tags.signalListenLive", { station }),
					countryCode: station.countryCode
				},
				{},
				{}
			)}`
		: ``}
            </span>
          </p>
        </div>
      
      </div>
    </div>

  </main>
`
	})}`;
});

var _station_ = /*#__PURE__*/Object.freeze({
    __proto__: null,
    'default': U5Bstationu5D,
    preload: preload$6
});

// This file is generated by Sapper — do not edit it!

const d = decodeURIComponent;

const manifest = {
	server_routes: [
		
	],

	pages: [
		{
			// [lang([a-z]{2})]/index.svelte
			pattern: /^\/([a-z]{2})\/?$/,
			parts: [
				{ name: "$lang", file: "[lang([a-z]{2})]/index.svelte", component: U5Blang_u5Ba_zu5Du7B2u7D_u5D, preload: preload$1, params: match => ({ lang: d(match[1]) }) }
			]
		},

		{
			// [lang([a-z]{2})]/languages.svelte
			pattern: /^\/([a-z]{2})\/languages\/?$/,
			parts: [
				null,
				{ name: "$lang_languages", file: "[lang([a-z]{2})]/languages.svelte", component: Languages, params: match => ({ lang: d(match[1]) }) }
			]
		},

		{
			// [lang([a-z]{2})]/recents.svelte
			pattern: /^\/([a-z]{2})\/recents\/?$/,
			parts: [
				null,
				{ name: "$lang_recents", file: "[lang([a-z]{2})]/recents.svelte", component: Recents, params: match => ({ lang: d(match[1]) }) }
			]
		},

		{
			// [lang([a-z]{2})]/radio-[signalType(am|fm)]/index.svelte
			pattern: /^\/([a-z]{2})\/radio-(am|fm)\/?$/,
			parts: [
				null,
				{ name: "$lang_radio$45$91signalType$40am$124fm$41$93", file: "[lang([a-z]{2})]/radio-[signalType(am|fm)]/index.svelte", component: Radio_u5BsignalType_amu7Cfm_u5D, preload: preload$2, params: match => ({ lang: d(match[1]), signalType: d(match[2]) }) }
			]
		},

		{
			// [lang([a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte
			pattern: /^\/([a-z]{2})\/radio-(am|fm)\/([0-9]+|[0-9]+.[0-9]+)\/?$/,
			parts: [
				null,
				null,
				{ name: "$lang_radio$45$91signalType$40am$124fm$41$93_$91signalFrec$40$910$459$93$43$124$910$459$93$43_$910$459$93$43$41$93", file: "[lang([a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte", component: U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D, preload: preload$3, params: match => ({ lang: d(match[1]), signalType: d(match[2]), signalFrec: d(match[3]) }) }
			]
		},

		{
			// [lang([a-z]{2})]/search.svelte
			pattern: /^\/([a-z]{2})\/search\/?$/,
			parts: [
				null,
				{ name: "$lang_search", file: "[lang([a-z]{2})]/search.svelte", component: Search_1$1, preload: preload$4, params: match => ({ lang: d(match[1]) }) }
			]
		},

		{
			// [langCountry([a-z]{2}-[a-z]{2})]/index.svelte
			pattern: /^\/([a-z]{2}-[a-z]{2})\/?$/,
			parts: [
				{ name: "$langCountry", file: "[langCountry([a-z]{2}-[a-z]{2})]/index.svelte", component: U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D, preload: preload$5, params: match => ({ langCountry: d(match[1]) }) }
			]
		},

		{
			// [langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/index.svelte
			pattern: /^\/([a-z]{2}-[a-z]{2})\/radio-(am|fm)\/?$/,
			parts: [
				null,
				{ name: "$langCountry_radio$45$91signalType$40am$124fm$41$93", file: "[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/index.svelte", component: Radio_u5BsignalType_amu7Cfm_u5D$1, preload: preload$2, params: match => ({ langCountry: d(match[1]), signalType: d(match[2]) }) }
			]
		},

		{
			// [langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte
			pattern: /^\/([a-z]{2}-[a-z]{2})\/radio-(am|fm)\/([0-9]+|[0-9]+.[0-9]+)\/?$/,
			parts: [
				null,
				null,
				{ name: "$langCountry_radio$45$91signalType$40am$124fm$41$93_$91signalFrec$40$910$459$93$43$124$910$459$93$43_$910$459$93$43$41$93", file: "[langCountry([a-z]{2}-[a-z]{2})]/radio-[signalType(am|fm)]/[signalFrec([0-9]+|[0-9]+.[0-9]+)].svelte", component: U5BsignalFrec_u5B0_9u5D_u7Cu5B0_9u5D_u5B0_9u5D_u5D$1, preload: preload$3, params: match => ({ langCountry: d(match[1]), signalType: d(match[2]), signalFrec: d(match[3]) }) }
			]
		},

		{
			// [langCountry([a-z]{2}-[a-z]{2})]/search.svelte
			pattern: /^\/([a-z]{2}-[a-z]{2})\/search\/?$/,
			parts: [
				null,
				{ name: "$langCountry_search", file: "[langCountry([a-z]{2}-[a-z]{2})]/search.svelte", component: Search_1$2, preload: preload$4, params: match => ({ langCountry: d(match[1]) }) }
			]
		},

		{
			// [langCountry([a-z]{2}-[a-z]{2})]/radio/[station].svelte
			pattern: /^\/([a-z]{2}-[a-z]{2})\/radio\/([^\/]+?)\/?$/,
			parts: [
				null,
				null,
				{ name: "$langCountry_radio_$91station$93", file: "[langCountry([a-z]{2}-[a-z]{2})]/radio/[station].svelte", component: U5Bstationu5D, preload: preload$6, params: match => ({ langCountry: d(match[1]), station: d(match[2]) }) }
			]
		}
	],

	root: Layout,
	root_preload: () => {},
	error: Error$1
};

const build_dir = "__sapper__/build";

function get_server_route_handler(routes) {
	async function handle_route(route, req, res, next) {
		req.params = route.params(route.pattern.exec(req.path));

		const method = req.method.toLowerCase();
		// 'delete' cannot be exported from a module because it is a keyword,
		// so check for 'del' instead
		const method_export = method === 'delete' ? 'del' : method;
		const handle_method = route.handlers[method_export];
		if (handle_method) {
			if (process.env.SAPPER_EXPORT) {
				const { write, end, setHeader } = res;
				const chunks = [];
				const headers = {};

				// intercept data so that it can be exported
				res.write = function(chunk) {
					chunks.push(Buffer.from(chunk));
					write.apply(res, arguments);
				};

				res.setHeader = function(name, value) {
					headers[name.toLowerCase()] = value;
					setHeader.apply(res, arguments);
				};

				res.end = function(chunk) {
					if (chunk) chunks.push(Buffer.from(chunk));
					end.apply(res, arguments);

					process.send({
						__sapper__: true,
						event: 'file',
						url: req.url,
						method: req.method,
						status: res.statusCode,
						type: headers['content-type'],
						body: Buffer.concat(chunks).toString()
					});
				};
			}

			const handle_next = (err) => {
				if (err) {
					res.statusCode = 500;
					res.end(err.message);
				} else {
					process.nextTick(next);
				}
			};

			try {
				await handle_method(req, res, handle_next);
			} catch (err) {
				console.error(err);
				handle_next(err);
			}
		} else {
			// no matching handler for method
			process.nextTick(next);
		}
	}

	return function find_route(req, res, next) {
		for (const route of routes) {
			if (route.pattern.test(req.path)) {
				handle_route(route, req, res, next);
				return;
			}
		}

		next();
	};
}

/*!
 * cookie
 * Copyright(c) 2012-2014 Roman Shtylman
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */

/**
 * Module exports.
 * @public
 */

var parse_1 = parse;
var serialize_1 = serialize;

/**
 * Module variables.
 * @private
 */

var decode = decodeURIComponent;
var encode = encodeURIComponent;
var pairSplitRegExp = /; */;

/**
 * RegExp to match field-content in RFC 7230 sec 3.2
 *
 * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
 * field-vchar   = VCHAR / obs-text
 * obs-text      = %x80-FF
 */

var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;

/**
 * Parse a cookie header.
 *
 * Parse the given cookie header string into an object
 * The object has the various cookies as keys(names) => values
 *
 * @param {string} str
 * @param {object} [options]
 * @return {object}
 * @public
 */

function parse(str, options) {
  if (typeof str !== 'string') {
    throw new TypeError('argument str must be a string');
  }

  var obj = {};
  var opt = options || {};
  var pairs = str.split(pairSplitRegExp);
  var dec = opt.decode || decode;

  for (var i = 0; i < pairs.length; i++) {
    var pair = pairs[i];
    var eq_idx = pair.indexOf('=');

    // skip things that don't look like key=value
    if (eq_idx < 0) {
      continue;
    }

    var key = pair.substr(0, eq_idx).trim();
    var val = pair.substr(++eq_idx, pair.length).trim();

    // quoted values
    if ('"' == val[0]) {
      val = val.slice(1, -1);
    }

    // only assign once
    if (undefined == obj[key]) {
      obj[key] = tryDecode(val, dec);
    }
  }

  return obj;
}

/**
 * Serialize data into a cookie header.
 *
 * Serialize the a name value pair into a cookie string suitable for
 * http headers. An optional options object specified cookie parameters.
 *
 * serialize('foo', 'bar', { httpOnly: true })
 *   => "foo=bar; httpOnly"
 *
 * @param {string} name
 * @param {string} val
 * @param {object} [options]
 * @return {string}
 * @public
 */

function serialize(name, val, options) {
  var opt = options || {};
  var enc = opt.encode || encode;

  if (typeof enc !== 'function') {
    throw new TypeError('option encode is invalid');
  }

  if (!fieldContentRegExp.test(name)) {
    throw new TypeError('argument name is invalid');
  }

  var value = enc(val);

  if (value && !fieldContentRegExp.test(value)) {
    throw new TypeError('argument val is invalid');
  }

  var str = name + '=' + value;

  if (null != opt.maxAge) {
    var maxAge = opt.maxAge - 0;
    if (isNaN(maxAge)) throw new Error('maxAge should be a Number');
    str += '; Max-Age=' + Math.floor(maxAge);
  }

  if (opt.domain) {
    if (!fieldContentRegExp.test(opt.domain)) {
      throw new TypeError('option domain is invalid');
    }

    str += '; Domain=' + opt.domain;
  }

  if (opt.path) {
    if (!fieldContentRegExp.test(opt.path)) {
      throw new TypeError('option path is invalid');
    }

    str += '; Path=' + opt.path;
  }

  if (opt.expires) {
    if (typeof opt.expires.toUTCString !== 'function') {
      throw new TypeError('option expires is invalid');
    }

    str += '; Expires=' + opt.expires.toUTCString();
  }

  if (opt.httpOnly) {
    str += '; HttpOnly';
  }

  if (opt.secure) {
    str += '; Secure';
  }

  if (opt.sameSite) {
    var sameSite = typeof opt.sameSite === 'string'
      ? opt.sameSite.toLowerCase() : opt.sameSite;

    switch (sameSite) {
      case true:
        str += '; SameSite=Strict';
        break;
      case 'lax':
        str += '; SameSite=Lax';
        break;
      case 'strict':
        str += '; SameSite=Strict';
        break;
      case 'none':
        str += '; SameSite=None';
        break;
      default:
        throw new TypeError('option sameSite is invalid');
    }
  }

  return str;
}

/**
 * Try decoding a string using a decoding function.
 *
 * @param {string} str
 * @param {function} decode
 * @private
 */

function tryDecode(str, decode) {
  try {
    return decode(str);
  } catch (e) {
    return str;
  }
}

var cookie = {
	parse: parse_1,
	serialize: serialize_1
};

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = require('encoding').convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch$1(url, opts) {

	// allow custom promise
	if (!fetch$1.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch$1.Promise;

	// wrap http.request into fetch
	return new fetch$1.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch$1.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch$1(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch$1.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch$1.Promise = global.Promise;

function get_page_handler(
	manifest,
	session_getter
) {
	const get_build_info =  (assets => () => assets)(JSON.parse(fs.readFileSync(path.join(build_dir, 'build.json'), 'utf-8')));

	const template =  (str => () => str)(read_template(build_dir));

	const has_service_worker = fs.existsSync(path.join(build_dir, 'service-worker.js'));

	const { server_routes, pages } = manifest;
	const error_route = manifest.error;

	function bail(req, res, err) {
		console.error(err);

		const message =  'Internal server error';

		res.statusCode = 500;
		res.end(`<pre>${message}</pre>`);
	}

	function handle_error(req, res, statusCode, error) {
		handle_page({
			pattern: null,
			parts: [
				{ name: null, component: error_route }
			]
		}, req, res, statusCode, error || new Error('Unknown error in preload function'));
	}

	async function handle_page(page, req, res, status = 200, error = null) {
		const is_service_worker_index = req.path === '/service-worker-index.html';
		const build_info




 = get_build_info();

		res.setHeader('Content-Type', 'text/html');
		res.setHeader('Cache-Control',  'max-age=600');

		// preload main.js and ¿current route?
		// TODO detect other stuff we can preload? images, CSS, fonts?
		let preloaded_chunks = Array.isArray(build_info.assets.main) ? build_info.assets.main : [build_info.assets.main];
		
		let add = (chunk) => {
			if(Array.isArray(chunk)){
				chunk.forEach(add);
			} else if(!preloaded_chunks.includes(chunk)){
				preloaded_chunks.push(chunk);
			}
		};

		// ADDED: Add main css
		add(build_info.css.main);
				
		if (!error && !is_service_worker_index) {
			for(const part of page.parts.filter(Boolean)){

					const key = (part ).file;

					// ADDED: Add page js
					build_info.js && add(build_info.js[key]);

					// ADDED: Add css dependencies: 
					add(build_info.css.chunks[key]);

					// CHANGED: i thinks this is a bug (assets are <file> keyed not <name>)
					//preloaded_chunks = preloaded_chunks.concat(build_info.assets[part.name]);
					// using concat because it could be a string or an array. thanks webpack!
					//preloaded_chunks = preloaded_chunks.concat(build_info.assets[key]);
			}
		}

		if (build_info.bundler === 'rollup') {
			// TODO add dependencies and CSS
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map(file => (
					/\.css$/.test(file) ? 
						`<${req.baseUrl}/client/${file}>;rel=preload;as=style`: 
						`<${req.baseUrl}/client/${file}>;rel=modulepreload`
				))
				.join(',');

			//let curr = res.getHeader("link") || "";
			let curr = res.sapperLink || "";
			res.setHeader('Link', (curr ? curr + "," : "") + link);
		} else {
			const link = preloaded_chunks
				.filter(file => file && !file.match(/\.map$/))
				.map((file) => {
					const as = /\.css$/.test(file) ? 'style' : 'script';
					return `<${req.baseUrl}/client/${file}>;rel="preload";as="${as}"`;
				})
				.join(', ');

			res.setHeader('Link', link);
		}

		const session = session_getter(req, res);

		let redirect;
		let preload_error;

		const preload_context = {
			redirect: (statusCode, location) => {
				if (redirect && (redirect.statusCode !== statusCode || redirect.location !== location)) {
					throw new Error(`Conflicting redirects`);
				}
				location = location.replace(/^\//g, ''); // leading slash (only)
				redirect = { statusCode, location };
			},
			error: (statusCode, message) => {
				preload_error = { statusCode, message };
			},
			fetch: (url, opts) => {
				const parsed = new Url.URL(url, `http://127.0.0.1:${process.env.PORT}${req.baseUrl ? req.baseUrl + '/' :''}`);

				if (opts) {
					opts = Object.assign({}, opts);

					const include_cookies = (
						opts.credentials === 'include' ||
						opts.credentials === 'same-origin' && parsed.origin === `http://127.0.0.1:${process.env.PORT}`
					);

					if (include_cookies) {
						opts.headers = Object.assign({}, opts.headers);

						const cookies = Object.assign(
							{},
							cookie.parse(req.headers.cookie || ''),
							cookie.parse(opts.headers.cookie || '')
						);

						const set_cookie = res.getHeader('Set-Cookie');
						(Array.isArray(set_cookie) ? set_cookie : [set_cookie]).forEach(str => {
							const match = /([^=]+)=([^;]+)/.exec(str);
							if (match) cookies[match[1]] = match[2];
						});

						const str = Object.keys(cookies)
							.map(key => `${key}=${cookies[key]}`)
							.join('; ');

						opts.headers.cookie = str;
					}
				}

				return fetch$1(parsed.href, opts);
			}
		};

		let preloaded;
		let match;
		let params;

		try {
			const root_preloaded = manifest.root_preload
				? manifest.root_preload.call(preload_context, {
					host: req.headers.host,
					path: req.path,
					query: req.query,
					params: {}
				}, session)
				: {};

			match = error ? null : page.pattern.exec(req.path);


			let toPreload = [root_preloaded];
			if (!is_service_worker_index) {
				toPreload = toPreload.concat(page.parts.map(part => {
					if (!part) return null;

					// the deepest level is used below, to initialise the store
					params = part.params ? part.params(match) : {};

					return part.preload
						? part.preload.call(preload_context, {
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}, session)
						: {};
				}));
			}

			preloaded = await Promise.all(toPreload);
		} catch (err) {
			if (error) {
				return bail(req, res, err)
			}

			preload_error = { statusCode: 500, message: err };
			preloaded = []; // appease TypeScript
		}

		try {
			if (redirect) {
				const location = Url.resolve((req.baseUrl || '') + '/', redirect.location);

				res.statusCode = redirect.statusCode;
				res.setHeader('Location', location);
				res.end();

				return;
			}

			if (preload_error) {
				handle_error(req, res, preload_error.statusCode, preload_error.message);
				return;
			}

			const segments = req.path.split('/').filter(Boolean);

			// TODO make this less confusing
			const layout_segments = [segments[0]];
			let l = 1;

			page.parts.forEach((part, i) => {
				layout_segments[l] = segments[i + 1];
				if (!part) return null;
				l++;
			});

			const props = {
				stores: {
					page: {
						subscribe: writable({
							host: req.headers.host,
							path: req.path,
							query: req.query,
							params
						}).subscribe
					},
					preloading: {
						subscribe: writable(null).subscribe
					},
					session: writable(session)
				},
				segments: layout_segments,
				status: error ? status : 200,
				error: error ? error instanceof Error ? error : { message: error } : null,
				level0: {
					props: preloaded[0]
				},
				level1: {
					segment: segments[0],
					props: {}
				}
			};

			if (!is_service_worker_index) {
				let l = 1;
				for (let i = 0; i < page.parts.length; i += 1) {
					const part = page.parts[i];
					if (!part) continue;

					props[`level${l++}`] = {
						component: part.component,
						props: preloaded[i + 1] || {},
						segment: segments[i]
					};
				}
			}

			let { html, head, css } = App.render(props);

			const serialized = {
				preloaded: `[${preloaded.map(data => try_serialize(data)).join(',')}]`,
				session: session && try_serialize(session, err => {
					throw new Error(`Failed to serialize session data: ${err.message}`);
				}),
				error: error && try_serialize(props.error)
			};

			let script = `__SAPPER__={${[
				error && `error:${serialized.error},status:${status}`,
				`baseUrl:"${req.baseUrl}"`,
				serialized.preloaded && `preloaded:${serialized.preloaded}`,
				serialized.session && `session:${serialized.session}`
			].filter(Boolean).join(',')}};`;

			if (has_service_worker) {
				script += `if('serviceWorker' in navigator)navigator.serviceWorker.register('${req.baseUrl}/service-worker.js');`;
			}

			const file = [].concat(build_info.assets.main).filter(file => file && /\.js$/.test(file))[0];
			const main = `${req.baseUrl}/client/${file}`;

			if (build_info.bundler === 'rollup') {
				if (build_info.legacy_assets) {
					const legacy_main = `${req.baseUrl}/client/legacy/${build_info.legacy_assets.main}`;
					script += `(function(){try{eval("async function x(){}");var main="${main}"}catch(e){main="${legacy_main}"};var s=document.createElement("script");try{new Function("if(0)import('')")();s.src=main;s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main",main);}document.head.appendChild(s);}());`;
				} else {
					script += `var s=document.createElement("script");try{new Function("if(0)import('')")();s.src="${main}";s.type="module";s.crossOrigin="use-credentials";}catch(e){s.src="${req.baseUrl}/client/shimport@${build_info.shimport}.js";s.setAttribute("data-main","${main}")}document.head.appendChild(s)`;
				}
			} else {
				script += `</script><script src="${main}">`;
			}

			let styles;

			// TODO make this consistent across apps
			// TODO embed build_info in placeholder.ts
			if (build_info.css && build_info.css.main) {
				const css_chunks = new Set();
				if (build_info.css.main) css_chunks.add(build_info.css.main);
				page.parts.forEach(part => {
					if (!part) return;
					const css_chunks_for_part = build_info.css.chunks[part.file];

					if (css_chunks_for_part) {
						css_chunks_for_part.forEach(file => {
							css_chunks.add(file);
						});
					}
				});

				styles = Array.from(css_chunks)
					.map(href => `<link rel="stylesheet" href="client/${href}">`)
					.join('');
			} else {
				styles = (css && css.code ? `<style>${css.code}</style>` : '');
			}

			// users can set a CSP nonce using res.locals.nonce
			const nonce_attr = (res.locals && res.locals.nonce) ? ` nonce="${res.locals.nonce}"` : '';

			const scripts_html = `
<script type="text/x-template" id="sapper-script">${script}</script>
<script${nonce_attr}>defer(function(){(0, eval)(document.getElementById("sapper-script").innerHTML)}, 1000)</script>
`;

			const body = template()
				.replace("%sapper.lang%", () => (res ).lang || "")
				.replace('%sapper.base%', () => `<base href="${req.baseUrl}/">`)
				.replace('%sapper.scripts%', () => scripts_html)
				.replace('%sapper.html%', () => html)
				.replace('%sapper.head%', () => `<noscript id='sapper-head-start'></noscript>${head}<noscript id='sapper-head-end'></noscript>`)
				.replace('%sapper.styles%', () => styles);

			res.statusCode = status;
			res.end(body);
		} catch(err) {
			if (error) {
				bail(req, res, err);
			} else {
				handle_error(req, res, 500, err);
			}
		}
	}

	return function find_route(req, res, next) {
		if (req.path === '/service-worker-index.html') {
			const homePage = pages.find(page => page.pattern.test('/'));
			handle_page(homePage, req, res);
			return;
		}

		for (const page of pages) {
			if (page.pattern.test(req.path)) {
				handle_page(page, req, res);
				return;
			}
		}

		handle_error(req, res, 404, 'Not found');
	};
}

function read_template(dir = build_dir) {
	return fs.readFileSync(`${dir}/template.html`, 'utf-8');
}

function try_serialize(data, fail) {
	try {
		//return devalue(data);
		return `${JSON.stringify(data).replace(/<\//g, "<\\/")}`;
	} catch (err) {
		if (fail) fail(err);
		return null;
	}
}

var mime_raw = "application/andrew-inset\t\t\tez\napplication/applixware\t\t\t\taw\napplication/atom+xml\t\t\t\tatom\napplication/atomcat+xml\t\t\t\tatomcat\napplication/atomsvc+xml\t\t\t\tatomsvc\napplication/ccxml+xml\t\t\t\tccxml\napplication/cdmi-capability\t\t\tcdmia\napplication/cdmi-container\t\t\tcdmic\napplication/cdmi-domain\t\t\t\tcdmid\napplication/cdmi-object\t\t\t\tcdmio\napplication/cdmi-queue\t\t\t\tcdmiq\napplication/cu-seeme\t\t\t\tcu\napplication/davmount+xml\t\t\tdavmount\napplication/docbook+xml\t\t\t\tdbk\napplication/dssc+der\t\t\t\tdssc\napplication/dssc+xml\t\t\t\txdssc\napplication/ecmascript\t\t\t\tecma\napplication/emma+xml\t\t\t\temma\napplication/epub+zip\t\t\t\tepub\napplication/exi\t\t\t\t\texi\napplication/font-tdpfr\t\t\t\tpfr\napplication/gml+xml\t\t\t\tgml\napplication/gpx+xml\t\t\t\tgpx\napplication/gxf\t\t\t\t\tgxf\napplication/hyperstudio\t\t\t\tstk\napplication/inkml+xml\t\t\t\tink inkml\napplication/ipfix\t\t\t\tipfix\napplication/java-archive\t\t\tjar\napplication/java-serialized-object\t\tser\napplication/java-vm\t\t\t\tclass\napplication/javascript\t\t\t\tjs\napplication/json\t\t\t\tjson map\napplication/jsonml+json\t\t\t\tjsonml\napplication/lost+xml\t\t\t\tlostxml\napplication/mac-binhex40\t\t\thqx\napplication/mac-compactpro\t\t\tcpt\napplication/mads+xml\t\t\t\tmads\napplication/marc\t\t\t\tmrc\napplication/marcxml+xml\t\t\t\tmrcx\napplication/mathematica\t\t\t\tma nb mb\napplication/mathml+xml\t\t\t\tmathml\napplication/mbox\t\t\t\tmbox\napplication/mediaservercontrol+xml\t\tmscml\napplication/metalink+xml\t\t\tmetalink\napplication/metalink4+xml\t\t\tmeta4\napplication/mets+xml\t\t\t\tmets\napplication/mods+xml\t\t\t\tmods\napplication/mp21\t\t\t\tm21 mp21\napplication/mp4\t\t\t\t\tmp4s\napplication/msword\t\t\t\tdoc dot\napplication/mxf\t\t\t\t\tmxf\napplication/octet-stream\tbin dms lrf mar so dist distz pkg bpk dump elc deploy\napplication/oda\t\t\t\t\toda\napplication/oebps-package+xml\t\t\topf\napplication/ogg\t\t\t\t\togx\napplication/omdoc+xml\t\t\t\tomdoc\napplication/onenote\t\t\t\tonetoc onetoc2 onetmp onepkg\napplication/oxps\t\t\t\toxps\napplication/patch-ops-error+xml\t\t\txer\napplication/pdf\t\t\t\t\tpdf\napplication/pgp-encrypted\t\t\tpgp\napplication/pgp-signature\t\t\tasc sig\napplication/pics-rules\t\t\t\tprf\napplication/pkcs10\t\t\t\tp10\napplication/pkcs7-mime\t\t\t\tp7m p7c\napplication/pkcs7-signature\t\t\tp7s\napplication/pkcs8\t\t\t\tp8\napplication/pkix-attr-cert\t\t\tac\napplication/pkix-cert\t\t\t\tcer\napplication/pkix-crl\t\t\t\tcrl\napplication/pkix-pkipath\t\t\tpkipath\napplication/pkixcmp\t\t\t\tpki\napplication/pls+xml\t\t\t\tpls\napplication/postscript\t\t\t\tai eps ps\napplication/prs.cww\t\t\t\tcww\napplication/pskc+xml\t\t\t\tpskcxml\napplication/rdf+xml\t\t\t\trdf\napplication/reginfo+xml\t\t\t\trif\napplication/relax-ng-compact-syntax\t\trnc\napplication/resource-lists+xml\t\t\trl\napplication/resource-lists-diff+xml\t\trld\napplication/rls-services+xml\t\t\trs\napplication/rpki-ghostbusters\t\t\tgbr\napplication/rpki-manifest\t\t\tmft\napplication/rpki-roa\t\t\t\troa\napplication/rsd+xml\t\t\t\trsd\napplication/rss+xml\t\t\t\trss\napplication/rtf\t\t\t\t\trtf\napplication/sbml+xml\t\t\t\tsbml\napplication/scvp-cv-request\t\t\tscq\napplication/scvp-cv-response\t\t\tscs\napplication/scvp-vp-request\t\t\tspq\napplication/scvp-vp-response\t\t\tspp\napplication/sdp\t\t\t\t\tsdp\napplication/set-payment-initiation\t\tsetpay\napplication/set-registration-initiation\t\tsetreg\napplication/shf+xml\t\t\t\tshf\napplication/smil+xml\t\t\t\tsmi smil\napplication/sparql-query\t\t\trq\napplication/sparql-results+xml\t\t\tsrx\napplication/srgs\t\t\t\tgram\napplication/srgs+xml\t\t\t\tgrxml\napplication/sru+xml\t\t\t\tsru\napplication/ssdl+xml\t\t\t\tssdl\napplication/ssml+xml\t\t\t\tssml\napplication/tei+xml\t\t\t\ttei teicorpus\napplication/thraud+xml\t\t\t\ttfi\napplication/timestamped-data\t\t\ttsd\napplication/vnd.3gpp.pic-bw-large\t\tplb\napplication/vnd.3gpp.pic-bw-small\t\tpsb\napplication/vnd.3gpp.pic-bw-var\t\t\tpvb\napplication/vnd.3gpp2.tcap\t\t\ttcap\napplication/vnd.3m.post-it-notes\t\tpwn\napplication/vnd.accpac.simply.aso\t\taso\napplication/vnd.accpac.simply.imp\t\timp\napplication/vnd.acucobol\t\t\tacu\napplication/vnd.acucorp\t\t\t\tatc acutc\napplication/vnd.adobe.air-application-installer-package+zip\tair\napplication/vnd.adobe.formscentral.fcdt\t\tfcdt\napplication/vnd.adobe.fxp\t\t\tfxp fxpl\napplication/vnd.adobe.xdp+xml\t\t\txdp\napplication/vnd.adobe.xfdf\t\t\txfdf\napplication/vnd.ahead.space\t\t\tahead\napplication/vnd.airzip.filesecure.azf\t\tazf\napplication/vnd.airzip.filesecure.azs\t\tazs\napplication/vnd.amazon.ebook\t\t\tazw\napplication/vnd.americandynamics.acc\t\tacc\napplication/vnd.amiga.ami\t\t\tami\napplication/vnd.android.package-archive\t\tapk\napplication/vnd.anser-web-certificate-issue-initiation\tcii\napplication/vnd.anser-web-funds-transfer-initiation\tfti\napplication/vnd.antix.game-component\t\tatx\napplication/vnd.apple.installer+xml\t\tmpkg\napplication/vnd.apple.mpegurl\t\t\tm3u8\napplication/vnd.aristanetworks.swi\t\tswi\napplication/vnd.astraea-software.iota\t\tiota\napplication/vnd.audiograph\t\t\taep\napplication/vnd.blueice.multipass\t\tmpm\napplication/vnd.bmi\t\t\t\tbmi\napplication/vnd.businessobjects\t\t\trep\napplication/vnd.chemdraw+xml\t\t\tcdxml\napplication/vnd.chipnuts.karaoke-mmd\t\tmmd\napplication/vnd.cinderella\t\t\tcdy\napplication/vnd.claymore\t\t\tcla\napplication/vnd.cloanto.rp9\t\t\trp9\napplication/vnd.clonk.c4group\t\t\tc4g c4d c4f c4p c4u\napplication/vnd.cluetrust.cartomobile-config\t\tc11amc\napplication/vnd.cluetrust.cartomobile-config-pkg\tc11amz\napplication/vnd.commonspace\t\t\tcsp\napplication/vnd.contact.cmsg\t\t\tcdbcmsg\napplication/vnd.cosmocaller\t\t\tcmc\napplication/vnd.crick.clicker\t\t\tclkx\napplication/vnd.crick.clicker.keyboard\t\tclkk\napplication/vnd.crick.clicker.palette\t\tclkp\napplication/vnd.crick.clicker.template\t\tclkt\napplication/vnd.crick.clicker.wordbank\t\tclkw\napplication/vnd.criticaltools.wbs+xml\t\twbs\napplication/vnd.ctc-posml\t\t\tpml\napplication/vnd.cups-ppd\t\t\tppd\napplication/vnd.curl.car\t\t\tcar\napplication/vnd.curl.pcurl\t\t\tpcurl\napplication/vnd.dart\t\t\t\tdart\napplication/vnd.data-vision.rdz\t\t\trdz\napplication/vnd.dece.data\t\t\tuvf uvvf uvd uvvd\napplication/vnd.dece.ttml+xml\t\t\tuvt uvvt\napplication/vnd.dece.unspecified\t\tuvx uvvx\napplication/vnd.dece.zip\t\t\tuvz uvvz\napplication/vnd.denovo.fcselayout-link\t\tfe_launch\napplication/vnd.dna\t\t\t\tdna\napplication/vnd.dolby.mlp\t\t\tmlp\napplication/vnd.dpgraph\t\t\t\tdpg\napplication/vnd.dreamfactory\t\t\tdfac\napplication/vnd.ds-keypoint\t\t\tkpxx\napplication/vnd.dvb.ait\t\t\t\tait\napplication/vnd.dvb.service\t\t\tsvc\napplication/vnd.dynageo\t\t\t\tgeo\napplication/vnd.ecowin.chart\t\t\tmag\napplication/vnd.enliven\t\t\t\tnml\napplication/vnd.epson.esf\t\t\tesf\napplication/vnd.epson.msf\t\t\tmsf\napplication/vnd.epson.quickanime\t\tqam\napplication/vnd.epson.salt\t\t\tslt\napplication/vnd.epson.ssf\t\t\tssf\napplication/vnd.eszigno3+xml\t\t\tes3 et3\napplication/vnd.ezpix-album\t\t\tez2\napplication/vnd.ezpix-package\t\t\tez3\napplication/vnd.fdf\t\t\t\tfdf\napplication/vnd.fdsn.mseed\t\t\tmseed\napplication/vnd.fdsn.seed\t\t\tseed dataless\napplication/vnd.flographit\t\t\tgph\napplication/vnd.fluxtime.clip\t\t\tftc\napplication/vnd.framemaker\t\t\tfm frame maker book\napplication/vnd.frogans.fnc\t\t\tfnc\napplication/vnd.frogans.ltf\t\t\tltf\napplication/vnd.fsc.weblaunch\t\t\tfsc\napplication/vnd.fujitsu.oasys\t\t\toas\napplication/vnd.fujitsu.oasys2\t\t\toa2\napplication/vnd.fujitsu.oasys3\t\t\toa3\napplication/vnd.fujitsu.oasysgp\t\t\tfg5\napplication/vnd.fujitsu.oasysprs\t\tbh2\napplication/vnd.fujixerox.ddd\t\t\tddd\napplication/vnd.fujixerox.docuworks\t\txdw\napplication/vnd.fujixerox.docuworks.binder\txbd\napplication/vnd.fuzzysheet\t\t\tfzs\napplication/vnd.genomatix.tuxedo\t\ttxd\napplication/vnd.geogebra.file\t\t\tggb\napplication/vnd.geogebra.tool\t\t\tggt\napplication/vnd.geometry-explorer\t\tgex gre\napplication/vnd.geonext\t\t\t\tgxt\napplication/vnd.geoplan\t\t\t\tg2w\napplication/vnd.geospace\t\t\tg3w\napplication/vnd.gmx\t\t\t\tgmx\napplication/vnd.google-earth.kml+xml\t\tkml\napplication/vnd.google-earth.kmz\t\tkmz\napplication/vnd.grafeq\t\t\t\tgqf gqs\napplication/vnd.groove-account\t\t\tgac\napplication/vnd.groove-help\t\t\tghf\napplication/vnd.groove-identity-message\t\tgim\napplication/vnd.groove-injector\t\t\tgrv\napplication/vnd.groove-tool-message\t\tgtm\napplication/vnd.groove-tool-template\t\ttpl\napplication/vnd.groove-vcard\t\t\tvcg\napplication/vnd.hal+xml\t\t\t\thal\napplication/vnd.handheld-entertainment+xml\tzmm\napplication/vnd.hbci\t\t\t\thbci\napplication/vnd.hhe.lesson-player\t\tles\napplication/vnd.hp-hpgl\t\t\t\thpgl\napplication/vnd.hp-hpid\t\t\t\thpid\napplication/vnd.hp-hps\t\t\t\thps\napplication/vnd.hp-jlyt\t\t\t\tjlt\napplication/vnd.hp-pcl\t\t\t\tpcl\napplication/vnd.hp-pclxl\t\t\tpclxl\napplication/vnd.hydrostatix.sof-data\t\tsfd-hdstx\napplication/vnd.ibm.minipay\t\t\tmpy\napplication/vnd.ibm.modcap\t\t\tafp listafp list3820\napplication/vnd.ibm.rights-management\t\tirm\napplication/vnd.ibm.secure-container\t\tsc\napplication/vnd.iccprofile\t\t\ticc icm\napplication/vnd.igloader\t\t\tigl\napplication/vnd.immervision-ivp\t\t\tivp\napplication/vnd.immervision-ivu\t\t\tivu\napplication/vnd.insors.igm\t\t\tigm\napplication/vnd.intercon.formnet\t\txpw xpx\napplication/vnd.intergeo\t\t\ti2g\napplication/vnd.intu.qbo\t\t\tqbo\napplication/vnd.intu.qfx\t\t\tqfx\napplication/vnd.ipunplugged.rcprofile\t\trcprofile\napplication/vnd.irepository.package+xml\t\tirp\napplication/vnd.is-xpr\t\t\t\txpr\napplication/vnd.isac.fcs\t\t\tfcs\napplication/vnd.jam\t\t\t\tjam\napplication/vnd.jcp.javame.midlet-rms\t\trms\napplication/vnd.jisp\t\t\t\tjisp\napplication/vnd.joost.joda-archive\t\tjoda\napplication/vnd.kahootz\t\t\t\tktz ktr\napplication/vnd.kde.karbon\t\t\tkarbon\napplication/vnd.kde.kchart\t\t\tchrt\napplication/vnd.kde.kformula\t\t\tkfo\napplication/vnd.kde.kivio\t\t\tflw\napplication/vnd.kde.kontour\t\t\tkon\napplication/vnd.kde.kpresenter\t\t\tkpr kpt\napplication/vnd.kde.kspread\t\t\tksp\napplication/vnd.kde.kword\t\t\tkwd kwt\napplication/vnd.kenameaapp\t\t\thtke\napplication/vnd.kidspiration\t\t\tkia\napplication/vnd.kinar\t\t\t\tkne knp\napplication/vnd.koan\t\t\t\tskp skd skt skm\napplication/vnd.kodak-descriptor\t\tsse\napplication/vnd.las.las+xml\t\t\tlasxml\napplication/vnd.llamagraphics.life-balance.desktop\tlbd\napplication/vnd.llamagraphics.life-balance.exchange+xml\tlbe\napplication/vnd.lotus-1-2-3\t\t\t123\napplication/vnd.lotus-approach\t\t\tapr\napplication/vnd.lotus-freelance\t\t\tpre\napplication/vnd.lotus-notes\t\t\tnsf\napplication/vnd.lotus-organizer\t\t\torg\napplication/vnd.lotus-screencam\t\t\tscm\napplication/vnd.lotus-wordpro\t\t\tlwp\napplication/vnd.macports.portpkg\t\tportpkg\napplication/vnd.mcd\t\t\t\tmcd\napplication/vnd.medcalcdata\t\t\tmc1\napplication/vnd.mediastation.cdkey\t\tcdkey\napplication/vnd.mfer\t\t\t\tmwf\napplication/vnd.mfmp\t\t\t\tmfm\napplication/vnd.micrografx.flo\t\t\tflo\napplication/vnd.micrografx.igx\t\t\tigx\napplication/vnd.mif\t\t\t\tmif\napplication/vnd.mobius.daf\t\t\tdaf\napplication/vnd.mobius.dis\t\t\tdis\napplication/vnd.mobius.mbk\t\t\tmbk\napplication/vnd.mobius.mqy\t\t\tmqy\napplication/vnd.mobius.msl\t\t\tmsl\napplication/vnd.mobius.plc\t\t\tplc\napplication/vnd.mobius.txf\t\t\ttxf\napplication/vnd.mophun.application\t\tmpn\napplication/vnd.mophun.certificate\t\tmpc\napplication/vnd.mozilla.xul+xml\t\t\txul\napplication/vnd.ms-artgalry\t\t\tcil\napplication/vnd.ms-cab-compressed\t\tcab\napplication/vnd.ms-excel\t\t\txls xlm xla xlc xlt xlw\napplication/vnd.ms-excel.addin.macroenabled.12\t\txlam\napplication/vnd.ms-excel.sheet.binary.macroenabled.12\txlsb\napplication/vnd.ms-excel.sheet.macroenabled.12\t\txlsm\napplication/vnd.ms-excel.template.macroenabled.12\txltm\napplication/vnd.ms-fontobject\t\t\teot\napplication/vnd.ms-htmlhelp\t\t\tchm\napplication/vnd.ms-ims\t\t\t\tims\napplication/vnd.ms-lrm\t\t\t\tlrm\napplication/vnd.ms-officetheme\t\t\tthmx\napplication/vnd.ms-pki.seccat\t\t\tcat\napplication/vnd.ms-pki.stl\t\t\tstl\napplication/vnd.ms-powerpoint\t\t\tppt pps pot\napplication/vnd.ms-powerpoint.addin.macroenabled.12\t\tppam\napplication/vnd.ms-powerpoint.presentation.macroenabled.12\tpptm\napplication/vnd.ms-powerpoint.slide.macroenabled.12\t\tsldm\napplication/vnd.ms-powerpoint.slideshow.macroenabled.12\t\tppsm\napplication/vnd.ms-powerpoint.template.macroenabled.12\t\tpotm\napplication/vnd.ms-project\t\t\tmpp mpt\napplication/vnd.ms-word.document.macroenabled.12\tdocm\napplication/vnd.ms-word.template.macroenabled.12\tdotm\napplication/vnd.ms-works\t\t\twps wks wcm wdb\napplication/vnd.ms-wpl\t\t\t\twpl\napplication/vnd.ms-xpsdocument\t\t\txps\napplication/vnd.mseq\t\t\t\tmseq\napplication/vnd.musician\t\t\tmus\napplication/vnd.muvee.style\t\t\tmsty\napplication/vnd.mynfc\t\t\t\ttaglet\napplication/vnd.neurolanguage.nlu\t\tnlu\napplication/vnd.nitf\t\t\t\tntf nitf\napplication/vnd.noblenet-directory\t\tnnd\napplication/vnd.noblenet-sealer\t\t\tnns\napplication/vnd.noblenet-web\t\t\tnnw\napplication/vnd.nokia.n-gage.data\t\tngdat\napplication/vnd.nokia.n-gage.symbian.install\tn-gage\napplication/vnd.nokia.radio-preset\t\trpst\napplication/vnd.nokia.radio-presets\t\trpss\napplication/vnd.novadigm.edm\t\t\tedm\napplication/vnd.novadigm.edx\t\t\tedx\napplication/vnd.novadigm.ext\t\t\text\napplication/vnd.oasis.opendocument.chart\t\todc\napplication/vnd.oasis.opendocument.chart-template\totc\napplication/vnd.oasis.opendocument.database\t\todb\napplication/vnd.oasis.opendocument.formula\t\todf\napplication/vnd.oasis.opendocument.formula-template\todft\napplication/vnd.oasis.opendocument.graphics\t\todg\napplication/vnd.oasis.opendocument.graphics-template\totg\napplication/vnd.oasis.opendocument.image\t\todi\napplication/vnd.oasis.opendocument.image-template\toti\napplication/vnd.oasis.opendocument.presentation\t\todp\napplication/vnd.oasis.opendocument.presentation-template\totp\napplication/vnd.oasis.opendocument.spreadsheet\t\tods\napplication/vnd.oasis.opendocument.spreadsheet-template\tots\napplication/vnd.oasis.opendocument.text\t\t\todt\napplication/vnd.oasis.opendocument.text-master\t\todm\napplication/vnd.oasis.opendocument.text-template\tott\napplication/vnd.oasis.opendocument.text-web\t\toth\napplication/vnd.olpc-sugar\t\t\txo\napplication/vnd.oma.dd2+xml\t\t\tdd2\napplication/vnd.openofficeorg.extension\t\toxt\napplication/vnd.openxmlformats-officedocument.presentationml.presentation\tpptx\napplication/vnd.openxmlformats-officedocument.presentationml.slide\tsldx\napplication/vnd.openxmlformats-officedocument.presentationml.slideshow\tppsx\napplication/vnd.openxmlformats-officedocument.presentationml.template\tpotx\napplication/vnd.openxmlformats-officedocument.spreadsheetml.sheet\txlsx\napplication/vnd.openxmlformats-officedocument.spreadsheetml.template\txltx\napplication/vnd.openxmlformats-officedocument.wordprocessingml.document\tdocx\napplication/vnd.openxmlformats-officedocument.wordprocessingml.template\tdotx\napplication/vnd.osgeo.mapguide.package\t\tmgp\napplication/vnd.osgi.dp\t\t\t\tdp\napplication/vnd.osgi.subsystem\t\t\tesa\napplication/vnd.palm\t\t\t\tpdb pqa oprc\napplication/vnd.pawaafile\t\t\tpaw\napplication/vnd.pg.format\t\t\tstr\napplication/vnd.pg.osasli\t\t\tei6\napplication/vnd.picsel\t\t\t\tefif\napplication/vnd.pmi.widget\t\t\twg\napplication/vnd.pocketlearn\t\t\tplf\napplication/vnd.powerbuilder6\t\t\tpbd\napplication/vnd.previewsystems.box\t\tbox\napplication/vnd.proteus.magazine\t\tmgz\napplication/vnd.publishare-delta-tree\t\tqps\napplication/vnd.pvi.ptid1\t\t\tptid\napplication/vnd.quark.quarkxpress\t\tqxd qxt qwd qwt qxl qxb\napplication/vnd.realvnc.bed\t\t\tbed\napplication/vnd.recordare.musicxml\t\tmxl\napplication/vnd.recordare.musicxml+xml\t\tmusicxml\napplication/vnd.rig.cryptonote\t\t\tcryptonote\napplication/vnd.rim.cod\t\t\t\tcod\napplication/vnd.rn-realmedia\t\t\trm\napplication/vnd.rn-realmedia-vbr\t\trmvb\napplication/vnd.route66.link66+xml\t\tlink66\napplication/vnd.sailingtracker.track\t\tst\napplication/vnd.seemail\t\t\t\tsee\napplication/vnd.sema\t\t\t\tsema\napplication/vnd.semd\t\t\t\tsemd\napplication/vnd.semf\t\t\t\tsemf\napplication/vnd.shana.informed.formdata\t\tifm\napplication/vnd.shana.informed.formtemplate\titp\napplication/vnd.shana.informed.interchange\tiif\napplication/vnd.shana.informed.package\t\tipk\napplication/vnd.simtech-mindmapper\t\ttwd twds\napplication/vnd.smaf\t\t\t\tmmf\napplication/vnd.smart.teacher\t\t\tteacher\napplication/vnd.solent.sdkm+xml\t\t\tsdkm sdkd\napplication/vnd.spotfire.dxp\t\t\tdxp\napplication/vnd.spotfire.sfs\t\t\tsfs\napplication/vnd.stardivision.calc\t\tsdc\napplication/vnd.stardivision.draw\t\tsda\napplication/vnd.stardivision.impress\t\tsdd\napplication/vnd.stardivision.math\t\tsmf\napplication/vnd.stardivision.writer\t\tsdw vor\napplication/vnd.stardivision.writer-global\tsgl\napplication/vnd.stepmania.package\t\tsmzip\napplication/vnd.stepmania.stepchart\t\tsm\napplication/vnd.sun.xml.calc\t\t\tsxc\napplication/vnd.sun.xml.calc.template\t\tstc\napplication/vnd.sun.xml.draw\t\t\tsxd\napplication/vnd.sun.xml.draw.template\t\tstd\napplication/vnd.sun.xml.impress\t\t\tsxi\napplication/vnd.sun.xml.impress.template\tsti\napplication/vnd.sun.xml.math\t\t\tsxm\napplication/vnd.sun.xml.writer\t\t\tsxw\napplication/vnd.sun.xml.writer.global\t\tsxg\napplication/vnd.sun.xml.writer.template\t\tstw\napplication/vnd.sus-calendar\t\t\tsus susp\napplication/vnd.svd\t\t\t\tsvd\napplication/vnd.symbian.install\t\t\tsis sisx\napplication/vnd.syncml+xml\t\t\txsm\napplication/vnd.syncml.dm+wbxml\t\t\tbdm\napplication/vnd.syncml.dm+xml\t\t\txdm\napplication/vnd.tao.intent-module-archive\ttao\napplication/vnd.tcpdump.pcap\t\t\tpcap cap dmp\napplication/vnd.tmobile-livetv\t\t\ttmo\napplication/vnd.trid.tpt\t\t\ttpt\napplication/vnd.triscape.mxs\t\t\tmxs\napplication/vnd.trueapp\t\t\t\ttra\napplication/vnd.ufdl\t\t\t\tufd ufdl\napplication/vnd.uiq.theme\t\t\tutz\napplication/vnd.umajin\t\t\t\tumj\napplication/vnd.unity\t\t\t\tunityweb\napplication/vnd.uoml+xml\t\t\tuoml\napplication/vnd.vcx\t\t\t\tvcx\napplication/vnd.visio\t\t\t\tvsd vst vss vsw\napplication/vnd.visionary\t\t\tvis\napplication/vnd.vsf\t\t\t\tvsf\napplication/vnd.wap.wbxml\t\t\twbxml\napplication/vnd.wap.wmlc\t\t\twmlc\napplication/vnd.wap.wmlscriptc\t\t\twmlsc\napplication/vnd.webturbo\t\t\twtb\napplication/vnd.wolfram.player\t\t\tnbp\napplication/vnd.wordperfect\t\t\twpd\napplication/vnd.wqd\t\t\t\twqd\napplication/vnd.wt.stf\t\t\t\tstf\napplication/vnd.xara\t\t\t\txar\napplication/vnd.xfdl\t\t\t\txfdl\napplication/vnd.yamaha.hv-dic\t\t\thvd\napplication/vnd.yamaha.hv-script\t\thvs\napplication/vnd.yamaha.hv-voice\t\t\thvp\napplication/vnd.yamaha.openscoreformat\t\t\tosf\napplication/vnd.yamaha.openscoreformat.osfpvg+xml\tosfpvg\napplication/vnd.yamaha.smaf-audio\t\tsaf\napplication/vnd.yamaha.smaf-phrase\t\tspf\napplication/vnd.yellowriver-custom-menu\t\tcmp\napplication/vnd.zul\t\t\t\tzir zirz\napplication/vnd.zzazz.deck+xml\t\t\tzaz\napplication/voicexml+xml\t\t\tvxml\napplication/wasm\t\t\t\twasm\napplication/widget\t\t\t\twgt\napplication/winhlp\t\t\t\thlp\napplication/wsdl+xml\t\t\t\twsdl\napplication/wspolicy+xml\t\t\twspolicy\napplication/x-7z-compressed\t\t\t7z\napplication/x-abiword\t\t\t\tabw\napplication/x-ace-compressed\t\t\tace\napplication/x-apple-diskimage\t\t\tdmg\napplication/x-authorware-bin\t\t\taab x32 u32 vox\napplication/x-authorware-map\t\t\taam\napplication/x-authorware-seg\t\t\taas\napplication/x-bcpio\t\t\t\tbcpio\napplication/x-bittorrent\t\t\ttorrent\napplication/x-blorb\t\t\t\tblb blorb\napplication/x-bzip\t\t\t\tbz\napplication/x-bzip2\t\t\t\tbz2 boz\napplication/x-cbr\t\t\t\tcbr cba cbt cbz cb7\napplication/x-cdlink\t\t\t\tvcd\napplication/x-cfs-compressed\t\t\tcfs\napplication/x-chat\t\t\t\tchat\napplication/x-chess-pgn\t\t\t\tpgn\napplication/x-conference\t\t\tnsc\napplication/x-cpio\t\t\t\tcpio\napplication/x-csh\t\t\t\tcsh\napplication/x-debian-package\t\t\tdeb udeb\napplication/x-dgc-compressed\t\t\tdgc\napplication/x-director\t\t\tdir dcr dxr cst cct cxt w3d fgd swa\napplication/x-doom\t\t\t\twad\napplication/x-dtbncx+xml\t\t\tncx\napplication/x-dtbook+xml\t\t\tdtb\napplication/x-dtbresource+xml\t\t\tres\napplication/x-dvi\t\t\t\tdvi\napplication/x-envoy\t\t\t\tevy\napplication/x-eva\t\t\t\teva\napplication/x-font-bdf\t\t\t\tbdf\napplication/x-font-ghostscript\t\t\tgsf\napplication/x-font-linux-psf\t\t\tpsf\napplication/x-font-pcf\t\t\t\tpcf\napplication/x-font-snf\t\t\t\tsnf\napplication/x-font-type1\t\t\tpfa pfb pfm afm\napplication/x-freearc\t\t\t\tarc\napplication/x-futuresplash\t\t\tspl\napplication/x-gca-compressed\t\t\tgca\napplication/x-glulx\t\t\t\tulx\napplication/x-gnumeric\t\t\t\tgnumeric\napplication/x-gramps-xml\t\t\tgramps\napplication/x-gtar\t\t\t\tgtar\napplication/x-hdf\t\t\t\thdf\napplication/x-install-instructions\t\tinstall\napplication/x-iso9660-image\t\t\tiso\napplication/x-java-jnlp-file\t\t\tjnlp\napplication/x-latex\t\t\t\tlatex\napplication/x-lzh-compressed\t\t\tlzh lha\napplication/x-mie\t\t\t\tmie\napplication/x-mobipocket-ebook\t\t\tprc mobi\napplication/x-ms-application\t\t\tapplication\napplication/x-ms-shortcut\t\t\tlnk\napplication/x-ms-wmd\t\t\t\twmd\napplication/x-ms-wmz\t\t\t\twmz\napplication/x-ms-xbap\t\t\t\txbap\napplication/x-msaccess\t\t\t\tmdb\napplication/x-msbinder\t\t\t\tobd\napplication/x-mscardfile\t\t\tcrd\napplication/x-msclip\t\t\t\tclp\napplication/x-msdownload\t\t\texe dll com bat msi\napplication/x-msmediaview\t\t\tmvb m13 m14\napplication/x-msmetafile\t\t\twmf wmz emf emz\napplication/x-msmoney\t\t\t\tmny\napplication/x-mspublisher\t\t\tpub\napplication/x-msschedule\t\t\tscd\napplication/x-msterminal\t\t\ttrm\napplication/x-mswrite\t\t\t\twri\napplication/x-netcdf\t\t\t\tnc cdf\napplication/x-nzb\t\t\t\tnzb\napplication/x-pkcs12\t\t\t\tp12 pfx\napplication/x-pkcs7-certificates\t\tp7b spc\napplication/x-pkcs7-certreqresp\t\t\tp7r\napplication/x-rar-compressed\t\t\trar\napplication/x-research-info-systems\t\tris\napplication/x-sh\t\t\t\tsh\napplication/x-shar\t\t\t\tshar\napplication/x-shockwave-flash\t\t\tswf\napplication/x-silverlight-app\t\t\txap\napplication/x-sql\t\t\t\tsql\napplication/x-stuffit\t\t\t\tsit\napplication/x-stuffitx\t\t\t\tsitx\napplication/x-subrip\t\t\t\tsrt\napplication/x-sv4cpio\t\t\t\tsv4cpio\napplication/x-sv4crc\t\t\t\tsv4crc\napplication/x-t3vm-image\t\t\tt3\napplication/x-tads\t\t\t\tgam\napplication/x-tar\t\t\t\ttar\napplication/x-tcl\t\t\t\ttcl\napplication/x-tex\t\t\t\ttex\napplication/x-tex-tfm\t\t\t\ttfm\napplication/x-texinfo\t\t\t\ttexinfo texi\napplication/x-tgif\t\t\t\tobj\napplication/x-ustar\t\t\t\tustar\napplication/x-wais-source\t\t\tsrc\napplication/x-x509-ca-cert\t\t\tder crt\napplication/x-xfig\t\t\t\tfig\napplication/x-xliff+xml\t\t\t\txlf\napplication/x-xpinstall\t\t\t\txpi\napplication/x-xz\t\t\t\txz\napplication/x-zmachine\t\t\t\tz1 z2 z3 z4 z5 z6 z7 z8\napplication/xaml+xml\t\t\t\txaml\napplication/xcap-diff+xml\t\t\txdf\napplication/xenc+xml\t\t\t\txenc\napplication/xhtml+xml\t\t\t\txhtml xht\napplication/xml\t\t\t\t\txml xsl\napplication/xml-dtd\t\t\t\tdtd\napplication/xop+xml\t\t\t\txop\napplication/xproc+xml\t\t\t\txpl\napplication/xslt+xml\t\t\t\txslt\napplication/xspf+xml\t\t\t\txspf\napplication/xv+xml\t\t\t\tmxml xhvml xvml xvm\napplication/yang\t\t\t\tyang\napplication/yin+xml\t\t\t\tyin\napplication/zip\t\t\t\t\tzip\naudio/adpcm\t\t\t\t\tadp\naudio/basic\t\t\t\t\tau snd\naudio/midi\t\t\t\t\tmid midi kar rmi\naudio/mp4\t\t\t\t\tm4a mp4a\naudio/mpeg\t\t\t\t\tmpga mp2 mp2a mp3 m2a m3a\naudio/ogg\t\t\t\t\toga ogg spx\naudio/s3m\t\t\t\t\ts3m\naudio/silk\t\t\t\t\tsil\naudio/vnd.dece.audio\t\t\t\tuva uvva\naudio/vnd.digital-winds\t\t\t\teol\naudio/vnd.dra\t\t\t\t\tdra\naudio/vnd.dts\t\t\t\t\tdts\naudio/vnd.dts.hd\t\t\t\tdtshd\naudio/vnd.lucent.voice\t\t\t\tlvp\naudio/vnd.ms-playready.media.pya\t\tpya\naudio/vnd.nuera.ecelp4800\t\t\tecelp4800\naudio/vnd.nuera.ecelp7470\t\t\tecelp7470\naudio/vnd.nuera.ecelp9600\t\t\tecelp9600\naudio/vnd.rip\t\t\t\t\trip\naudio/webm\t\t\t\t\tweba\naudio/x-aac\t\t\t\t\taac\naudio/x-aiff\t\t\t\t\taif aiff aifc\naudio/x-caf\t\t\t\t\tcaf\naudio/x-flac\t\t\t\t\tflac\naudio/x-matroska\t\t\t\tmka\naudio/x-mpegurl\t\t\t\t\tm3u\naudio/x-ms-wax\t\t\t\t\twax\naudio/x-ms-wma\t\t\t\t\twma\naudio/x-pn-realaudio\t\t\t\tram ra\naudio/x-pn-realaudio-plugin\t\t\trmp\naudio/x-wav\t\t\t\t\twav\naudio/xm\t\t\t\t\txm\nchemical/x-cdx\t\t\t\t\tcdx\nchemical/x-cif\t\t\t\t\tcif\nchemical/x-cmdf\t\t\t\t\tcmdf\nchemical/x-cml\t\t\t\t\tcml\nchemical/x-csml\t\t\t\t\tcsml\nchemical/x-xyz\t\t\t\t\txyz\nfont/collection\t\t\t\t\tttc\nfont/otf\t\t\t\t\totf\nfont/ttf\t\t\t\t\tttf\nfont/woff\t\t\t\t\twoff\nfont/woff2\t\t\t\t\twoff2\nimage/bmp\t\t\t\t\tbmp\nimage/cgm\t\t\t\t\tcgm\nimage/g3fax\t\t\t\t\tg3\nimage/gif\t\t\t\t\tgif\nimage/ief\t\t\t\t\tief\nimage/jpeg\t\t\t\t\tjpeg jpg jpe\nimage/ktx\t\t\t\t\tktx\nimage/png\t\t\t\t\tpng\nimage/prs.btif\t\t\t\t\tbtif\nimage/sgi\t\t\t\t\tsgi\nimage/svg+xml\t\t\t\t\tsvg svgz\nimage/tiff\t\t\t\t\ttiff tif\nimage/vnd.adobe.photoshop\t\t\tpsd\nimage/vnd.dece.graphic\t\t\t\tuvi uvvi uvg uvvg\nimage/vnd.djvu\t\t\t\t\tdjvu djv\nimage/vnd.dvb.subtitle\t\t\t\tsub\nimage/vnd.dwg\t\t\t\t\tdwg\nimage/vnd.dxf\t\t\t\t\tdxf\nimage/vnd.fastbidsheet\t\t\t\tfbs\nimage/vnd.fpx\t\t\t\t\tfpx\nimage/vnd.fst\t\t\t\t\tfst\nimage/vnd.fujixerox.edmics-mmr\t\t\tmmr\nimage/vnd.fujixerox.edmics-rlc\t\t\trlc\nimage/vnd.ms-modi\t\t\t\tmdi\nimage/vnd.ms-photo\t\t\t\twdp\nimage/vnd.net-fpx\t\t\t\tnpx\nimage/vnd.wap.wbmp\t\t\t\twbmp\nimage/vnd.xiff\t\t\t\t\txif\nimage/webp\t\t\t\t\twebp\nimage/x-3ds\t\t\t\t\t3ds\nimage/x-cmu-raster\t\t\t\tras\nimage/x-cmx\t\t\t\t\tcmx\nimage/x-freehand\t\t\t\tfh fhc fh4 fh5 fh7\nimage/x-icon\t\t\t\t\tico\nimage/x-mrsid-image\t\t\t\tsid\nimage/x-pcx\t\t\t\t\tpcx\nimage/x-pict\t\t\t\t\tpic pct\nimage/x-portable-anymap\t\t\t\tpnm\nimage/x-portable-bitmap\t\t\t\tpbm\nimage/x-portable-graymap\t\t\tpgm\nimage/x-portable-pixmap\t\t\t\tppm\nimage/x-rgb\t\t\t\t\trgb\nimage/x-tga\t\t\t\t\ttga\nimage/x-xbitmap\t\t\t\t\txbm\nimage/x-xpixmap\t\t\t\t\txpm\nimage/x-xwindowdump\t\t\t\txwd\nmessage/rfc822\t\t\t\t\teml mime\nmodel/iges\t\t\t\t\tigs iges\nmodel/mesh\t\t\t\t\tmsh mesh silo\nmodel/vnd.collada+xml\t\t\t\tdae\nmodel/vnd.dwf\t\t\t\t\tdwf\nmodel/vnd.gdl\t\t\t\t\tgdl\nmodel/vnd.gtw\t\t\t\t\tgtw\nmodel/vnd.mts\t\t\t\t\tmts\nmodel/vnd.vtu\t\t\t\t\tvtu\nmodel/vrml\t\t\t\t\twrl vrml\nmodel/x3d+binary\t\t\t\tx3db x3dbz\nmodel/x3d+vrml\t\t\t\t\tx3dv x3dvz\nmodel/x3d+xml\t\t\t\t\tx3d x3dz\ntext/cache-manifest\t\t\t\tappcache\ntext/calendar\t\t\t\t\tics ifb\ntext/css\t\t\t\t\tcss\ntext/csv\t\t\t\t\tcsv\ntext/html\t\t\t\t\thtml htm\ntext/n3\t\t\t\t\t\tn3\ntext/plain\t\t\t\t\ttxt text conf def list log in\ntext/prs.lines.tag\t\t\t\tdsc\ntext/richtext\t\t\t\t\trtx\ntext/sgml\t\t\t\t\tsgml sgm\ntext/tab-separated-values\t\t\ttsv\ntext/troff\t\t\t\t\tt tr roff man me ms\ntext/turtle\t\t\t\t\tttl\ntext/uri-list\t\t\t\t\turi uris urls\ntext/vcard\t\t\t\t\tvcard\ntext/vnd.curl\t\t\t\t\tcurl\ntext/vnd.curl.dcurl\t\t\t\tdcurl\ntext/vnd.curl.mcurl\t\t\t\tmcurl\ntext/vnd.curl.scurl\t\t\t\tscurl\ntext/vnd.dvb.subtitle\t\t\t\tsub\ntext/vnd.fly\t\t\t\t\tfly\ntext/vnd.fmi.flexstor\t\t\t\tflx\ntext/vnd.graphviz\t\t\t\tgv\ntext/vnd.in3d.3dml\t\t\t\t3dml\ntext/vnd.in3d.spot\t\t\t\tspot\ntext/vnd.sun.j2me.app-descriptor\t\tjad\ntext/vnd.wap.wml\t\t\t\twml\ntext/vnd.wap.wmlscript\t\t\t\twmls\ntext/x-asm\t\t\t\t\ts asm\ntext/x-c\t\t\t\t\tc cc cxx cpp h hh dic\ntext/x-fortran\t\t\t\t\tf for f77 f90\ntext/x-java-source\t\t\t\tjava\ntext/x-nfo\t\t\t\t\tnfo\ntext/x-opml\t\t\t\t\topml\ntext/x-pascal\t\t\t\t\tp pas\ntext/x-setext\t\t\t\t\tetx\ntext/x-sfv\t\t\t\t\tsfv\ntext/x-uuencode\t\t\t\t\tuu\ntext/x-vcalendar\t\t\t\tvcs\ntext/x-vcard\t\t\t\t\tvcf\nvideo/3gpp\t\t\t\t\t3gp\nvideo/3gpp2\t\t\t\t\t3g2\nvideo/h261\t\t\t\t\th261\nvideo/h263\t\t\t\t\th263\nvideo/h264\t\t\t\t\th264\nvideo/jpeg\t\t\t\t\tjpgv\nvideo/jpm\t\t\t\t\tjpm jpgm\nvideo/mj2\t\t\t\t\tmj2 mjp2\nvideo/mp4\t\t\t\t\tmp4 mp4v mpg4\nvideo/mpeg\t\t\t\t\tmpeg mpg mpe m1v m2v\nvideo/ogg\t\t\t\t\togv\nvideo/quicktime\t\t\t\t\tqt mov\nvideo/vnd.dece.hd\t\t\t\tuvh uvvh\nvideo/vnd.dece.mobile\t\t\t\tuvm uvvm\nvideo/vnd.dece.pd\t\t\t\tuvp uvvp\nvideo/vnd.dece.sd\t\t\t\tuvs uvvs\nvideo/vnd.dece.video\t\t\t\tuvv uvvv\nvideo/vnd.dvb.file\t\t\t\tdvb\nvideo/vnd.fvt\t\t\t\t\tfvt\nvideo/vnd.mpegurl\t\t\t\tmxu m4u\nvideo/vnd.ms-playready.media.pyv\t\tpyv\nvideo/vnd.uvvu.mp4\t\t\t\tuvu uvvu\nvideo/vnd.vivo\t\t\t\t\tviv\nvideo/webm\t\t\t\t\twebm\nvideo/x-f4v\t\t\t\t\tf4v\nvideo/x-fli\t\t\t\t\tfli\nvideo/x-flv\t\t\t\t\tflv\nvideo/x-m4v\t\t\t\t\tm4v\nvideo/x-matroska\t\t\t\tmkv mk3d mks\nvideo/x-mng\t\t\t\t\tmng\nvideo/x-ms-asf\t\t\t\t\tasf asx\nvideo/x-ms-vob\t\t\t\t\tvob\nvideo/x-ms-wm\t\t\t\t\twm\nvideo/x-ms-wmv\t\t\t\t\twmv\nvideo/x-ms-wmx\t\t\t\t\twmx\nvideo/x-ms-wvx\t\t\t\t\twvx\nvideo/x-msvideo\t\t\t\t\tavi\nvideo/x-sgi-movie\t\t\t\tmovie\nvideo/x-smv\t\t\t\t\tsmv\nx-conference/x-cooltalk\t\t\t\tice\n";

const map$1 = new Map();

mime_raw.split('\n').forEach((row) => {
	const match = /(.+?)\t+(.+)/.exec(row);
	if (!match) return;

	const type = match[1];
	const extensions = match[2].split(' ');

	extensions.forEach(ext => {
		map$1.set(ext, type);
	});
});

function lookup(file) {
	const match = /\.([^\.]+)$/.exec(file);
	return match && map$1.get(match[1]);
}

function middleware(opts


 = {}) {
	const { session, ignore } = opts;

	let emitted_basepath = false;

	return compose_handlers(ignore, [
		(req, res, next) => {
			if (req.baseUrl === undefined) {
				let { originalUrl } = req;
				if (req.url === '/' && originalUrl[originalUrl.length - 1] !== '/') {
					originalUrl += '/';
				}

				req.baseUrl = originalUrl
					? originalUrl.slice(0, -req.url.length)
					: '';
			}

			if (!emitted_basepath && process.send) {
				process.send({
					__sapper__: true,
					event: 'basepath',
					basepath: req.baseUrl
				});

				emitted_basepath = true;
			}

			if (req.path === undefined) {
				req.path = req.url.replace(/\?.*/, '');
			}

			next();
		},

		fs.existsSync(path.join(build_dir, 'service-worker.js')) && serve({
			pathname: '/service-worker.js',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		fs.existsSync(path.join(build_dir, 'service-worker.js.map')) && serve({
			pathname: '/service-worker.js.map',
			cache_control: 'no-cache, no-store, must-revalidate'
		}),

		serve({
			prefix: '/client/',
			cache_control:  'max-age=31536000, immutable'
		}),

		get_server_route_handler(manifest.server_routes),

		get_page_handler(manifest, session || noop$1)
	].filter(Boolean));
}

function compose_handlers(ignore, handlers) {
	const total = handlers.length;

	function nth_handler(n, req, res, next) {
		if (n >= total) {
			return next();
		}

		handlers[n](req, res, () => nth_handler(n+1, req, res, next));
	}

	return !ignore
		? (req, res, next) => nth_handler(0, req, res, next)
		: (req, res, next) => {
			if (should_ignore(req.path, ignore)) {
				next();
			} else {
				nth_handler(0, req, res, next);
			}
		};
}

function should_ignore(uri, val) {
	if (Array.isArray(val)) return val.some(x => should_ignore(uri, x));
	if (val instanceof RegExp) return val.test(uri);
	if (typeof val === 'function') return val(uri);
	return uri.startsWith(val.charCodeAt(0) === 47 ? val : `/${val}`);
}

function serve({ prefix, pathname, cache_control }



) {
	const filter = pathname
		? (req) => req.path === pathname
		: (req) => req.path.startsWith(prefix);

	const cache = new Map();

	const read =  (file) => (cache.has(file) ? cache : cache.set(file, fs.readFileSync(path.resolve(build_dir, file)))).get(file);

	return (req, res, next) => {
		if (filter(req)) {
			const type = lookup(req.path);

			try {
				const file = decodeURIComponent(req.path.slice(1));
				const data = read(file);

				res.setHeader('Content-Type', type);
				res.setHeader('Cache-Control', cache_control);
				res.end(data);
			} catch (err) {
				res.statusCode = 404;
				res.end('not found');
			}
		} else {
			next();
		}
	};
}

function noop$1(){}

var sapper = /*#__PURE__*/Object.freeze({
    __proto__: null,
    middleware: middleware
});

require('source-map-support').install();

const {start} = require("../../../server/dist/app");

start(sapper);
