import { S as SvelteComponentDev, i as init, d as dispatch_dev, O as countryUrl, s as safe_not_equal, x as stores$1, y as stores, z as validate_store, A as component_subscribe, B as canonical, C as create_component, D as claim_component, E as mount_component, p as transition_in, v as transition_out, F as destroy_component, e as element, H as text, a as space, b as claim_element, h as children, I as claim_text, f as detach_dev, g as claim_space, k as add_location, m as insert_dev, l as append_dev, J as set_data_dev } from './client.f0bfb798.js';
import { P as Page } from './Page.954f1068.js';
import { R as RadioList } from './RadioList.cd4ca0bb.js';

/* src/routes/[langCountry([a-z]{2}-[a-z]{2})]/index.svelte generated by Svelte v3.18.2 */
const file = "src/routes/[langCountry([a-z]{2}-[a-z]{2})]/index.svelte";

// (42:0) <Page {meta}>
function create_default_slot(ctx) {
	let h1;

	let t0_value = /*$trans*/ ctx[5]("countryIndex.title", {
		country: /*$trans*/ ctx[5](`countries.${/*$countryCode*/ ctx[6]}`)
	}) + "";

	let t0;
	let t1;
	let current;

	const radiolist = new RadioList({
			props: {
				url: /*url*/ ctx[0],
				apiUrl: /*apiUrl*/ ctx[1],
				stations: /*stations*/ ctx[2],
				paging: /*paging*/ ctx[3]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			create_component(radiolist.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, t0_value);
			h1_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			claim_component(radiolist.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			add_location(h1, file, 42, 2, 1211);
		},
		m: function mount(target, anchor) {
			insert_dev(target, h1, anchor);
			append_dev(h1, t0);
			insert_dev(target, t1, anchor);
			mount_component(radiolist, target, anchor);
			current = true;
		},
		p: function update(ctx, dirty) {
			if ((!current || dirty & /*$trans, $countryCode*/ 96) && t0_value !== (t0_value = /*$trans*/ ctx[5]("countryIndex.title", {
				country: /*$trans*/ ctx[5](`countries.${/*$countryCode*/ ctx[6]}`)
			}) + "")) set_data_dev(t0, t0_value);

			const radiolist_changes = {};
			if (dirty & /*url*/ 1) radiolist_changes.url = /*url*/ ctx[0];
			if (dirty & /*apiUrl*/ 2) radiolist_changes.apiUrl = /*apiUrl*/ ctx[1];
			if (dirty & /*stations*/ 4) radiolist_changes.stations = /*stations*/ ctx[2];
			if (dirty & /*paging*/ 8) radiolist_changes.paging = /*paging*/ ctx[3];
			radiolist.$set(radiolist_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(radiolist.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(radiolist.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(h1);
			if (detaching) detach_dev(t1);
			destroy_component(radiolist, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(42:0) <Page {meta}>",
		ctx
	});

	return block;
}

function create_fragment(ctx) {
	let current;

	const page_1 = new Page({
			props: {
				meta: /*meta*/ ctx[4],
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(page_1.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(page_1.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(page_1, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const page_1_changes = {};
			if (dirty & /*meta*/ 16) page_1_changes.meta = /*meta*/ ctx[4];

			if (dirty & /*$$scope, url, apiUrl, stations, paging, $trans, $countryCode*/ 4207) {
				page_1_changes.$$scope = { dirty, ctx };
			}

			page_1.$set(page_1_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(page_1.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(page_1.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(page_1, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

async function preload($page, $session) {
	const [lang, countryCode] = $page.params.langCountry.split("-");
	const url = countryUrl({ lang, countryCode });
	const apiUrl = `/api/stations/${countryCode}`;
	const json = await this.fetch(apiUrl + "?page=" + ($page.query.page || 1)).then(res => res.json());

	return {
		url,
		apiUrl,
		stations: json.items,
		paging: json.paging
	};
}

function instance($$self, $$props, $$invalidate) {
	let $trans;
	let $countryCode;
	let $lang;
	const { page } = stores$1();
	const { trans, lang, countryCode } = stores();
	validate_store(trans, "trans");
	component_subscribe($$self, trans, value => $$invalidate(5, $trans = value));
	validate_store(lang, "lang");
	component_subscribe($$self, lang, value => $$invalidate(10, $lang = value));
	validate_store(countryCode, "countryCode");
	component_subscribe($$self, countryCode, value => $$invalidate(6, $countryCode = value));
	let { url } = $$props;
	let { apiUrl } = $$props;
	let { stations } = $$props;
	let { paging } = $$props;
	const writable_props = ["url", "apiUrl", "stations", "paging"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ("url" in $$props) $$invalidate(0, url = $$props.url);
		if ("apiUrl" in $$props) $$invalidate(1, apiUrl = $$props.apiUrl);
		if ("stations" in $$props) $$invalidate(2, stations = $$props.stations);
		if ("paging" in $$props) $$invalidate(3, paging = $$props.paging);
	};

	$$self.$capture_state = () => {
		return {
			url,
			apiUrl,
			stations,
			paging,
			meta,
			$trans,
			$countryCode,
			$lang
		};
	};

	$$self.$inject_state = $$props => {
		if ("url" in $$props) $$invalidate(0, url = $$props.url);
		if ("apiUrl" in $$props) $$invalidate(1, apiUrl = $$props.apiUrl);
		if ("stations" in $$props) $$invalidate(2, stations = $$props.stations);
		if ("paging" in $$props) $$invalidate(3, paging = $$props.paging);
		if ("meta" in $$props) $$invalidate(4, meta = $$props.meta);
		if ("$trans" in $$props) trans.set($trans = $$props.$trans);
		if ("$countryCode" in $$props) countryCode.set($countryCode = $$props.$countryCode);
		if ("$lang" in $$props) lang.set($lang = $$props.$lang);
	};

	let meta;

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*$trans, $countryCode, $lang*/ 1120) {
			 $$invalidate(4, meta = {
				title: $trans("countryIndex.head.title", {
					country: $trans(`countries.${$countryCode}`)
				}),
				desc: $trans("countryIndex.head.desc", {
					country: $trans(`countries.${$countryCode}`)
				}),
				canonical: canonical(countryUrl({ lang: $lang, countryCode: $countryCode }))
			});
		}
	};

	return [
		url,
		apiUrl,
		stations,
		paging,
		meta,
		$trans,
		$countryCode,
		trans,
		lang,
		countryCode
	];
}

class U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			url: 0,
			apiUrl: 1,
			stations: 2,
			paging: 3
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*url*/ ctx[0] === undefined && !("url" in props)) {
			console.warn("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D> was created without expected prop 'url'");
		}

		if (/*apiUrl*/ ctx[1] === undefined && !("apiUrl" in props)) {
			console.warn("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D> was created without expected prop 'apiUrl'");
		}

		if (/*stations*/ ctx[2] === undefined && !("stations" in props)) {
			console.warn("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D> was created without expected prop 'stations'");
		}

		if (/*paging*/ ctx[3] === undefined && !("paging" in props)) {
			console.warn("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D> was created without expected prop 'paging'");
		}
	}

	get url() {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set url(value) {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get apiUrl() {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set apiUrl(value) {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get stations() {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set stations(value) {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get paging() {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set paging(value) {
		throw new Error("<U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5BlangCountry_u5Ba_zu5Du7B2u7D_u5Ba_zu5Du7B2u7D_u5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguNzZlYjlmZmEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvW2xhbmdDb3VudHJ5KFthLXpdezJ9LVthLXpdezJ9KV0vaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQgY29udGV4dD1cIm1vZHVsZVwiPlxuICBpbXBvcnQgeyBjb3VudHJ5VXJsIH0gZnJvbSBcIi9Db21tb24vdXJsc1wiO1xuXG4gIGV4cG9ydCBhc3luYyBmdW5jdGlvbiBwcmVsb2FkKCRwYWdlLCAkc2Vzc2lvbikge1xuICAgIGNvbnN0IFtsYW5nLCBjb3VudHJ5Q29kZV0gPSAkcGFnZS5wYXJhbXMubGFuZ0NvdW50cnkuc3BsaXQoXCItXCIpXG5cbiAgICBjb25zdCB1cmwgPSBjb3VudHJ5VXJsKHtsYW5nLCBjb3VudHJ5Q29kZX0pO1xuICAgIGNvbnN0IGFwaVVybCA9IGAvYXBpL3N0YXRpb25zLyR7Y291bnRyeUNvZGV9YDtcblxuICAgIGNvbnN0IGpzb24gPSBhd2FpdCB0aGlzLmZldGNoKFxuICAgICAgYXBpVXJsICsgXCI/cGFnZT1cIiArICgkcGFnZS5xdWVyeS5wYWdlIHx8IDEpXG4gICAgKS50aGVuKHJlcyA9PiByZXMuanNvbigpKTtcblxuICAgIHJldHVybiB7IHVybCwgYXBpVXJsLCBzdGF0aW9uczoganNvbi5pdGVtcywgcGFnaW5nOiBqc29uLnBhZ2luZyB9O1xuICB9XG48L3NjcmlwdD5cblxuPHNjcmlwdD5cbiAgaW1wb3J0IHsgc3RvcmVzIH0gZnJvbSBcIkBzYXBwZXIvYXBwXCI7XG4gIGNvbnN0IHsgcGFnZSB9ID0gc3RvcmVzKCk7XG5cbiAgaW1wb3J0ICogYXMgaTE4biBmcm9tIFwiL0NvbW1vbi9pMThuXCI7XG4gIGNvbnN0IHsgdHJhbnMsIGxhbmcsIGNvdW50cnlDb2RlIH0gPSBpMThuLnN0b3JlcygpO1xuXG4gIGltcG9ydCBQYWdlIGZyb20gXCIvQ29tcG9uZW50cy9QYWdlLnN2ZWx0ZVwiO1xuICBpbXBvcnQgUmFkaW9MaXN0IGZyb20gXCIvQ29tcG9uZW50cy9SYWRpb0xpc3Quc3ZlbHRlXCI7XG5cbiAgZXhwb3J0IGxldCB1cmw7XG4gIGV4cG9ydCBsZXQgYXBpVXJsO1xuICBleHBvcnQgbGV0IHN0YXRpb25zO1xuICBleHBvcnQgbGV0IHBhZ2luZztcblxuICBpbXBvcnQge2Nhbm9uaWNhbH0gZnJvbSBcIi9Db21tb24vdXJsc1wiO1xuXG4gICQ6IG1ldGEgPSB7XG4gICAgdGl0bGU6ICR0cmFucyhcImNvdW50cnlJbmRleC5oZWFkLnRpdGxlXCIsIHtjb3VudHJ5OiAkdHJhbnMoYGNvdW50cmllcy4keyRjb3VudHJ5Q29kZX1gKX0pLFxuICAgIGRlc2M6ICR0cmFucyhcImNvdW50cnlJbmRleC5oZWFkLmRlc2NcIiwge2NvdW50cnk6ICR0cmFucyhgY291bnRyaWVzLiR7JGNvdW50cnlDb2RlfWApfSksXG4gICAgY2Fub25pY2FsOiBjYW5vbmljYWwoY291bnRyeVVybCh7bGFuZzogJGxhbmcsIGNvdW50cnlDb2RlOiAkY291bnRyeUNvZGV9KSlcbiAgfTtcbjwvc2NyaXB0PlxuXG48UGFnZSB7bWV0YX0+XG4gIDxoMT5cbiAgICB7JHRyYW5zKCdjb3VudHJ5SW5kZXgudGl0bGUnLCB7XG4gICAgICBjb3VudHJ5OiAkdHJhbnMoYGNvdW50cmllcy4keyRjb3VudHJ5Q29kZX1gKVxuICAgIH0pfVxuICA8L2gxPlxuICA8UmFkaW9MaXN0IHt1cmx9IHthcGlVcmx9IHtzdGF0aW9uc30ge3BhZ2luZ30gLz5cbjwvUGFnZT5cbiJdLCJuYW1lcyI6WyJzdG9yZXMiLCJpMThuLnN0b3JlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7MkJBMkNLLEdBQU0sSUFBQyxvQkFBb0I7RUFDMUIsT0FBTyxhQUFFLEdBQU0sa0NBQWMsR0FBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2dHQUQxQyxHQUFNLElBQUMsb0JBQW9CO0lBQzFCLE9BQU8sYUFBRSxHQUFNLGtDQUFjLEdBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O2VBekN2QixPQUFPLENBQUMsS0FBSyxFQUFFLFFBQVE7UUFDcEMsSUFBSSxFQUFFLFdBQVcsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRztPQUV4RCxHQUFHLEdBQUcsVUFBVSxHQUFFLElBQUksRUFBRSxXQUFXO09BQ25DLE1BQU0sb0JBQW9CLFdBQVc7T0FFckMsSUFBSSxTQUFTLElBQUksQ0FBQyxLQUFLLENBQzNCLE1BQU0sR0FBRyxRQUFRLElBQUksS0FBSyxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksQ0FBQyxHQUMxQyxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxJQUFJOzs7RUFFYixHQUFHO0VBQUUsTUFBTTtFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsS0FBSztFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsTUFBTTs7Ozs7Ozs7U0FYekQsSUFBSSxLQUFLQSxRQUFNO1NBR2YsS0FBSyxFQUFFLElBQUksRUFBRSxXQUFXLEtBQUtDLE1BQVc7Ozs7Ozs7T0FLckMsR0FBRztPQUNILE1BQU07T0FDTixRQUFRO09BQ1IsTUFBTTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQUlkLElBQUk7SUFDTCxLQUFLLEVBQUUsTUFBTSxDQUFDLHlCQUF5QjtLQUFHLE9BQU8sRUFBRSxNQUFNLGNBQWMsWUFBWTs7SUFDbkYsSUFBSSxFQUFFLE1BQU0sQ0FBQyx3QkFBd0I7S0FBRyxPQUFPLEVBQUUsTUFBTSxjQUFjLFlBQVk7O0lBQ2pGLFNBQVMsRUFBRSxTQUFTLENBQUMsVUFBVSxHQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsV0FBVyxFQUFFLFlBQVk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
