.tabs.svelte-j3h0p8{display:flex;flex-direction:column;overflow:hidden}
.tab-list.svelte-xtixxl{overflow:hidden;display:flex;overflow:hidden}.scroll.svelte-xtixxl{flex:none;display:flex;flex-direction:row;align-items:center;transition:transform 200ms ease}.underline.svelte-xtixxl{position:absolute;bottom:0;transition:transform 200ms ease, width 200ms ease;height:2px;background-color:var(--primary-color)}
.tab-panel.svelte-kmq3fq{flex:none;align-self:flex-start;transition:opacity 500ms ease;opacity:0}.selected.svelte-kmq3fq{opacity:1}
.tab-panel-list.svelte-1g44aop{display:flex;overflow:hidden;transition:height 200ms ease}.scroll.svelte-1g44aop{flex:none;display:flex;flex-direction:row;flex-wrap:nowrap;transition:transform 200ms ease}
.tab.svelte-m8jp4c.svelte-m8jp4c{flex:none;padding:0.5em 0.25em 0.4em 0.25em;display:flex;transition:color 200ms ease;user-select:none;cursor:pointer;margin:0 0.4em;border-bottom:2px solid transparent}.selected.svelte-m8jp4c.svelte-m8jp4c{color:var(--primary-color)}.tab.svelte-m8jp4c>span.svelte-m8jp4c{margin:0.25em}
.programming.svelte-1e8g7tm{box-shadow:rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;background:#fff;border-radius:4px;display:flex;flex-direction:column}.label.svelte-1e8g7tm{flex:none;font-size:1.1em;padding:1em 1.25em;border-bottom:rgba(231,231,231) 1px solid}.day.svelte-1e8g7tm{}table.svelte-1e8g7tm{width:100%;border-collapse:collapse;border:none}.time.svelte-1e8g7tm{white-space:nowrap;text-align:center}.name.svelte-1e8g7tm{width:100%}td.svelte-1e8g7tm{padding:0.6em 0.75em}tr.svelte-1e8g7tm:nth-child(odd){background:rgb(61, 90, 254, 0.1)}
a.svelte-1hzmx5g{color:var(--primary-color)}.signals.svelte-1hzmx5g{box-shadow:rgba(0, 0, 0, 0.14) 0px 1px 1px 0px, rgba(0, 0, 0, 0.12) 0px 2px 1px -1px, rgba(0, 0, 0, 0.2) 0px 1px 3px 0px;background:#fff;border-radius:4px;display:flex;flex-direction:column}.title.svelte-1hzmx5g{flex:none;font-size:1.1em;padding:1em 1.25em;border-bottom:rgba(231,231,231) 1px solid}.list.svelte-1hzmx5g{display:flex;flex-direction:column}.item.svelte-1hzmx5g{display:flex;flex-direction:row;padding:1em 1.5em}.item.svelte-1hzmx5g:nth-child(odd):not(:only-child){background:rgb(61, 90, 254, 0.1)}.region.svelte-1hzmx5g{flex:1}
.stateicon.svelte-1wgz2wf{display:flex}
.tag.svelte-1ij20n4{font-size:0.7em;text-transform:lowercase;background-color:#e2e2e2;border-radius:100px;padding:0.5em 1em;white-space:nowrap}
.title-image.svelte-8y35po.svelte-8y35po{display:flex;flex-direction:row;align-items:center;padding:3rem 2.5rem}.image.svelte-8y35po.svelte-8y35po{--width:96px;width:var(--width);border-radius:4px;margin-right:1.5rem;flex:none;box-shadow:0 0 5px rgba(0,0,0,0.2)}.title.svelte-8y35po.svelte-8y35po{margin:0}.playline.svelte-8y35po.svelte-8y35po{border-bottom:rgba(0,0,0,0.15) 1px solid;margin-top:2.5rem}.play.svelte-8y35po.svelte-8y35po{background:var(--primary-color);color:#fff;height:5rem;width:5rem;margin:-2.5rem auto 2.5rem auto;border-radius:2.5rem;cursor:pointer;box-shadow:#000 0 0 2px 0;display:flex}.playicon.svelte-8y35po.svelte-8y35po{display:flex;margin:auto;flex:none;filter:drop-shadow(#000 0 0 2px)}.content.svelte-8y35po.svelte-8y35po{padding:0 2.5rem}p.svelte-8y35po.svelte-8y35po{font-size:1.125em;line-height:2em;padding:0 1em}p.svelte-8y35po.svelte-8y35po:first-child{margin-top:0}.desc.svelte-8y35po.svelte-8y35po{margin-bottom:2em}.desc.svelte-8y35po.svelte-8y35po>b{display:block;margin-top:2em}.label.svelte-8y35po.svelte-8y35po{opacity:0.5;margin-right:0.5em}.data-wrap.svelte-8y35po.svelte-8y35po{margin-top:2em}.data.svelte-8y35po a.svelte-8y35po{text-decoration:none;color:var(--primary-color)}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */